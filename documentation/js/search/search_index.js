var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.266,1,0.935]],["body/components/AppComponent.html",[0,0.42,1,1.582,2,1.307,3,0.246,4,0.217,5,1.091,6,1.091,7,1.091,8,0.217,9,3.1,10,0.97,11,2.129,12,1.892,13,2.263,14,1.471,15,4.18,16,1.478,17,4.911,18,1.471,19,4.911,20,1.561,21,4.911,22,0.338,23,0.687,24,2.25,25,1.026,26,2.739,27,1.572,28,3.644,29,4.342,30,1.161,31,4.911,32,0.86,33,0.023,34,0.332,35,0.372,36,0.81,37,3.644,38,0.761,39,1.561,40,0.51,41,0.913,42,0.97,43,4.178,44,4.178,45,1.03,46,0.548,47,1.229,48,4.178,49,2.474,50,1.158,51,3.1,52,3.644,53,3.644,54,3.644,55,0.246,56,0.587,57,1.931,58,3.644,59,1.091,60,1.471,61,1.471,62,1.091,63,1.781,64,1.091,65,1.091,66,0.913,67,1.091,68,1.471,69,0.913,70,1.091,71,0.97,72,1.091,73,0.97,74,1.091,75,0.97,76,1.091,77,0.97,78,1.091,79,1.091,80,0.97,81,1.091,82,1.091,83,0.913,84,1.029,85,1.091,86,0.97,87,1.091,88,0.913,89,1.091,90,0.97,91,1.091,92,0.913,93,1.091,94,0.97,95,1.091,96,0.913,97,1.029,98,1.029,99,1.091,100,0.016,101,0.016]],["title/components/AuthLayoutComponent.html",[0,0.266,66,0.881]],["body/components/AuthLayoutComponent.html",[0,0.442,1,1.075,2,1.399,3,0.273,4,0.241,5,1.209,6,1.209,7,1.209,8,0.241,10,1.075,11,2.152,12,1.912,14,1.575,15,4.399,16,1.648,18,1.575,20,1.671,33,0.023,34,0.314,45,0.998,46,0.607,47,1.362,55,0.273,56,0.651,59,1.209,60,1.575,61,1.575,62,1.209,63,1.855,64,1.209,65,1.209,66,1.552,67,2.008,68,1.575,69,1.012,70,1.209,71,1.075,72,1.209,73,1.075,74,1.209,75,1.075,76,1.209,77,1.075,78,1.209,79,1.209,80,1.075,81,1.209,82,1.209,83,1.012,84,1.14,85,1.209,86,1.075,87,1.209,88,1.012,89,1.209,90,1.648,91,1.209,92,1.012,93,1.209,94,1.075,95,1.209,96,1.012,97,1.14,98,1.14,99,1.209,100,0.017,101,0.017,102,3.436,103,3.436,104,3.039,105,4.473,106,4.473,107,4.473,108,3.436,109,3.436]],["title/injectables/AuthService.html",[110,0.992,111,1.861]],["body/injectables/AuthService.html",[3,0.249,4,0.22,8,0.22,13,1.696,22,0.341,23,0.691,25,1.033,27,1.588,30,1.424,32,1.514,33,0.024,34,0.383,35,0.496,36,1.425,38,1.369,39,1.571,41,0.923,42,0.979,45,1.033,46,0.553,47,1.241,55,0.249,56,0.593,57,1.95,100,0.016,101,0.016,110,1.396,111,2.62,112,1.696,113,3.131,114,1.883,115,3.192,116,4.944,117,5.583,118,5.583,119,4.944,120,4.944,121,4.206,122,4.944,123,4.944,124,2.104,125,2.945,126,3.68,127,3.68,128,3.68,129,3.68,130,4.492,131,3.68,132,6.228,133,3.666,134,3.68,135,3.68,136,3.68,137,3.68,138,3.68,139,3.68,140,3.68,141,3.68,142,2.104,143,3.68,144,3.68,145,2.104,146,1.241,147,1.95,148,1.95,149,2.283,150,3.68,151,3.131,152,2.769,153,1.815,154,2.769,155,2.769,156,3.68,157,3.68,158,2.23,159,3.68,160,3.68,161,3.68,162,3.68,163,3.68,164,3.68,165,3.68,166,3.68,167,3.68,168,3.68,169,3.131,170,3.68,171,3.68,172,3.68,173,3.68,174,3.68,175,3.68]],["title/components/BlankLayoutComponent.html",[0,0.266,69,0.881]],["body/components/BlankLayoutComponent.html",[0,0.442,1,1.073,2,1.397,3,0.272,4,0.241,5,1.207,6,1.207,7,1.207,8,0.241,10,1.073,11,2.152,12,1.912,14,1.573,15,4.395,16,1.646,18,1.573,20,1.669,33,0.023,34,0.313,45,0.997,46,0.606,47,1.359,55,0.272,56,0.649,59,1.207,60,1.573,61,1.573,62,1.207,63,1.853,64,1.207,65,1.207,66,1.011,67,1.207,68,1.573,69,1.551,70,2.007,71,1.073,72,1.207,73,1.073,74,1.207,75,1.073,76,1.207,77,1.073,78,1.207,79,1.207,80,1.073,81,1.207,82,1.207,83,1.011,84,1.138,85,1.207,86,1.073,87,1.207,88,1.011,89,1.207,90,1.646,91,1.207,92,1.011,93,1.207,94,1.073,95,1.207,96,1.011,97,1.138,98,1.138,99,1.207,100,0.017,101,0.017,104,3.033,105,4.467,106,4.467,107,4.467,108,3.429,109,3.429,176,3.429,177,3.429]],["title/components/BrandsComponent.html",[0,0.266,71,0.935]],["body/components/BrandsComponent.html",[0,0.381,1,0.807,2,1.15,3,0.205,4,0.181,5,0.908,6,0.908,7,0.908,8,0.181,10,0.807,11,2.084,12,1.851,14,1.295,16,0.807,18,1.295,20,1.374,22,0.467,23,0.604,25,0.903,26,2.531,30,1.298,32,0.716,33,0.024,34,0.301,35,0.229,36,0.673,38,1.052,39,1.745,41,1.377,42,1.461,45,0.973,46,0.456,50,0.963,55,0.205,56,0.488,59,0.908,60,1.295,61,1.295,62,0.908,63,1.645,64,0.908,65,0.908,66,0.76,67,0.908,68,1.295,69,0.76,70,0.908,71,1.461,72,0.908,73,0.807,74,0.908,75,0.807,76,0.908,77,0.807,78,0.908,79,0.908,80,0.807,81,0.908,82,0.908,83,0.76,84,0.856,85,0.908,86,0.807,87,0.908,88,0.76,89,0.908,90,0.807,91,0.908,92,0.76,93,0.908,94,0.807,95,0.908,96,0.76,97,0.856,98,0.856,99,0.908,100,0.014,101,0.014,114,1.699,146,1.022,178,2.579,179,1.865,180,2.485,181,3.677,182,4.286,183,3.677,184,1.645,185,4.322,186,4.322,187,6.213,188,2.04,189,3.421,190,5.038,191,4.286,192,4.673,193,3.677,194,3.031,195,3.031,196,4.322,197,3.943,198,3.031,199,2.531,200,2.669,201,3.031,202,3.031,203,3.031,204,3.677,205,3.031,206,3.253,207,3.031,208,1.022,209,2.579,210,2.579,211,3.031,212,3.031,213,3.031,214,3.031,215,2.281,216,2.579,217,3.031,218,3.031,219,3.031,220,2.579,221,1.154,222,3.031,223,2.579,224,4.322,225,2.298,226,2.471,227,4.322,228,4.322,229,4.322,230,4.322]],["title/injectables/BrandsService.html",[110,0.992,189,2.386]],["body/injectables/BrandsService.html",[3,0.31,4,0.274,8,0.274,13,2.113,22,0.425,25,1.191,27,1.979,30,1.296,32,1.346,33,0.023,34,0.34,35,0.431,36,1.267,38,1.191,40,0.797,45,1.045,46,0.689,55,0.31,56,0.739,57,2.43,100,0.018,101,0.018,110,1.609,112,2.113,124,2.621,125,3.356,133,3.546,145,2.621,147,2.43,148,2.43,149,2.845,153,2.262,158,2.041,189,3.871,192,5.277,231,3.901,232,5.7,233,4.585,234,4.585,235,4.585,236,2.812,237,4.585,238,1.642,239,4.585,240,4.585,241,4.585,242,3.901,243,4.585]],["title/components/CartComponent.html",[0,0.266,73,0.935]],["body/components/CartComponent.html",[0,0.267,1,0.456,2,0.743,3,0.116,4,0.102,5,0.513,6,0.513,7,0.513,8,0.102,10,0.456,11,1.898,12,1.686,14,0.836,16,0.456,18,0.836,20,0.887,22,0.159,23,0.39,24,2.214,25,0.583,26,1.877,30,1.283,32,0.834,33,0.024,34,0.268,35,0.364,36,0.785,38,1.005,39,1.612,40,0.765,41,1.371,42,1.455,45,0.852,46,0.258,47,0.578,50,0.887,55,0.116,56,0.276,59,0.513,60,0.836,61,0.836,62,0.513,63,1.22,64,0.513,65,0.513,66,0.43,67,0.513,68,0.836,69,0.43,70,0.513,71,0.456,72,0.513,73,1.084,74,0.513,75,0.456,76,0.513,77,0.456,78,0.513,79,0.513,80,0.456,81,0.513,82,0.513,83,0.43,84,0.484,85,0.513,86,0.456,87,0.513,88,0.43,89,0.513,90,0.456,91,0.513,92,0.43,93,0.513,94,0.456,95,0.513,96,0.43,97,0.484,98,0.484,99,0.513,100,0.009,101,0.009,114,1.844,115,2.329,142,1.596,146,0.578,158,0.614,179,1.205,180,1.743,184,1.345,188,2.214,200,2.897,206,3.065,208,0.578,221,1.345,225,2.45,226,1.596,238,1,244,1.458,245,3.619,246,3.006,247,2.792,248,2.792,249,3.533,250,3.533,251,2.009,252,4.485,253,4.485,254,3.533,255,3.533,256,3.006,257,4.073,258,3.466,259,2.792,260,2.792,261,2.792,262,1.713,263,1.713,264,2.792,265,1.713,266,2.101,267,1.713,268,2.792,269,1.713,270,2.792,271,1.936,272,1.265,273,3.533,274,3.533,275,1.713,276,1.713,277,1.431,278,2.02,279,1.877,280,2.02,281,3.28,282,1.431,283,1.431,284,2.02,285,1.713,286,1.732,287,1.713,288,1.713,289,1.713,290,1.713,291,1.713,292,1.713,293,1.896,294,1.713,295,0.79,296,1.164,297,1.063,298,1.713,299,1.458,300,1.063,301,0.845,302,1.713,303,1.713,304,1.458,305,1.525,306,1.286,307,1.713,308,3.533,309,2.792,310,2.372,311,0.79,312,0.98,313,3.533,314,1.713,315,2.216,316,1.063,317,1.896,318,2.192,319,1.713,320,2.792,321,3.006,322,2.792,323,2.792,324,3.006,325,2.792,326,2.792,327,1.713,328,1.713,329,1.713,330,3.533,331,2.792,332,3.619,333,3.533,334,1.713,335,1.713,336,1.713,337,1.713,338,1.713,339,2.792,340,3.533,341,3.533,342,5.08,343,3.533,344,3.533,345,2.658,346,1.713,347,3.533,348,1.713,349,1.713,350,1.713,351,1.713,352,1.713,353,1.713,354,2.792,355,1.713,356,1.713,357,1.458,358,1.289,359,1.164,360,1.164,361,1.713,362,1.713,363,1.713,364,1.164,365,1.713,366,1.713,367,1.458,368,2.792,369,2.792,370,2.792,371,4.073,372,4.073,373,2.792,374,2.792,375,2.792,376,2.792,377,2.792,378,2.792,379,2.792,380,2.792,381,2.792,382,2.792,383,2.792,384,2.792,385,2.792,386,2.792,387,2.792,388,2.792,389,2.792]],["title/interfaces/CartItem.html",[390,0.781,391,1.861]],["body/interfaces/CartItem.html",[3,0.29,4,0.256,8,0.256,22,0.397,23,0.764,24,1.737,33,0.023,34,0.326,35,0.479,40,1.011,55,0.442,100,0.017,101,0.017,199,1.977,271,1.851,272,2.508,277,2.814,278,2.453,279,1.977,280,2.453,282,1.737,283,1.737,284,2.453,301,2.116,390,1.454,391,3.188,392,1.737,393,2.453,394,3.621,395,2.734,396,3.171,397,2.116,398,2.753,399,2.116,400,2.436,401,2.359,402,1.851]],["title/injectables/CartService.html",[110,0.992,251,1.733]],["body/injectables/CartService.html",[3,0.24,4,0.212,8,0.212,13,1.636,22,0.329,23,0.675,25,1.008,27,1.532,30,1.38,32,1.389,33,0.024,34,0.351,35,0.48,36,1.307,38,1.285,40,0.937,41,1.21,42,1.284,45,0.948,46,0.533,55,0.24,56,0.572,57,1.881,100,0.015,101,0.015,110,1.362,112,1.636,124,2.029,125,3.13,133,3.828,145,2.029,147,1.881,148,1.881,149,2.202,153,1.751,158,2.203,200,1.881,238,2.106,251,2.38,258,5.004,271,2.538,272,1.963,394,2.029,403,3.02,404,4.663,405,4.663,406,3.631,407,5.882,408,4.825,409,4.825,410,3.549,411,3.631,412,3.549,413,3.549,414,3.549,415,4.825,416,3.549,417,4.825,418,3.549,419,5.481,420,4.825,421,3.549,422,3.631,423,3.549,424,3.549,425,3.549,426,3.549,427,3.02,428,6.151,429,4.629,430,6.151,431,3.549,432,3.549,433,3.549,434,3.549,435,3.549]],["title/components/CategoriesComponent.html",[0,0.266,75,0.935]],["body/components/CategoriesComponent.html",[0,0.375,1,0.783,2,1.126,3,0.199,4,0.176,5,0.881,6,0.881,7,0.881,8,0.176,10,0.783,11,2.076,12,1.844,14,1.267,16,0.783,18,1.267,20,1.344,22,0.459,23,0.592,25,0.884,26,2.497,30,1.317,32,0.695,33,0.024,34,0.296,35,0.223,36,0.654,38,1.035,39,1.722,41,1.439,42,1.527,45,0.963,46,0.442,50,0.935,55,0.199,56,0.474,59,0.881,60,1.267,61,1.267,62,0.881,63,1.623,64,0.881,65,0.881,66,0.738,67,0.881,68,1.267,69,0.738,70,0.881,71,0.783,72,0.881,73,0.783,74,0.881,75,1.442,76,0.881,77,0.783,78,0.881,79,0.881,80,0.783,81,0.881,82,0.881,83,0.738,84,0.831,85,0.881,86,0.783,87,0.881,88,0.738,89,0.881,90,0.783,91,0.881,92,0.738,93,0.881,94,0.783,95,0.881,96,0.738,97,0.831,98,0.831,99,0.881,100,0.014,101,0.014,114,1.671,146,0.992,179,1.826,180,2.444,182,4.215,183,4.215,184,1.886,188,2.006,191,4.215,193,3.6,200,3.041,204,3.6,206,3.184,208,0.992,209,2.503,210,2.503,220,2.503,221,1.886,223,2.503,225,2.062,226,2.419,305,1.27,306,1.356,310,1.451,311,1.356,312,1.682,436,2.503,437,4.634,438,2.873,439,4.231,440,4.231,441,3.362,442,4.215,443,4.955,444,5.418,445,2.942,446,2.942,447,4.231,448,3.362,449,2.942,450,4.61,451,2.942,452,3.6,453,2.942,454,2.942,455,2.942,456,2.942,457,2.503,458,2.503,459,2.503,460,2.503,461,2.942,462,2.942,463,2.942,464,4.231,465,3.6,466,4.231,467,4.231,468,4.231]],["title/injectables/CategoriesService.html",[110,0.992,441,2.18]],["body/injectables/CategoriesService.html",[3,0.319,4,0.281,8,0.281,13,2.172,22,0.437,25,1.211,27,2.034,30,1.312,32,1.369,33,0.023,34,0.346,35,0.439,36,1.288,38,1.211,40,0.811,45,1.012,46,0.708,55,0.319,56,0.759,57,2.497,100,0.019,101,0.019,110,1.637,112,2.172,124,2.694,125,3.232,133,3.59,145,2.694,147,2.497,153,2.325,154,3.547,158,2.076,238,1.688,441,3.597,469,4.01,470,6.28,471,5.798,472,4.713,473,4.713,474,4.713,475,4.713,476,4.713,477,4.713,478,4.713,479,4.713]],["title/interfaces/Category.html",[390,0.781,398,1.423]],["body/interfaces/Category.html",[3,0.29,4,0.256,8,0.256,22,0.397,23,0.764,24,1.737,33,0.023,34,0.39,35,0.479,40,1.021,55,0.442,100,0.017,101,0.017,199,1.977,271,1.851,272,2.396,277,2.814,278,2.453,279,1.977,280,2.453,282,1.737,283,1.737,284,2.453,301,2.116,390,1.454,391,2.896,392,1.737,393,2.453,394,2.453,395,1.851,396,2.772,397,2.116,398,2.787,399,2.116,400,2.436,401,2.823,402,2.734]],["title/interfaces/Category-1.html",[390,0.652,398,1.189,480,1.678]],["body/interfaces/Category-1.html",[3,0.306,4,0.27,8,0.27,22,0.42,23,0.791,24,1.834,33,0.023,34,0.397,35,0.489,40,1.026,55,0.306,100,0.018,101,0.018,199,2.087,238,1.622,271,1.954,272,2.381,277,2.746,282,1.834,283,1.834,390,1.37,392,1.834,395,1.954,397,2.234,398,2.746,399,2.234,400,2.498,401,2.927,402,2.788,481,3.075,482,2.234,483,3.408,484,3.408,485,3.408,486,3.408]],["title/components/CheckOutComponent.html",[0,0.266,77,0.935]],["body/components/CheckOutComponent.html",[0,0.309,1,0.567,2,0.884,3,0.144,4,0.127,5,0.639,6,0.639,7,0.639,8,0.127,10,0.567,11,1.977,12,1.757,14,0.995,16,0.567,18,0.995,20,1.056,22,0.197,23,0.465,25,0.694,26,2.125,27,1.762,30,1.279,33,0.024,34,0.198,35,0.309,38,0.963,39,1.465,40,0.465,41,1.253,42,1.33,45,0.805,46,0.32,47,0.719,50,0.678,55,0.144,56,0.343,59,0.639,60,0.995,61,0.995,62,0.639,63,1.381,64,0.639,65,0.639,66,0.535,67,0.639,68,0.995,69,0.535,70,0.639,71,0.567,72,0.639,73,0.567,74,0.639,75,0.567,76,0.639,77,1.227,78,1.656,79,0.639,80,0.567,81,0.639,82,0.639,83,0.535,84,0.602,85,0.639,86,0.567,87,0.639,88,0.535,89,0.639,90,0.567,91,0.639,92,0.535,93,0.639,94,0.567,95,0.639,96,0.535,97,0.602,98,0.602,99,0.639,100,0.011,101,0.011,114,1.982,146,0.719,158,0.764,179,1.434,180,2.014,184,1.265,208,0.719,221,1.554,225,2.593,238,0.764,245,1.604,266,3.073,305,1.434,306,1.531,310,1.639,311,2.125,315,2.125,345,1.604,359,1.448,360,1.448,438,2.257,487,5.291,488,4.679,489,1.814,490,2.827,491,3.474,492,2.257,493,3.323,494,3.323,495,3.923,496,3.474,497,4.612,498,3.395,499,3.132,500,3.923,501,4.612,502,4.612,503,3.323,504,2.132,505,2.132,506,2.132,507,2.132,508,2.827,509,2.132,510,2.132,511,2.773,512,3.323,513,2.132,514,2.062,515,2.132,516,3.323,517,2.132,518,1.448,519,1.219,520,2.132,521,2.132,522,2.132,523,2.132,524,2.132,525,1.814,526,1.604,527,2.773,528,2.132,529,1.814,530,1.814,531,1.814,532,2.132,533,2.132,534,1.814,535,2.132,536,2.132,537,1.814,538,3.323,539,2.132,540,2.132,541,3.073,542,2.132,543,2.132,544,2.132,545,4.084,546,2.132,547,2.132,548,2.132,549,2.132,550,2.132,551,2.132,552,1.814,553,2.132,554,2.132,555,2.132,556,2.501,557,3.323,558,3.323,559,2.132,560,2.132,561,2.132,562,2.132,563,3.323,564,3.323,565,2.132,566,2.132,567,2.132,568,3.323,569,2.132,570,3.323,571,3.323,572,2.132,573,2.132,574,2.132,575,3.323,576,2.132,577,3.323,578,3.323,579,2.132,580,2.132,581,2.132,582,3.323,583,2.132,584,3.323,585,3.323,586,3.323,587,2.132,588,2.132,589,2.132,590,2.132,591,2.132,592,2.132,593,2.132,594,2.132,595,2.132,596,2.132,597,2.132,598,2.132]],["title/components/DetailsComponent.html",[0,0.266,80,0.935]],["body/components/DetailsComponent.html",[0,0.343,1,0.671,2,1.006,3,0.171,4,0.151,5,0.756,6,0.756,7,0.756,8,0.151,10,0.671,11,2.032,12,1.805,14,1.132,16,0.671,18,1.132,20,1.201,22,0.42,23,0.529,25,0.79,26,2.319,30,1.261,32,0.596,33,0.024,34,0.271,35,0.343,36,0.561,38,0.79,39,1.44,40,0.634,41,1.419,42,1.506,45,0.994,46,0.379,47,0.851,50,1.44,55,0.171,56,0.407,59,0.756,60,1.132,61,1.132,62,0.756,63,1.508,64,0.756,65,0.756,66,0.633,67,0.756,68,1.132,69,0.633,70,0.756,71,0.671,72,0.756,73,0.671,74,0.756,75,0.671,76,0.756,77,0.671,78,0.756,79,0.756,80,1.339,81,0.756,82,0.756,83,0.633,84,0.712,85,0.756,86,0.671,87,0.756,88,0.633,89,0.756,90,0.671,91,0.756,92,0.633,93,0.756,94,0.671,95,0.756,96,0.633,97,0.712,98,0.712,99,0.756,100,0.012,101,0.012,114,2.179,146,0.851,179,1.631,180,2.236,184,1.439,188,2.617,208,0.851,215,1.899,216,2.147,221,1.439,225,2.154,226,2.161,236,2.236,238,0.904,251,2.236,286,1.566,293,1.714,295,1.163,296,3.078,297,1.566,300,1.566,305,1.089,306,1.163,310,1.245,311,1.163,312,2.161,315,2.896,316,1.566,317,1.714,318,1.566,324,3.216,427,2.147,482,1.865,495,3.856,508,2.147,526,2.844,534,2.147,537,2.147,552,2.147,599,2.147,600,3.216,601,3.216,602,3.78,603,3.78,604,3.78,605,4.533,606,5.034,607,2.591,608,3.78,609,3.78,610,2.523,611,2.523,612,2.523,613,2.523,614,3.856,615,3.216,616,3.216,617,3.216,618,3.216,619,3.216,620,3.216,621,3.78,622,3.78,623,3.78,624,3.78,625,3.78,626,3.216,627,2.844,628,2.523,629,2.523,630,1.899,631,2.523,632,2.523,633,1.899,634,1.899,635,1.899,636,1.899,637,1.899,638,2.523,639,2.523,640,2.523,641,2.523,642,2.523,643,2.523,644,2.147,645,2.523,646,2.523,647,2.523,648,2.523,649,2.523,650,2.523,651,1.899,652,1.566,653,2.147,654,2.147,655,3.78,656,3.78,657,3.78,658,3.216,659,3.78,660,3.78,661,3.78,662,3.78,663,3.78,664,3.78]],["title/injectables/FlowbiteService.html",[29,2.386,110,0.992]],["body/injectables/FlowbiteService.html",[3,0.323,4,0.285,8,0.285,13,2.2,22,0.442,25,1.221,27,2.06,29,3.968,30,1.221,32,1.38,33,0.023,34,0.349,35,0.442,36,1.298,38,0.997,39,2.007,45,0.942,46,0.718,49,3.968,55,0.323,56,0.769,100,0.019,101,0.019,110,1.65,112,2.2,114,1.61,146,1.61,153,2.355,295,2.2,665,4.062,666,5.844,667,4.775,668,4.775,669,4.972,670,5.844,671,4.775,672,4.775,673,4.062,674,4.062,675,4.062,676,4.775,677,4.062,678,4.775,679,4.775]],["title/components/FooterComponent.html",[0,0.266,16,0.935]],["body/components/FooterComponent.html",[0,0.418,1,0.958,2,1.297,3,0.243,4,0.215,5,1.654,6,1.079,7,1.079,8,0.215,10,0.958,11,2.127,12,1.889,14,1.46,16,1.575,18,1.46,20,1.549,33,0.024,34,0.291,43,4.146,44,4.146,45,0.785,46,0.541,50,1.145,55,0.243,56,0.58,59,1.079,60,1.772,61,1.46,62,1.079,63,1.772,64,1.079,65,1.079,66,0.903,67,1.079,68,1.46,69,0.903,70,1.079,71,0.958,72,1.079,73,0.958,74,1.079,75,0.958,76,1.079,77,0.958,78,1.079,79,1.079,80,0.958,81,1.079,82,1.079,83,0.903,84,1.017,85,1.079,86,0.958,87,1.079,88,0.903,89,1.079,90,0.958,91,1.079,92,0.903,93,1.079,94,0.958,95,1.079,96,0.903,97,1.017,98,1.017,99,1.079,100,0.016,101,0.016,184,2.102,208,1.215,225,2.659,680,3.064,681,4.873,682,4.873,683,4.873,684,4.873,685,4.873,686,4.873,687,4.873,688,4.873,689,4.873,690,4.873,691,4.873,692,4.873]],["title/components/ForgetPasswordComponent.html",[0,0.266,83,0.881]],["body/components/ForgetPasswordComponent.html",[0,0.258,1,0.432,2,0.711,3,0.11,4,0.097,5,0.486,6,0.486,7,0.486,8,0.097,10,0.432,11,1.876,12,1.667,14,0.8,16,0.432,18,0.8,20,0.849,22,0.15,23,0.374,25,0.558,30,1.249,33,0.024,34,0.159,35,0.392,38,0.824,39,1.575,40,0.552,41,1.384,42,1.469,45,0.755,46,0.244,47,0.548,50,0.516,55,0.11,56,0.262,59,0.486,60,0.8,61,0.8,62,0.486,63,1.181,64,0.486,65,0.486,66,0.407,67,0.486,68,0.8,69,0.407,70,0.486,71,0.432,72,0.486,73,0.432,74,0.486,75,0.432,76,0.486,77,0.432,78,0.486,79,0.486,80,0.432,81,0.486,82,0.486,83,0.989,84,1.399,85,0.486,86,0.432,87,0.486,88,0.407,89,0.486,90,0.432,91,0.486,92,0.407,93,0.486,94,0.432,95,0.486,96,0.407,97,0.458,98,0.458,99,0.486,100,0.009,101,0.009,111,2.09,114,1.581,115,2.254,121,2.896,142,1.527,146,0.548,158,1.219,184,1.017,188,1.899,208,0.548,221,1.295,225,2.574,236,1.318,272,0.957,295,0.748,305,1.469,306,1.568,310,1.679,311,1.568,315,2.544,318,1.007,321,2.273,358,2.01,359,1.814,360,1.814,364,2.678,480,2.254,492,1.814,498,3.642,511,3.996,514,2.447,518,1.103,519,0.928,527,3.184,541,4.036,693,5.156,694,5.156,695,1.381,696,2.678,697,2.01,698,2.671,699,2.671,700,3.729,701,3.729,702,3.403,703,2.561,704,5.363,705,3.403,706,3.944,707,3.944,708,3.944,709,2.968,710,1.624,711,1.624,712,1.624,713,1.624,714,1.814,715,1.624,716,1.624,717,1.624,718,1.624,719,3.303,720,2.671,721,3.528,722,2.01,723,2.01,724,1.624,725,1.624,726,1.624,727,1.624,728,2.671,729,2.671,730,2.671,731,1.624,732,2.561,733,2.01,734,1.624,735,1.222,736,1.103,737,1.624,738,2.671,739,1.946,740,3.355,741,2.112,742,2.273,743,1.624,744,1.624,745,3.528,746,3.989,747,1.624,748,2.671,749,2.896,750,2.671,751,1.624,752,2.671,753,2.561,754,2.896,755,2.311,756,1.624,757,1.624,758,1.624,759,1.624,760,1.624,761,1.624,762,1.624,763,1.624,764,1.624,765,1.381,766,1.381,767,1.381,768,1.381,769,1.624,770,2.01,771,2.671,772,2.671,773,2.671,774,1.624,775,1.624,776,1.624,777,2.671,778,1.624,779,2.671,780,2.671,781,2.671,782,2.671,783,2.671,784,1.624,785,1.624,786,1.624,787,2.671,788,1.624,789,2.671,790,2.671,791,2.671,792,2.671,793,2.671,794,1.624,795,1.624,796,1.624,797,2.671,798,1.624,799,2.671,800,2.671,801,2.671,802,1.624,803,1.624,804,1.624,805,1.624,806,1.624,807,1.624,808,1.624,809,1.624,810,1.624,811,1.624,812,1.624,813,1.624]],["title/components/HomeComponent.html",[0,0.266,86,0.935]],["body/components/HomeComponent.html",[0,0.297,1,0.534,2,0.843,3,0.136,4,0.12,5,0.601,6,0.601,7,0.601,8,0.12,10,0.534,11,1.956,12,1.738,14,0.949,16,0.534,18,0.949,20,1.007,22,0.364,23,0.443,25,0.662,26,2.055,30,1.28,32,0.474,33,0.024,34,0.234,35,0.297,36,0.446,38,0.932,39,1.543,40,0.549,41,1.404,42,1.491,45,0.97,46,0.476,47,0.676,50,1.248,55,0.136,56,0.323,59,0.601,60,0.949,61,0.949,62,0.601,63,1.336,64,0.601,65,0.601,66,0.503,67,0.601,68,0.949,69,0.503,70,0.601,71,0.534,72,0.601,73,0.534,74,0.601,75,0.534,76,0.601,77,0.534,78,0.601,79,0.601,80,0.534,81,0.601,82,0.601,83,0.503,84,0.566,85,0.601,86,1.187,87,0.601,88,0.503,89,0.601,90,0.534,91,0.601,92,0.503,93,0.601,94,0.534,95,0.601,96,0.503,97,0.566,98,0.566,99,0.601,100,0.01,101,0.01,114,2.066,146,0.676,179,1.367,180,1.937,184,1.494,188,2.48,200,2.573,208,0.676,221,2.592,225,2.247,226,2.549,238,0.718,251,2.2,279,1.809,281,1.965,286,1.965,293,2.151,296,3.028,297,1.244,300,1.244,305,1.694,306,1.809,310,1.937,311,1.809,312,2.244,315,2.721,316,1.244,317,1.362,318,1.244,357,5.023,395,1.367,396,1.46,406,2.384,411,2.384,437,3.654,441,2.767,448,1.244,450,2.695,452,2.695,457,1.706,458,1.706,459,1.706,460,1.706,465,2.695,480,2.549,482,0.989,600,3.34,607,2.549,614,4.131,615,3.794,616,3.794,617,3.794,618,3.794,619,3.794,620,3.794,626,3.794,627,3.356,630,2.384,633,1.509,634,1.509,635,1.509,636,1.509,637,1.509,651,1.509,652,1.244,653,1.706,654,1.706,739,1.811,741,1.965,755,2.151,814,1.706,815,2.695,816,2.436,817,3.168,818,3.168,819,3.926,820,3.926,821,4.46,822,3.794,823,2.006,824,2.006,825,2.006,826,2.006,827,2.006,828,2.006,829,2.006,830,4.46,831,5.161,832,4.46,833,4.46,834,3.168,835,4.46,836,2.006,837,3.168,838,3.168,839,3.168,840,3.168,841,2.006,842,2.006,843,2.006,844,2.006,845,1.706,846,1.706,847,2.006,848,1.706,849,1.706,850,3.168,851,3.168,852,3.168,853,3.168,854,3.168,855,2.695,856,3.168,857,3.168,858,2.695,859,2.695,860,3.168,861,3.168,862,2.695,863,3.168]],["title/interfaces/IBrand.html",[197,2.386,390,0.781]],["body/interfaces/IBrand.html",[3,0.328,4,0.289,8,0.289,22,0.449,23,0.825,33,0.023,34,0.395,35,0.522,40,1.022,55,0.328,100,0.019,101,0.019,197,4.006,277,2.679,282,2.679,283,2.679,390,1.077,392,1.963,401,2.855,402,2.855,864,4.125]],["title/interfaces/ICart.html",[301,1.733,390,0.781]],["body/interfaces/ICart.html",[3,0.279,4,0.246,8,0.246,22,0.382,23,0.745,24,1.669,33,0.023,34,0.318,35,0.51,40,1.018,55,0.437,100,0.017,101,0.017,199,1.899,271,1.779,272,2.491,277,2.793,278,3.567,279,2.875,280,3.567,282,2.527,283,2.527,284,3.567,301,2.628,390,1.436,391,3.306,392,1.669,393,2.356,394,2.356,395,1.779,396,2.72,397,2.033,398,2.728,399,2.033,400,2.391,401,2.299,402,1.779]],["title/interfaces/ICategory.html",[390,0.781,448,2.18]],["body/interfaces/ICategory.html",[3,0.328,4,0.289,8,0.289,22,0.449,23,0.825,33,0.023,34,0.395,35,0.522,40,1.022,55,0.328,100,0.019,101,0.019,277,2.679,282,2.679,283,2.679,390,1.077,392,1.963,401,2.855,402,2.855,448,3.66,865,4.125]],["title/interfaces/IProduct.html",[390,0.781,482,1.733]],["body/interfaces/IProduct.html",[3,0.258,4,0.228,8,0.228,22,0.353,23,0.708,24,2.452,33,0.023,34,0.302,35,0.539,40,1.025,55,0.258,100,0.016,101,0.016,199,2.79,238,2.169,271,2.613,272,2.533,277,2.624,282,2.452,283,2.452,390,1.263,392,1.545,395,2.613,397,2.987,398,2.821,399,2.987,400,2.719,401,2.796,402,1.646,481,2.59,482,2.498,483,4.557,484,4.557,485,4.557,486,4.557]],["title/components/LoginComponent.html",[0,0.266,88,0.881]],["body/components/LoginComponent.html",[0,0.309,1,0.566,2,0.882,3,0.144,4,0.127,5,0.637,6,0.637,7,0.637,8,0.127,10,0.566,11,1.976,12,1.756,14,0.993,16,0.566,18,0.993,20,1.054,22,0.197,23,0.464,25,0.693,30,1.254,33,0.024,34,0.198,35,0.4,38,0.693,39,1.463,40,0.464,41,1.433,42,1.521,45,0.852,46,0.319,47,0.717,50,0.676,55,0.144,56,0.342,59,0.637,60,0.993,61,0.993,62,0.637,63,1.379,64,0.637,65,0.637,66,0.533,67,0.637,68,0.993,69,0.533,70,0.637,71,0.566,72,0.637,73,0.566,74,0.637,75,0.566,76,0.637,77,0.566,78,0.637,79,0.637,80,0.566,81,0.637,82,0.637,83,0.533,84,0.6,85,0.637,86,0.566,87,0.637,88,1.154,89,0.637,90,0.566,91,0.637,92,0.533,93,0.637,94,0.566,95,0.637,96,0.533,97,0.6,98,0.6,99,0.637,100,0.011,101,0.011,111,2.16,114,1.784,115,2.33,142,1.215,146,0.717,152,1.6,155,1.6,184,1.262,188,2.142,208,0.717,221,0.809,225,2.569,236,2.011,295,0.98,305,0.917,306,0.98,310,1.049,311,0.98,312,1.215,315,2.3,364,2.252,429,2.495,492,2.768,498,3.127,511,3.39,514,2.529,518,1.444,519,1.215,527,3.127,541,3.067,556,2.495,652,1.319,696,3.881,697,2.495,700,3.98,701,3.98,703,3.067,709,3.465,714,1.444,719,3.024,721,3.465,722,2.495,723,2.495,732,4.518,733,2.495,735,1.6,736,1.444,741,1.319,745,2.495,746,1.809,749,1.809,753,1.6,755,1.444,765,1.809,766,1.809,767,1.809,768,1.809,770,2.495,816,2.529,866,1.809,867,2.821,868,3.316,869,3.316,870,4.076,871,3.468,872,3.917,873,2.126,874,2.126,875,2.126,876,2.126,877,2.126,878,2.126,879,2.126,880,2.126,881,2.126,882,4.862,883,2.821,884,2.821,885,2.821,886,2.821,887,2.495,888,2.821,889,2.821,890,2.495,891,2.821,892,2.126,893,2.126,894,1.809,895,2.126,896,1.809,897,1.809,898,2.126,899,2.126,900,2.126,901,2.126,902,2.126,903,3.316,904,3.316,905,2.126,906,2.126,907,2.126,908,3.316,909,2.126,910,3.316,911,3.316,912,2.126,913,2.126,914,2.126,915,3.316,916,2.126,917,3.316,918,3.316,919,3.316,920,3.316,921,3.316,922,2.126,923,2.126,924,2.126,925,2.126,926,2.126,927,2.126,928,2.126,929,2.126]],["title/injectables/MyTranslateService.html",[110,0.992,930,2.386]],["body/injectables/MyTranslateService.html",[3,0.277,4,0.245,8,0.245,13,1.892,22,0.38,23,0.743,25,1.11,27,2.293,30,1.302,32,1.255,33,0.023,34,0.317,35,0.402,36,1.181,38,1.11,39,1.689,40,0.824,41,1.029,42,1.093,45,0.949,46,0.617,50,1.305,55,0.277,56,0.662,100,0.017,101,0.017,110,1.5,112,1.892,114,2.177,130,4.434,146,1.792,153,2.025,188,2.386,208,1.385,236,2.622,295,1.892,480,2.347,669,5.013,674,3.493,675,3.493,677,3.493,739,2.347,741,2.548,930,3.609,931,5.491,932,3.493,933,6.232,934,5.893,935,5.315,936,4.106,937,6.612,938,5.315,939,4.106,940,5.315,941,4.106,942,3.493,943,5.315,944,4.106,945,3.493,946,4.106,947,3.09,948,5.315,949,4.106,950,4.106,951,5.315,952,4.106,953,4.106,954,4.106,955,4.106,956,4.106,957,4.106,958,4.106,959,4.106,960,4.106]],["title/components/NavbarComponent.html",[0,0.266,90,0.935]],["body/components/NavbarComponent.html",[0,0.306,1,0.559,2,0.874,3,0.142,4,0.125,5,0.629,6,0.629,7,0.629,8,0.125,10,0.559,11,1.972,12,1.752,14,0.984,16,0.559,18,0.984,22,0.195,23,0.46,25,0.686,26,2.108,30,1.274,32,0.496,33,0.024,34,0.241,35,0.346,36,0.73,38,0.956,39,1.673,40,0.64,41,1.379,42,1.464,45,0.886,46,0.316,47,0.709,48,2.796,49,2.231,50,0.668,55,0.142,56,0.339,59,0.629,60,0.984,61,0.984,62,0.629,63,1.37,64,0.629,65,0.629,66,0.527,67,0.629,68,0.984,69,0.527,70,0.629,71,0.559,72,0.629,73,0.559,74,0.629,75,0.559,76,0.629,77,0.559,78,0.629,79,0.629,80,0.559,81,0.629,82,0.629,83,0.527,84,0.593,85,0.629,86,0.559,87,0.629,88,0.527,89,0.629,90,1.218,91,0.629,92,0.527,93,0.629,94,0.559,95,0.629,96,0.527,97,0.593,98,0.593,99,0.629,100,0.01,101,0.01,111,2.424,114,1.775,146,0.709,179,1.418,180,1.996,184,1.54,188,2.132,200,2.144,208,0.709,221,1.54,225,2.359,251,2.257,281,3.081,286,2.039,300,1.304,304,1.788,305,0.907,306,0.968,315,1.864,316,1.304,332,1.581,342,1.788,404,4.224,438,2.231,480,1.201,490,3.893,514,1.304,627,3.443,714,2.231,736,1.427,739,1.201,816,2.51,930,3.107,942,2.796,961,2.101,962,1.788,963,4.046,964,3.286,965,4.046,966,3.893,967,3.286,968,4.046,969,3.286,970,4.965,971,4.046,972,4.576,973,3.286,974,4.576,975,3.286,976,5.501,977,2.101,978,2.101,979,2.101,980,3.286,981,2.101,982,2.101,983,2.101,984,4.046,985,3.286,986,2.101,987,2.101,988,4.576,989,2.101,990,2.101,991,3.286,992,2.101,993,2.101,994,2.101,995,2.101,996,2.101,997,2.101,998,4.046,999,2.101,1000,2.101,1001,2.796,1002,3.286,1003,3.286,1004,3.286,1005,3.286,1006,3.286,1007,3.286,1008,3.286,1009,3.286,1010,4.046,1011,2.101,1012,2.101,1013,4.046,1014,2.101,1015,2.101,1016,2.101,1017,2.101,1018,2.101,1019,2.101,1020,2.101,1021,2.101,1022,2.101,1023,2.101,1024,3.286,1025,2.101,1026,2.101,1027,2.101,1028,4.576,1029,2.101,1030,2.101,1031,4.576,1032,3.286,1033,2.101,1034,2.101,1035,4.046,1036,3.286,1037,3.286,1038,3.286,1039,3.286,1040,2.796,1041,4.576,1042,3.286,1043,3.286,1044,3.286,1045,3.286,1046,3.286,1047,3.286,1048,3.286,1049,3.286,1050,2.101,1051,3.961,1052,4.046,1053,3.286,1054,2.101,1055,2.101,1056,2.101,1057,4.046,1058,2.101,1059,2.101,1060,2.101,1061,2.101,1062,2.101,1063,4.576,1064,2.101,1065,2.101,1066,2.101,1067,2.101,1068,4.576,1069,2.101,1070,2.101,1071,3.286,1072,2.101,1073,2.101,1074,2.101]],["title/components/NotfoundComponent.html",[0,0.266,92,0.881]],["body/components/NotfoundComponent.html",[0,0.454,1,1.133,2,1.447,3,0.288,4,0.254,5,1.275,6,1.275,7,1.275,8,0.254,10,1.133,11,2.163,12,1.922,14,1.275,16,1.133,18,1.629,20,1.729,33,0.023,34,0.325,45,0.686,46,0.64,55,0.288,56,0.686,59,1.275,60,1.629,61,1.629,62,1.275,63,1.892,64,1.275,65,1.275,66,1.067,67,1.275,68,1.629,69,1.067,70,1.275,71,1.133,72,1.275,73,1.133,74,1.275,75,1.133,76,1.275,77,1.133,78,1.275,79,1.275,80,1.133,81,1.275,82,1.275,83,1.067,84,1.202,85,1.275,86,1.133,87,1.275,88,1.067,89,1.275,90,1.133,91,1.275,92,1.584,93,1.275,94,1.133,95,1.275,96,1.067,97,1.202,98,1.202,99,1.275,100,0.017,101,0.017,1075,3.622,1076,5.439,1077,5.439,1078,5.439]],["title/injectables/OrdersService.html",[110,0.992,499,2.386]],["body/injectables/OrdersService.html",[3,0.304,4,0.268,8,0.268,13,2.07,22,0.416,23,0.787,25,1.176,27,1.938,30,1.284,32,1.329,33,0.023,34,0.336,35,0.465,36,1.25,38,0.938,40,0.859,41,1.126,42,1.195,45,1.038,46,0.675,55,0.304,56,0.724,57,2.38,100,0.018,101,0.018,110,1.589,112,2.07,124,2.568,125,3.338,133,3.217,145,2.568,147,2.38,148,2.38,149,2.787,153,2.216,158,1.609,266,3.38,405,5.228,422,4.234,499,3.821,500,4.788,1079,3.821,1080,4.492,1081,5.627,1082,6.441,1083,4.492,1084,4.492,1085,4.492,1086,4.492,1087,4.492,1088,4.492,1089,4.492]],["title/interfaces/Product.html",[390,0.781,396,1.619]],["body/interfaces/Product.html",[3,0.275,4,0.243,8,0.243,22,0.377,23,0.739,24,2.515,33,0.023,34,0.315,35,0.515,40,1.014,55,0.435,100,0.017,101,0.017,199,2.861,271,2.68,272,2.486,277,2.786,278,2.326,279,1.875,280,2.326,282,1.647,283,1.647,284,2.326,301,2.007,390,1.43,391,2.799,392,1.647,393,2.326,394,2.326,395,1.756,396,2.861,397,3.063,398,2.875,399,3.063,400,2.757,401,2.28,402,1.756]],["title/components/ProductsComponent.html",[0,0.266,94,0.935]],["body/components/ProductsComponent.html",[0,0.35,1,0.693,2,1.03,3,0.176,4,0.155,5,0.78,6,0.78,7,0.78,8,0.155,10,0.693,11,2.041,12,1.813,14,1.159,16,0.693,18,1.159,20,1.23,22,0.428,23,0.541,25,0.808,26,2.356,30,1.272,32,0.615,33,0.024,34,0.276,35,0.197,36,0.579,38,0.965,39,1.625,40,0.646,41,1.37,42,1.454,45,1.035,46,0.391,47,0.878,50,1.23,55,0.176,56,0.42,59,0.78,60,1.159,61,1.159,62,0.78,63,1.531,64,0.78,65,0.78,66,0.653,67,0.78,68,1.159,69,0.653,70,0.78,71,0.693,72,0.78,73,0.693,74,0.78,75,0.693,76,0.78,77,0.693,78,0.78,79,0.78,80,0.693,81,0.78,82,0.78,83,0.653,84,0.735,85,0.78,86,0.693,87,0.78,88,0.653,89,0.78,90,0.693,91,0.78,92,0.653,93,0.78,94,1.36,95,0.78,96,0.653,97,0.735,98,0.735,99,0.78,100,0.012,101,0.012,114,2.099,146,0.878,179,1.67,180,2.278,184,1.758,188,2.52,200,2.895,208,0.878,225,2.179,226,2.212,238,0.933,246,2.215,251,2.522,256,3.929,279,2.867,286,2.401,293,2.628,295,1.2,296,1.768,297,1.616,300,1.616,305,1.67,306,1.783,310,1.909,311,1.783,312,2.212,316,1.616,317,1.768,318,1.616,395,1.67,396,1.783,406,2.912,411,2.912,442,3.929,482,1.285,491,3.929,519,1.489,601,3.929,607,2.923,630,2.912,636,1.959,637,1.959,651,1.959,652,1.616,658,3.292,739,2.212,816,2.865,822,4.35,845,2.215,846,2.215,848,2.215,849,2.215,855,3.292,858,3.292,859,3.292,862,3.292,966,3.929,1090,2.215,1091,3.136,1092,3.136,1093,3.87,1094,3.87,1095,2.604,1096,2.604,1097,2.604,1098,2.604,1099,2.604,1100,2.604,1101,2.604,1102,2.604,1103,2.604,1104,2.604,1105,2.604,1106,2.604,1107,3.87,1108,3.87,1109,3.87,1110,3.292,1111,3.87]],["title/injectables/ProductsService.html",[110,0.992,607,2.008]],["body/injectables/ProductsService.html",[3,0.311,4,0.274,8,0.274,13,2.117,22,0.426,25,1.192,27,1.983,30,1.297,32,1.348,33,0.023,34,0.341,35,0.432,36,1.268,38,1.192,40,0.798,45,1.046,46,0.691,55,0.311,56,0.74,57,2.435,100,0.018,101,0.018,110,1.611,112,2.117,124,2.627,125,3.203,133,3.549,145,2.627,147,2.435,148,2.435,149,2.851,153,2.267,154,3.458,158,2.044,236,2.815,238,1.646,242,3.909,607,3.263,1112,3.909,1113,6.209,1114,5.708,1115,4.595,1116,4.595,1117,4.595,1118,4.595,1119,4.595,1120,4.595,1121,4.595,1122,4.595]],["title/components/RegisterComponent.html",[0,0.266,96,0.881]],["body/components/RegisterComponent.html",[0,0.254,1,0.423,2,0.698,3,0.107,4,0.095,5,0.476,6,0.476,7,0.476,8,0.095,10,0.423,11,1.867,12,1.659,14,0.786,16,0.423,18,0.786,20,0.834,22,0.147,23,0.367,25,0.548,30,1.174,32,0.375,33,0.024,34,0.349,35,0.372,36,0.353,38,0.7,39,1.065,40,0.367,41,1.287,42,1.365,45,0.747,46,0.239,47,0.536,50,0.505,55,0.107,56,0.256,59,0.476,60,0.786,61,0.786,62,0.476,63,1.166,64,0.476,65,0.476,66,0.398,67,0.476,68,0.786,69,0.398,70,0.476,71,0.423,72,0.476,73,0.423,74,0.476,75,0.423,76,0.476,77,0.423,78,0.476,79,0.476,80,0.423,81,0.476,82,0.476,83,0.398,84,0.448,85,0.476,86,0.423,87,0.476,88,0.398,89,0.476,90,0.423,91,0.476,92,0.398,93,0.476,94,0.423,95,0.476,96,0.976,97,0.946,98,0.448,99,0.476,100,0.008,101,0.008,111,1.776,114,1.655,115,1.916,142,0.908,146,0.536,155,1.195,158,0.569,169,1.351,184,0.999,188,1.879,208,0.536,215,1.195,221,0.605,225,2.621,236,1.653,272,1.394,295,0.732,315,1.544,345,1.974,358,1.195,359,1.079,360,1.079,364,1.782,367,1.351,492,2.276,498,2.643,511,2.925,514,2.414,518,2.276,519,0.908,525,1.351,527,3.816,529,4.663,530,2.232,531,2.232,556,3.491,652,0.986,696,3.899,697,1.974,700,3.491,701,3.491,703,2.522,709,2.928,714,1.079,719,3.282,721,4.124,722,1.974,723,1.974,732,4.124,733,1.974,735,1.195,736,1.079,741,1.628,745,1.195,753,1.195,754,1.351,755,1.079,770,1.974,816,1.628,871,2.851,872,2.851,882,5.305,883,3.311,884,3.311,885,2.232,886,3.311,887,1.974,888,3.311,889,2.232,890,1.974,891,3.947,894,1.351,896,1.351,897,1.351,947,1.974,1123,1.351,1124,2.624,1125,2.624,1126,3.352,1127,2.624,1128,2.624,1129,3.892,1130,1.589,1131,1.589,1132,3.892,1133,1.589,1134,1.589,1135,1.589,1136,1.589,1137,1.589,1138,1.589,1139,3.352,1140,3.352,1141,3.311,1142,2.624,1143,2.624,1144,2.624,1145,4.639,1146,3.892,1147,2.624,1148,2.624,1149,1.589,1150,1.589,1151,1.589,1152,2.624,1153,2.624,1154,2.624,1155,2.624,1156,2.624,1157,2.624,1158,2.624,1159,2.624,1160,1.589,1161,1.589,1162,1.589,1163,1.589,1164,1.589,1165,1.589,1166,1.589,1167,1.589,1168,1.589,1169,1.589,1170,1.589,1171,1.589,1172,2.624,1173,1.589,1174,1.589,1175,1.589,1176,2.624,1177,2.624,1178,1.589,1179,1.589,1180,1.589,1181,2.624,1182,1.589,1183,2.624,1184,1.589,1185,2.624,1186,2.624,1187,1.589,1188,1.589,1189,1.589,1190,2.624,1191,1.589,1192,2.624,1193,2.624,1194,1.589,1195,1.589,1196,1.589,1197,2.624,1198,1.589,1199,2.624,1200,2.624,1201,1.589,1202,1.589,1203,2.624,1204,1.589,1205,2.624,1206,2.624,1207,2.624,1208,1.589,1209,1.589,1210,1.589,1211,2.624,1212,1.589,1213,2.624,1214,2.624,1215,2.624,1216,2.624,1217,1.589,1218,1.589,1219,1.589,1220,1.589,1221,1.589,1222,1.589,1223,1.589,1224,1.589,1225,1.589,1226,1.589,1227,1.589,1228,1.589,1229,1.589,1230,1.589,1231,1.589,1232,2.624,1233,1.589,1234,1.589,1235,1.589,1236,1.589,1237,1.589]],["title/pipes/SearchPipe.html",[1092,2.386,1238,2.18]],["body/pipes/SearchPipe.html",[3,0.328,4,0.289,8,0.289,10,1.29,25,1.013,30,1.013,32,1.145,33,0.023,34,0.379,35,0.367,36,1.077,38,1.013,40,0.889,41,1.215,42,1.29,45,0.781,46,0.729,55,0.328,56,0.781,100,0.019,101,0.019,158,2.113,179,2.092,221,2.245,438,4.006,1051,3.648,1092,4.006,1238,3.66,1239,3.292,1240,4.125,1241,5.899,1242,5.899,1243,6.358,1244,4.848,1245,5.899,1246,5.019,1247,4.848,1248,4.848,1249,4.848]],["title/interfaces/Subcategory.html",[390,0.781,400,1.423]],["body/interfaces/Subcategory.html",[3,0.29,4,0.256,8,0.256,22,0.397,23,0.764,24,1.737,33,0.023,34,0.39,35,0.479,40,1.021,55,0.442,100,0.017,101,0.017,199,1.977,271,1.851,272,2.396,277,2.814,278,2.453,279,1.977,280,2.453,282,1.737,283,1.737,284,2.453,301,2.116,390,1.454,391,2.896,392,1.737,393,2.453,394,2.453,395,1.851,396,2.772,397,2.116,398,2.836,399,2.116,400,2.565,401,2.823,402,1.851]],["title/interfaces/Subcategory-1.html",[390,0.652,400,1.189,480,1.678]],["body/interfaces/Subcategory-1.html",[3,0.306,4,0.27,8,0.27,22,0.42,23,0.791,24,1.834,33,0.023,34,0.397,35,0.489,40,1.026,55,0.306,100,0.018,101,0.018,199,2.087,238,1.622,271,1.954,272,2.381,277,2.746,282,1.834,283,1.834,390,1.37,392,1.834,395,1.954,397,2.234,398,2.816,399,2.234,400,2.616,401,2.927,402,1.954,481,3.075,482,2.234,483,3.408,484,3.408,485,3.408,486,3.408]],["title/pipes/TermtextPipe.html",[1091,2.386,1238,2.18]],["body/pipes/TermtextPipe.html",[3,0.334,4,0.295,8,0.295,10,1.316,25,1.033,30,1.033,32,1.168,33,0.023,34,0.383,35,0.374,36,1.099,38,1.033,40,0.954,45,0.797,46,0.743,55,0.334,56,0.797,100,0.019,101,0.019,158,1.771,179,2.135,272,2.297,332,3.722,1051,3.722,1091,4.055,1110,5.08,1238,3.705,1239,3.359,1246,5.08,1250,4.208,1251,5.971,1252,6.414,1253,4.946,1254,4.946,1255,4.946]],["title/coverage.html",[1256,4.076]],["body/coverage.html",[0,0.521,1,0.804,8,0.18,9,2.572,12,0.804,16,0.804,29,2.053,33,0.023,35,0.229,66,0.758,69,0.758,71,0.804,73,0.804,75,0.804,77,0.804,80,0.804,83,0.758,86,0.804,88,0.758,90,0.804,92,0.758,94,0.804,96,0.758,100,0.014,101,0.014,102,2.572,103,2.572,104,3.246,110,1.792,111,1.602,113,2.572,148,1.602,176,2.572,177,2.572,178,2.572,189,2.053,197,2.053,231,2.572,244,2.572,251,1.491,281,4.545,301,1.491,390,1.456,391,1.602,393,3.316,396,1.393,398,1.747,400,1.747,403,2.572,436,2.572,441,1.875,448,1.875,469,2.572,481,3.416,482,1.491,487,2.572,488,2.275,489,2.572,499,2.053,599,2.572,607,1.728,665,2.572,673,2.572,680,2.572,693,2.572,694,2.572,695,2.572,719,1.728,814,2.572,864,2.572,865,2.572,866,2.572,930,2.053,931,2.572,932,2.572,962,2.572,1040,2.572,1075,2.572,1079,2.572,1090,2.572,1091,2.053,1092,2.053,1112,2.572,1123,2.572,1238,2.677,1240,2.572,1250,2.572,1256,2.572,1257,3.023,1258,3.023,1259,3.023,1260,2.572,1261,6.924,1262,7.072,1263,2.572,1264,2.572,1265,2.572,1266,2.572,1267,2.572,1268,2.572,1269,2.572,1270,2.572,1271,2.572,1272,2.572,1273,4.314,1274,5.801,1275,5.801,1276,3.023,1277,6.032,1278,2.572,1279,2.275,1280,5.03,1281,4.314,1282,3.023,1283,3.023,1284,3.023,1285,4.314,1286,3.023,1287,3.67,1288,2.572,1289,2.572,1290,2.572,1291,2.572,1292,2.572,1293,2.572,1294,2.572,1295,2.053,1296,2.572,1297,2.572,1298,4.935,1299,2.572,1300,2.572,1301,2.572,1302,3.023,1303,2.572,1304,3.023,1305,3.023]],["title/dependencies.html",[1306,2.497,1307,3.594]],["body/dependencies.html",[33,0.024,46,0.689,47,1.546,49,3.114,50,2.121,51,3.901,100,0.018,101,0.018,147,2.43,151,3.901,152,3.45,208,1.546,295,2.113,297,2.845,299,4.85,519,2.621,633,3.45,634,3.45,635,3.45,1307,3.901,1308,4.585,1309,6.489,1310,4.585,1311,6.674,1312,6.203,1313,4.289,1314,4.585,1315,3.45,1316,4.585,1317,3.901,1318,4.585,1319,4.585,1320,4.585,1321,4.585,1322,4.585,1323,3.901,1324,4.585,1325,4.585,1326,5.7,1327,4.585,1328,4.585,1329,3.901,1330,4.585,1331,4.585,1332,4.585,1333,5.7,1334,4.585,1335,4.585,1336,4.585,1337,4.585,1338,4.585,1339,4.585,1340,4.585,1341,4.585]],["title/miscellaneous/functions.html",[1342,1.993,1343,3.179]],["body/miscellaneous/functions.html",[22,0.507,32,1.293,33,0.021,34,0.327,35,0.414,36,1.217,100,0.02,101,0.02,125,3.128,1278,4.659,1279,4.772,1342,3.718,1343,4.12,1344,5.476,1345,5.476,1346,5.476]],["title/index.html",[22,0.325,1347,3.513]],["body/index.html",[0,0.451,2,1.118,4,0.251,33,0.017,41,1.352,98,1.186,100,0.017,101,0.017,719,2.401,740,4.588,887,3.161,1001,3.573,1141,5.659,1239,2.852,1313,3.161,1315,4.482,1317,3.573,1348,4.2,1349,5.956,1350,4.2,1351,5.393,1352,5.347,1353,5.53,1354,3.573,1355,5.393,1356,4.2,1357,6.5,1358,6.652,1359,4.2,1360,5.393,1361,4.2,1362,4.2,1363,5.393,1364,4.2,1365,4.2,1366,4.2,1367,4.2,1368,4.2,1369,5.393,1370,4.2,1371,4.2,1372,4.2,1373,5.956,1374,4.2,1375,4.2,1376,4.2,1377,4.2,1378,4.2,1379,4.2,1380,4.2,1381,5.068,1382,4.2,1383,4.2,1384,4.2,1385,4.2,1386,4.2,1387,4.2,1388,4.2,1389,4.2,1390,4.2,1391,4.2,1392,5.393,1393,5.956,1394,4.2,1395,4.2,1396,4.2,1397,4.2,1398,4.2,1399,4.2,1400,5.956,1401,4.2,1402,6.652,1403,4.2,1404,5.393,1405,4.2,1406,4.2,1407,4.2,1408,4.2,1409,4.2,1410,4.2,1411,4.2,1412,4.2,1413,4.2,1414,4.2,1415,4.2,1416,4.2,1417,4.2,1418,4.2,1419,4.2,1420,3.161,1421,4.2,1422,4.2]],["title/modules.html",[1423,4.076]],["body/modules.html",[33,0.021,100,0.021,101,0.021,1423,4.839]],["title/overview.html",[1420,3.605]],["body/overview.html",[2,1.479,33,0.02,100,0.02,101,0.02,112,2.561,281,3.449,392,2.251,739,3.178,890,4.183,1239,3.775,1420,4.183,1424,5.559,1425,5.559]],["title/properties.html",[23,0.591,1306,2.497]],["body/properties.html",[23,0.789,33,0.022,100,0.021,101,0.021,1354,4.802,1426,5.644]],["title/routes.html",[1295,3.253]],["body/routes.html",[33,0.021,100,0.021,101,0.021,1295,3.863]],["title/miscellaneous/variables.html",[1342,1.993,1427,3.594]],["body/miscellaneous/variables.html",[0,0.426,12,0.995,22,0.23,24,2.575,33,0.024,35,0.474,36,0.552,41,1.687,42,1.79,66,0.623,69,0.623,83,0.623,84,0.702,88,0.623,92,0.623,96,0.623,97,1.055,100,0.012,101,0.012,115,2.137,125,1.226,130,1.871,142,2.137,148,1.981,158,2.242,181,3.181,221,1.902,236,1.844,238,1.339,245,2.813,279,1.723,305,1.939,311,1.146,315,2.468,422,3.76,429,1.871,437,2.813,488,1.871,496,2.115,526,1.871,644,2.115,696,1.688,719,1.421,742,2.115,815,3.822,867,3.181,945,3.181,947,4.235,1260,2.115,1263,2.115,1264,3.822,1265,2.115,1266,3.822,1267,2.115,1268,3.181,1269,2.115,1270,3.181,1271,2.115,1272,3.181,1279,1.871,1287,2.115,1288,3.822,1289,3.822,1290,2.115,1291,3.181,1292,2.115,1293,3.181,1294,2.115,1295,3.393,1296,2.115,1297,3.181,1298,2.115,1299,3.181,1300,3.181,1301,3.181,1303,3.181,1313,1.871,1315,1.871,1323,2.115,1329,2.115,1342,1.688,1343,1.871,1352,2.115,1353,2.115,1381,2.115,1427,2.115,1428,5.357,1429,2.486,1430,2.486,1431,2.486,1432,3.738,1433,2.486,1434,2.486,1435,2.486,1436,2.486,1437,2.486,1438,2.486,1439,2.486,1440,2.486,1441,2.486,1442,2.486,1443,2.486,1444,2.486,1445,2.486,1446,2.486,1447,2.486,1448,2.486,1449,2.486,1450,2.486,1451,3.738,1452,3.738,1453,2.486,1454,2.486,1455,2.486,1456,2.486,1457,2.486,1458,2.486,1459,2.486,1460,2.486,1461,2.486,1462,2.486,1463,2.486,1464,2.486,1465,2.486,1466,2.486,1467,2.486,1468,2.486,1469,2.486,1470,2.486,1471,2.486,1472,2.486,1473,2.486,1474,2.486,1475,2.486,1476,2.486,1477,2.486,1478,2.486,1479,2.486,1480,2.486,1481,3.738,1482,3.738,1483,3.738,1484,3.738,1485,2.486,1486,3.738,1487,2.486,1488,2.486,1489,2.486,1490,2.486,1491,2.486,1492,2.486,1493,2.486,1494,4.493,1495,4.996,1496,2.486,1497,2.486,1498,2.486,1499,2.486,1500,2.486,1501,2.486,1502,2.486,1503,2.486,1504,2.486,1505,2.486,1506,2.486,1507,2.486,1508,2.486,1509,6.634,1510,2.486,1511,2.486,1512,2.486,1513,3.738,1514,3.738,1515,5.839,1516,2.486,1517,2.486,1518,2.486,1519,2.486,1520,2.486,1521,2.486,1522,2.486,1523,2.486,1524,2.486,1525,2.486,1526,2.486,1527,2.486,1528,2.486,1529,2.486,1530,2.486,1531,2.486,1532,2.486,1533,2.486,1534,2.486,1535,2.486,1536,2.486]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":281,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":1426,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["0.25s",{"_index":1060,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.2s",{"_index":1063,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.3",{"_index":1050,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.3s",{"_index":1061,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.4",{"_index":1055,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0/1",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["01012345678",{"_index":1159,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1",{"_index":480,"title":{"interfaces/Category-1.html":{},"interfaces/Subcategory-1.html":{}},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{}}}],["1/1",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1425,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1040,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["1000",{"_index":367,"title":{},"body":{"components/CartComponent.html":{},"components/RegisterComponent.html":{}}}],["11.26.2",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":854,"title":{},"body":{"components/HomeComponent.html":{}}}],["1200",{"_index":769,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["12px",{"_index":1046,"title":{},"body":{"components/NavbarComponent.html":{}}}],["14.0.0",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["15.0.0",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1424,"title":{},"body":{"overview.html":{}}}],["16a34a",{"_index":1038,"title":{},"body":{"components/NavbarComponent.html":{}}}],["19.0.0",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["19.1.0",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["19.1.4",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["19.2.0",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["19.2.15",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["19.2.17",{"_index":1317,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["197",{"_index":1048,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1px",{"_index":1053,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2",{"_index":739,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"overview.html":{}}}],["2).join",{"_index":857,"title":{},"body":{"components/HomeComponent.html":{}}}],["2.3.0",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1155,"title":{},"body":{"components/RegisterComponent.html":{}}}],["200",{"_index":1027,"title":{},"body":{"components/NavbarComponent.html":{}}}],["22c55e",{"_index":1039,"title":{},"body":{"components/NavbarComponent.html":{}}}],["3",{"_index":741,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/RegisterComponent.html":{}}}],["3.1.2",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":1030,"title":{},"body":{"components/NavbarComponent.html":{}}}],["3000",{"_index":755,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["4",{"_index":1019,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4.0.0",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":831,"title":{},"body":{"components/HomeComponent.html":{}}}],["4px",{"_index":1045,"title":{},"body":{"components/NavbarComponent.html":{}}}],["500",{"_index":901,"title":{},"body":{"components/LoginComponent.html":{}}}],["5px",{"_index":1072,"title":{},"body":{"components/NavbarComponent.html":{}}}],["6",{"_index":840,"title":{},"body":{"components/HomeComponent.html":{}}}],["6000",{"_index":834,"title":{},"body":{"components/HomeComponent.html":{}}}],["6–11",{"_index":1143,"title":{},"body":{"components/RegisterComponent.html":{}}}],["7.0.1",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1025,"title":{},"body":{"components/NavbarComponent.html":{}}}],["740",{"_index":838,"title":{},"body":{"components/HomeComponent.html":{}}}],["8",{"_index":890,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["8.0.0",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["800",{"_index":621,"title":{},"body":{"components/DetailsComponent.html":{}}}],["94",{"_index":1049,"title":{},"body":{"components/NavbarComponent.html":{}}}],["940",{"_index":839,"title":{},"body":{"components/HomeComponent.html":{}}}],["9]{6",{"_index":730,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["9]{8",{"_index":531,"title":{},"body":{"components/CheckOutComponent.html":{},"components/RegisterComponent.html":{}}}],["__v",{"_index":284,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{}}}],["_id",{"_index":277,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}}}],["a:hover",{"_index":1065,"title":{},"body":{"components/NavbarComponent.html":{}}}],["abstractcontrol",{"_index":1129,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":495,"title":{},"body":{"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{}}}],["activatedroute=inject(activatedroute",{"_index":640,"title":{},"body":{"components/DetailsComponent.html":{}}}],["active",{"_index":1010,"title":{},"body":{"components/NavbarComponent.html":{}}}],["actual_component",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["add",{"_index":273,"title":{},"body":{"components/CartComponent.html":{}}}],["addingstates",{"_index":249,"title":{},"body":{"components/CartComponent.html":{}}}],["addingstates()[item.product._id",{"_index":386,"title":{},"body":{"components/CartComponent.html":{}}}],["additional",{"_index":1412,"title":{},"body":{"index.html":{}}}],["addproducttocart",{"_index":406,"title":{},"body":{"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["addproducttocart(id",{"_index":411,"title":{},"body":{"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["address",{"_index":885,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["addtocart",{"_index":608,"title":{},"body":{"components/DetailsComponent.html":{}}}],["addtocart(id",{"_index":609,"title":{},"body":{"components/DetailsComponent.html":{}}}],["afterviewinit",{"_index":963,"title":{},"body":{"components/NavbarComponent.html":{}}}],["again",{"_index":558,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["alert",{"_index":343,"title":{},"body":{"components/CartComponent.html":{}}}],["alert('failed",{"_index":560,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["alert('something",{"_index":555,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["allbrands",{"_index":187,"title":{},"body":{"components/BrandsComponent.html":{}}}],["angular",{"_index":1352,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":295,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["angular/compiler",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":519,"title":{},"body":{"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/CartComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":1299,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate",{"_index":1074,"title":{},"body":{"components/NavbarComponent.html":{}}}],["animation",{"_index":1057,"title":{},"body":{"components/NavbarComponent.html":{}}}],["any):observable",{"_index":1085,"title":{},"body":{"injectables/OrdersService.html":{}}}],["api",{"_index":554,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1363,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply",{"_index":1014,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifacts",{"_index":1385,"title":{},"body":{"index.html":{}}}],["aura",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["authguard",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authlayoutcomponent",{"_index":66,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":111,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["authservice=inject(authservice",{"_index":897,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["automatically",{"_index":1364,"title":{},"body":{"index.html":{}}}],["autoplay",{"_index":832,"title":{},"body":{"components/HomeComponent.html":{}}}],["autoplay:true",{"_index":622,"title":{},"body":{"components/DetailsComponent.html":{}}}],["autoplayhoverpause",{"_index":835,"title":{},"body":{"components/HomeComponent.html":{}}}],["autoplayhoverpause:true",{"_index":624,"title":{},"body":{"components/DetailsComponent.html":{}}}],["autoplaytimeout",{"_index":833,"title":{},"body":{"components/HomeComponent.html":{}}}],["autoplaytimeout:4000",{"_index":623,"title":{},"body":{"components/DetailsComponent.html":{}}}],["available",{"_index":1377,"title":{},"body":{"index.html":{}}}],["background",{"_index":1035,"title":{},"body":{"components/NavbarComponent.html":{}}}],["basurl:'https://ecommerce.routemisr.com",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":424,"title":{},"body":{"injectables/CartService.html":{}}}],["blank",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["blanklayoutcomponent",{"_index":69,"title":{"components/BlankLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":1016,"title":{},"body":{"components/NavbarComponent.html":{}}}],["boolean",{"_index":514,"title":{},"body":{"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["bootstrap",{"_index":1297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstrapcontext",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["box",{"_index":1043,"title":{},"body":{"components/NavbarComponent.html":{}}}],["brand",{"_index":199,"title":{},"body":{"components/BrandsComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}}}],["brands",{"_index":181,"title":{},"body":{"components/BrandsComponent.html":{},"miscellaneous/variables.html":{}}}],["brands'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["brands.component.html",{"_index":185,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands.component.scss",{"_index":186,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands.modal_title",{"_index":227,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands.slug_label",{"_index":229,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands.title",{"_index":224,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brandscomponent",{"_index":71,"title":{"components/BrandsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["brandsservice",{"_index":189,"title":{"injectables/BrandsService.html":{}},"body":{"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"coverage.html":{}}}],["brandsservice=inject(brandsservice",{"_index":213,"title":{},"body":{"components/BrandsComponent.html":{}}}],["browser",{"_index":1313,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browseranimationsmodule",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":1300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":1381,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":1382,"title":{},"body":{"index.html":{}}}],["button",{"_index":1062,"title":{},"body":{"components/NavbarComponent.html":{}}}],["button:hover",{"_index":1064,"title":{},"body":{"components/NavbarComponent.html":{}}}],["buttonmodule",{"_index":183,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{}}}],["buttonmodule,translatemodule",{"_index":212,"title":{},"body":{"components/BrandsComponent.html":{}}}],["callback",{"_index":672,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["callback(flowbite",{"_index":679,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["canactivate",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivatefn",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":339,"title":{},"body":{"components/CartComponent.html":{}}}],["cancelbutton",{"_index":346,"title":{},"body":{"components/CartComponent.html":{}}}],["cancelbuttontext",{"_index":338,"title":{},"body":{"components/CartComponent.html":{}}}],["capital",{"_index":888,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["carousel",{"_index":634,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["carouselmodule",{"_index":600,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["carouselmodule,titlecasepipe,lowercasepipe,translatemodule",{"_index":639,"title":{},"body":{"components/DetailsComponent.html":{}}}],["cart",{"_index":245,"title":{},"body":{"components/CartComponent.html":{},"components/CheckOutComponent.html":{},"miscellaneous/variables.html":{}}}],["cart'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["cart.checkout",{"_index":376,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.clear_cart",{"_index":374,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.clearing",{"_index":373,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.html",{"_index":247,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.scss",{"_index":248,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.empty",{"_index":389,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.price",{"_index":381,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.redirecting",{"_index":375,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.remove",{"_index":385,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.removing",{"_index":384,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.title",{"_index":368,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.total_price",{"_index":369,"title":{},"body":{"components/CartComponent.html":{}}}],["cartcomponent",{"_index":73,"title":{"components/CartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["cartdetails",{"_index":250,"title":{},"body":{"components/CartComponent.html":{}}}],["cartdetails().products",{"_index":378,"title":{},"body":{"components/CartComponent.html":{}}}],["cartdetails().products.length",{"_index":377,"title":{},"body":{"components/CartComponent.html":{}}}],["cartdetails().totalcartprice",{"_index":370,"title":{},"body":{"components/CartComponent.html":{}}}],["cartid",{"_index":266,"title":{},"body":{"components/CartComponent.html":{},"components/CheckOutComponent.html":{},"injectables/OrdersService.html":{}}}],["cartitem",{"_index":391,"title":{"interfaces/CartItem.html":{}},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["cartnumber",{"_index":404,"title":{},"body":{"injectables/CartService.html":{},"components/NavbarComponent.html":{}}}],["cartowner",{"_index":278,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{}}}],["cartservice",{"_index":251,"title":{"injectables/CartService.html":{}},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["cartservice=inject(cartservice",{"_index":643,"title":{},"body":{"components/DetailsComponent.html":{}}}],["cat",{"_index":450,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["cat._id",{"_index":851,"title":{},"body":{"components/HomeComponent.html":{}}}],["cat.name",{"_index":465,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["catcherror((err",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categories",{"_index":437,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["categories'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["categories.component.html",{"_index":439,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.scss",{"_index":440,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.slug",{"_index":467,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.title",{"_index":464,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categoriescomponent",{"_index":75,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["categoriesservice",{"_index":441,"title":{"injectables/CategoriesService.html":{}},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["category",{"_index":398,"title":{"interfaces/Category.html":{},"interfaces/Category-1.html":{}},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"coverage.html":{}}}],["changedetectorref",{"_index":845,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["changedirection",{"_index":934,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["changedirection():void",{"_index":952,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["changelanguagetranslate",{"_index":935,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["changelanguagetranslate(language",{"_index":940,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["characters",{"_index":891,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["chars",{"_index":1144,"title":{},"body":{"components/RegisterComponent.html":{}}}],["check",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["checkout",{"_index":496,"title":{},"body":{"components/CheckOutComponent.html":{},"miscellaneous/variables.html":{}}}],["checkout.addresslabel",{"_index":564,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.addressminlength",{"_index":570,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.addressrequired",{"_index":568,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.citylabel",{"_index":578,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.cityminlength",{"_index":584,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.cityrequired",{"_index":582,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.confirmorder",{"_index":586,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('city')?.errors?.['minlength",{"_index":583,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('city')?.errors?.['required",{"_index":581,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('city')?.invalid",{"_index":580,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('city')?.touched",{"_index":579,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('details')?.errors?.['minlength",{"_index":569,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('details')?.errors?.['required",{"_index":567,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('details')?.invalid",{"_index":566,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('details')?.touched",{"_index":565,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('phone')?.errors?.['pattern",{"_index":576,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('phone')?.errors?.['required",{"_index":574,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('phone')?.invalid",{"_index":573,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get('phone')?.touched",{"_index":572,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'city\\')?.errors?.[\\'minlength",{"_index":598,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'city\\')?.errors?.[\\'required",{"_index":597,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'city\\')?.invalid",{"_index":596,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'city\\')?.touched",{"_index":595,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'details\\')?.errors?.[\\'minlength",{"_index":590,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'details\\')?.errors?.[\\'required",{"_index":589,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'details\\')?.invalid",{"_index":588,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'details\\')?.touched",{"_index":587,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'phone\\')?.errors?.[\\'pattern",{"_index":594,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'phone\\')?.errors?.[\\'required",{"_index":593,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'phone\\')?.invalid",{"_index":592,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.get(\\'phone\\')?.touched",{"_index":591,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.phonelabel",{"_index":571,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.phonepattern",{"_index":577,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.phonerequired",{"_index":575,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.processing",{"_index":585,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout.title",{"_index":563,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["checkout/:id",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkoutcomponent",{"_index":77,"title":{"components/CheckOutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["children",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choose",{"_index":1408,"title":{},"body":{"index.html":{}}}],["city",{"_index":532,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["class",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{}}}],["clear",{"_index":331,"title":{},"body":{"components/CartComponent.html":{}}}],["clearcart",{"_index":257,"title":{},"body":{"components/CartComponent.html":{}}}],["cleared",{"_index":356,"title":{},"body":{"components/CartComponent.html":{}}}],["clearing",{"_index":361,"title":{},"body":{"components/CartComponent.html":{}}}],["clearusercart",{"_index":407,"title":{},"body":{"injectables/CartService.html":{}}}],["cli",{"_index":1353,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":740,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"index.html":{}}}],["codescandy",{"_index":691,"title":{},"body":{"components/FooterComponent.html":{}}}],["color",{"_index":1041,"title":{},"body":{"components/NavbarComponent.html":{}}}],["come",{"_index":1406,"title":{},"body":{"index.html":{}}}],["command",{"_index":1400,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["compile",{"_index":1383,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1375,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":984,"title":{},"body":{"components/NavbarComponent.html":{}}}],["config",{"_index":1288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm",{"_index":345,"title":{},"body":{"components/CartComponent.html":{},"components/CheckOutComponent.html":{},"components/RegisterComponent.html":{}}}],["confirmbutton",{"_index":344,"title":{},"body":{"components/CartComponent.html":{}}}],["confirmbuttontext",{"_index":336,"title":{},"body":{"components/CartComponent.html":{}}}],["confirmed",{"_index":546,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["confirming",{"_index":559,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["confirmorder",{"_index":500,"title":{},"body":{"components/CheckOutComponent.html":{},"injectables/OrdersService.html":{}}}],["confirmorder(cartid",{"_index":1081,"title":{},"body":{"injectables/OrdersService.html":{}}}],["console.error",{"_index":550,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["console.error('error",{"_index":538,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["console.log",{"_index":544,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["console.log(err",{"_index":312,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{}}}],["console.log(res",{"_index":652,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(res.data",{"_index":216,"title":{},"body":{"components/BrandsComponent.html":{},"components/DetailsComponent.html":{}}}],["const",{"_index":947,"title":{},"body":{"injectables/MyTranslateService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"components/CheckOutComponent.html":{},"injectables/FlowbiteService.html":{},"injectables/MyTranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["constructor(@inject(platform_id",{"_index":676,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["constructor(flowbiteservice",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(httpclient",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["constructor(platformid",{"_index":667,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["constructor(private",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["constructor(translateservice",{"_index":936,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["context",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core/services/auth/auth.service",{"_index":736,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/brands/brands.service",{"_index":211,"title":{},"body":{"components/BrandsComponent.html":{}}}],["core/services/cart/cart.service",{"_index":300,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["core/services/categories/categories.service",{"_index":457,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["core/services/flowbite/flowbite.service",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["core/services/mytranslate/my",{"_index":994,"title":{},"body":{"components/NavbarComponent.html":{}}}],["core/services/orders/orders.service",{"_index":520,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["core/services/products/products.service",{"_index":636,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["count",{"_index":394,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{}}}],["coverage",{"_index":1256,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdat",{"_index":282,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}}}],["createnoderequesthandler(app",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currency",{"_index":371,"title":{},"body":{"components/CartComponent.html":{}}}],["currencypipe",{"_index":246,"title":{},"body":{"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["currentlang",{"_index":970,"title":{},"body":{"components/NavbarComponent.html":{}}}],["customclass",{"_index":340,"title":{},"body":{"components/CartComponent.html":{}}}],["customdetailsslider",{"_index":605,"title":{},"body":{"components/DetailsComponent.html":{}}}],["custommainslider",{"_index":819,"title":{},"body":{"components/HomeComponent.html":{}}}],["customoptions",{"_index":820,"title":{},"body":{"components/HomeComponent.html":{}}}],["dark:text",{"_index":1026,"title":{},"body":{"components/NavbarComponent.html":{}}}],["data",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["data(id",{"_index":641,"title":{},"body":{"components/DetailsComponent.html":{}}}],["decode",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["default",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{}}}],["dependencies",{"_index":1307,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":486,"title":{},"body":{"interfaces/Category-1.html":{},"interfaces/IProduct.html":{},"interfaces/Subcategory-1.html":{}}}],["detailed",{"_index":1417,"title":{},"body":{"index.html":{}}}],["details",{"_index":526,"title":{},"body":{"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["details'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["details.component.html",{"_index":603,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":604,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details/:id",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detailscomponent",{"_index":80,"title":{"components/DetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["dev",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":1355,"title":{},"body":{"index.html":{}}}],["dialogmodule",{"_index":182,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{}}}],["directive",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["directives",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["directory",{"_index":1387,"title":{},"body":{"index.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dismissondestroy",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":1386,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["dots",{"_index":619,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["dropdown",{"_index":1069,"title":{},"body":{"components/NavbarComponent.html":{}}}],["duration",{"_index":1029,"title":{},"body":{"components/NavbarComponent.html":{}}}],["during",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["e.g",{"_index":1158,"title":{},"body":{"components/RegisterComponent.html":{}}}],["e2e",{"_index":1403,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1405,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1031,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ecommerce",{"_index":1348,"title":{},"body":{"index.html":{}}}],["effect",{"_index":1033,"title":{},"body":{"components/NavbarComponent.html":{}}}],["egyptian",{"_index":1146,"title":{},"body":{"components/RegisterComponent.html":{}}}],["element",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["email",{"_index":732,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["en",{"_index":988,"title":{},"body":{"components/NavbarComponent.html":{}}}],["end",{"_index":1402,"title":{},"body":{"index.html":{}}}],["enter",{"_index":883,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["environment",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.basurl}/api/v1/cart",{"_index":426,"title":{},"body":{"injectables/CartService.html":{}}}],["environment.basurl}/api/v1/cart/${id",{"_index":434,"title":{},"body":{"injectables/CartService.html":{}}}],["environment/environment",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["err",{"_index":311,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"miscellaneous/variables.html":{}}}],["err.error.message",{"_index":753,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error",{"_index":310,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{}}}],["error:(err",{"_index":650,"title":{},"body":{"components/DetailsComponent.html":{}}}],["error:(err)=>{console.log(err",{"_index":1174,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormsg",{"_index":700,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errormsg:string",{"_index":1162,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormsg:string|null=null",{"_index":895,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorsinterceptor",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventcoalescing",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":1141,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["exceed",{"_index":1154,"title":{},"body":{"components/RegisterComponent.html":{}}}],["execute",{"_index":1394,"title":{},"body":{"index.html":{}}}],["export",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{}}}],["express",{"_index":1329,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1068,"title":{},"body":{"components/NavbarComponent.html":{}}}],["fail",{"_index":759,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["false",{"_index":315,"title":{},"body":{"components/CartComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["fetching",{"_index":539,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{},"coverage.html":{}}}],["files",{"_index":1368,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fireoninit",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flowbite",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/FlowbiteService.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["flowbiteservice",{"_index":29,"title":{"injectables/FlowbiteService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FlowbiteService.html":{},"coverage.html":{}}}],["following",{"_index":1399,"title":{},"body":{"index.html":{}}}],["font",{"_index":1022,"title":{},"body":{"components/NavbarComponent.html":{}}}],["footer",{"_index":681,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["footer.component.html",{"_index":682,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":683,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.copyright",{"_index":690,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.follow_us",{"_index":692,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.get_app_desc",{"_index":685,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.get_app_title",{"_index":684,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.get_deliveries",{"_index":688,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.payment_partners",{"_index":687,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.share_app_link",{"_index":686,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":108,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["footercomponent",{"_index":16,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["footercomponent,ngxspinnercomponent",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["forget",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["forgetpasswordcomponent",{"_index":83,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":1131,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.get('password')?.value",{"_index":1166,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.get('repassword')?.value",{"_index":1167,"title":{},"body":{"components/RegisterComponent.html":{}}}],["format",{"_index":1147,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":497,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["formbuilder=inject(formbuilder",{"_index":1163,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":735,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol(null",{"_index":721,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":511,"title":{},"body":{"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":491,"title":{},"body":{"components/CheckOutComponent.html":{},"components/ProductsComponent.html":{}}}],["fortawesome/fontawesome",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":1407,"title":{},"body":{"index.html":{}}}],["free",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["freshcart",{"_index":689,"title":{},"body":{"components/FooterComponent.html":{}}}],["full",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":673,"title":{},"body":{"injectables/FlowbiteService.html":{},"coverage.html":{}}}],["functions",{"_index":1343,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gbp",{"_index":372,"title":{},"body":{"components/CartComponent.html":{}}}],["generate",{"_index":1373,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1350,"title":{},"body":{"index.html":{}}}],["getallbrands",{"_index":192,"title":{},"body":{"components/BrandsComponent.html":{},"injectables/BrandsService.html":{}}}],["getallbrands():observable",{"_index":239,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getallcategories",{"_index":470,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getallcategories():observable",{"_index":476,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getallcategoriesdata",{"_index":444,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["getallproducts",{"_index":1113,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getallproducts():observable",{"_index":1119,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getcartid",{"_index":501,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["getcategoriesdata",{"_index":821,"title":{},"body":{"components/HomeComponent.html":{}}}],["getloggedusercart",{"_index":258,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartService.html":{}}}],["getproductsdata",{"_index":822,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["getspecificbrand",{"_index":232,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getspecificbrand(id",{"_index":235,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getspecificbrand(id:string",{"_index":241,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getspecificcategory",{"_index":471,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getspecificcategory(id",{"_index":474,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getspecificcategory(id:string):observable",{"_index":478,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getspecificproducts",{"_index":1114,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getspecificproducts(id",{"_index":1117,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getspecificproducts(id:string",{"_index":1121,"title":{},"body":{"injectables/ProductsService.html":{}}}],["gotocheckout",{"_index":259,"title":{},"body":{"components/CartComponent.html":{}}}],["gotocheckout(cartid",{"_index":264,"title":{},"body":{"components/CartComponent.html":{}}}],["gradient",{"_index":1012,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gradient(135deg",{"_index":1037,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gray",{"_index":1024,"title":{},"body":{"components/NavbarComponent.html":{}}}],["groups",{"_index":1245,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["groups.filter((item",{"_index":1248,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["handler",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headerinterceptor",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":428,"title":{},"body":{"injectables/CartService.html":{}}}],["headers:{token:this.usertoken",{"_index":1089,"title":{},"body":{"injectables/OrdersService.html":{}}}],["helpbuilding",{"_index":1380,"title":{},"body":{"index.html":{}}}],["home",{"_index":815,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["home.component.html",{"_index":817,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":818,"title":{},"body":{"components/HomeComponent.html":{}}}],["home_page.categories_section.title",{"_index":850,"title":{},"body":{"components/HomeComponent.html":{}}}],["home_page.popular_products_section.title",{"_index":852,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":86,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["host",{"_index":964,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hover",{"_index":1032,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["htmlcontainer",{"_index":347,"title":{},"body":{"components/CartComponent.html":{}}}],["http",{"_index":1346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":1362,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpclient:httpclient",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["httpinterceptorfn",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":1279,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httploaderfactory(http",{"_index":1345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ibrand",{"_index":197,"title":{"interfaces/IBrand.html":{}},"body":{"components/BrandsComponent.html":{},"interfaces/IBrand.html":{},"coverage.html":{}}}],["icart",{"_index":301,"title":{"interfaces/ICart.html":{}},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["icategory",{"_index":448,"title":{"interfaces/ICategory.html":{}},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"interfaces/ICategory.html":{},"coverage.html":{}}}],["icon",{"_index":333,"title":{},"body":{"components/CartComponent.html":{}}}],["id",{"_index":238,"title":{},"body":{"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProduct.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"interfaces/Subcategory-1.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":402,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}}}],["imagecover",{"_index":397,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}}}],["images",{"_index":484,"title":{},"body":{"interfaces/Category-1.html":{},"interfaces/IProduct.html":{},"interfaces/Subcategory-1.html":{}}}],["implements",{"_index":179,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{}}}],["import",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{}}}],["import('./pages/brands/brands.component').then(m",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/cart/cart.component').then(m",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/categories/categories.component').then(m",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/check",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/details/details.component').then(m",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/home/home.component').then(m",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('./pages/products/products.component').then(m",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import('flowbite').then(flowbite",{"_index":678,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["important",{"_index":1054,"title":{},"body":{"components/NavbarComponent.html":{}}}],["importprovidersfrom(ngxspinnermodule,translatemodule.forroot",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["includes",{"_index":1370,"title":{},"body":{"index.html":{}}}],["including",{"_index":1416,"title":{},"body":{"index.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{}}}],["information",{"_index":1415,"title":{},"body":{"index.html":{}}}],["initflowbite",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["initform",{"_index":502,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["inject",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(activatedroute",{"_index":508,"title":{},"body":{"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{}}}],["inject(authservice",{"_index":714,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(brandsservice",{"_index":202,"title":{},"body":{"components/BrandsComponent.html":{}}}],["inject(cartservice",{"_index":286,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["inject(categoriesservice",{"_index":452,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["inject(formbuilder",{"_index":512,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["inject(mytranslateservice",{"_index":991,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inject(ordersservice",{"_index":516,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["inject(platform_id",{"_index":945,"title":{},"body":{"injectables/MyTranslateService.html":{},"miscellaneous/variables.html":{}}}],["inject(productsservice",{"_index":630,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["inject(rendererfactory2).createrenderer(null",{"_index":943,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["inject(router",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(toastrservice",{"_index":293,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["injectable",{"_index":110,"title":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/MyTranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/MyTranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["injectables",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/MyTranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"overview.html":{}}}],["input",{"_index":993,"title":{},"body":{"components/NavbarComponent.html":{}}}],["input(true",{"_index":997,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inputs",{"_index":975,"title":{},"body":{"components/NavbarComponent.html":{}}}],["interface",{"_index":390,"title":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":392,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"overview.html":{}}}],["invalid",{"_index":761,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["iproduct",{"_index":482,"title":{"interfaces/IProduct.html":{}},"body":{"interfaces/Category-1.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"interfaces/IProduct.html":{},"components/ProductsComponent.html":{},"interfaces/Subcategory-1.html":{},"coverage.html":{}}}],["ischeckingout",{"_index":252,"title":{},"body":{"components/CartComponent.html":{}}}],["isclearing",{"_index":253,"title":{},"body":{"components/CartComponent.html":{}}}],["isdropdownopen",{"_index":971,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isloading",{"_index":498,"title":{},"body":{"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isloading:boolean=false",{"_index":894,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["islogin",{"_index":976,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isplatformbrowser",{"_index":674,"title":{},"body":{"injectables/FlowbiteService.html":{},"injectables/MyTranslateService.html":{}}}],["isplatformbrowser(id",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isplatformbrowser(this.platformid",{"_index":677,"title":{},"body":{"injectables/FlowbiteService.html":{},"injectables/MyTranslateService.html":{}}}],["issuccess",{"_index":701,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["issuccess:string",{"_index":896,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":324,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{}}}],["item.count",{"_index":387,"title":{},"body":{"components/CartComponent.html":{}}}],["item.price",{"_index":382,"title":{},"body":{"components/CartComponent.html":{}}}],["item.product._id",{"_index":379,"title":{},"body":{"components/CartComponent.html":{}}}],["item.product.title",{"_index":380,"title":{},"body":{"components/CartComponent.html":{}}}],["item.title?.tolowercase().includes(word.tolowercase",{"_index":1249,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["items",{"_index":357,"title":{},"body":{"components/CartComponent.html":{},"components/HomeComponent.html":{}}}],["items:1",{"_index":625,"title":{},"body":{"components/DetailsComponent.html":{}}}],["jwt",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdecode(localstorage.getitem('usertoken",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1395,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":1070,"title":{},"body":{"components/NavbarComponent.html":{}}}],["language",{"_index":942,"title":{},"body":{"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{}}}],["later",{"_index":561,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["layout",{"_index":105,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["layout.component.html",{"_index":106,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout.component.scss",{"_index":107,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout.component.ts",{"_index":104,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["layout/auth",{"_index":103,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["layout/blank",{"_index":177,"title":{},"body":{"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["layouts/footer/footer.component",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["letter",{"_index":889,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["limit",{"_index":1252,"title":{},"body":{"pipes/TermtextPipe.html":{}}}],["limit).join",{"_index":1255,"title":{},"body":{"pipes/TermtextPipe.html":{}}}],["linear",{"_index":1036,"title":{},"body":{"components/NavbarComponent.html":{}}}],["link",{"_index":1013,"title":{},"body":{"components/NavbarComponent.html":{}}}],["link):hover",{"_index":1059,"title":{},"body":{"components/NavbarComponent.html":{}}}],["link:hover",{"_index":1034,"title":{},"body":{"components/NavbarComponent.html":{}}}],["link:not(.active",{"_index":1058,"title":{},"body":{"components/NavbarComponent.html":{}}}],["list",{"_index":1376,"title":{},"body":{"index.html":{}}}],["loadcomponent",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loader",{"_index":1323,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loadflowbite",{"_index":666,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["loadflowbite(callback",{"_index":670,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["loadinginterceptor",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1356,"title":{},"body":{"index.html":{}}}],["localstorage.getitem('lang",{"_index":949,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["localstorage.getitem('lang')==='ar",{"_index":956,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["localstorage.getitem('lang')==='en",{"_index":953,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["localstorage.getitem('usertoken",{"_index":422,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem('usertoken')!=null",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('usertoken",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('lang',language",{"_index":959,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["localstorage.setitem('usertoken",{"_index":765,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["loggedguard",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":867,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["login.button",{"_index":918,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":868,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":869,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.email_invalid",{"_index":910,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.email_label",{"_index":904,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.email_required",{"_index":908,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.forgot_password",{"_index":921,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.no_account",{"_index":919,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password_label",{"_index":911,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password_pattern",{"_index":917,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password_required",{"_index":915,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.signup_link",{"_index":920,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.title",{"_index":903,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":88,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginform",{"_index":870,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.errors?.['email",{"_index":909,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.errors?.['required",{"_index":907,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.invalid",{"_index":906,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.touched",{"_index":905,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password')?.errors?.['pattern",{"_index":916,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password')?.errors?.['required",{"_index":914,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password')?.invalid",{"_index":913,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password')?.touched",{"_index":912,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.errors?.[\\'email",{"_index":925,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.errors?.[\\'required",{"_index":924,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.invalid",{"_index":923,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.touched",{"_index":922,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password\\')?.errors?.[\\'pattern",{"_index":929,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password\\')?.errors?.[\\'required",{"_index":928,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password\\')?.invalid",{"_index":927,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password\\')?.touched",{"_index":926,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout():void",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["loop",{"_index":615,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["lowercase",{"_index":660,"title":{},"body":{"components/DetailsComponent.html":{}}}],["lowercasepipe",{"_index":602,"title":{},"body":{"components/DetailsComponent.html":{}}}],["m.brandscomponent",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.cartcomponent",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.categoriescomponent",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.checkoutcomponent",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.detailscomponent",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.homecomponent",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.productscomponent",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":1002,"title":{},"body":{"components/NavbarComponent.html":{}}}],["match",{"_index":1157,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":1153,"title":{},"body":{"components/RegisterComponent.html":{}}}],["md",{"_index":1021,"title":{},"body":{"components/NavbarComponent.html":{}}}],["medium",{"_index":1023,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu",{"_index":1003,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{}}}],["minlength",{"_index":1152,"title":{},"body":{"components/RegisterComponent.html":{}}}],["minus",{"_index":274,"title":{},"body":{"components/CartComponent.html":{}}}],["miscellaneous",{"_index":1342,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1132,"title":{},"body":{"components/RegisterComponent.html":{}}}],["modern",{"_index":342,"title":{},"body":{"components/CartComponent.html":{},"components/NavbarComponent.html":{}}}],["modify",{"_index":1367,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1423,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1414,"title":{},"body":{"index.html":{}}}],["mousedrag",{"_index":616,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["mytranslateservice",{"_index":930,"title":{"injectables/MyTranslateService.html":{}},"body":{"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["name",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{},"miscellaneous/functions.html":{}}}],["name:[null",{"_index":1165,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namefor",{"_index":1374,"title":{},"body":{"index.html":{}}}],["nav",{"_index":627,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar",{"_index":965,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["navbar.brands",{"_index":1007,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.categories",{"_index":1006,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":969,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":968,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.home",{"_index":1004,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.login",{"_index":1008,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.products",{"_index":1005,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.register",{"_index":1009,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":109,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["navbarcomponent",{"_index":90,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1361,"title":{},"body":{"index.html":{}}}],["navspeed",{"_index":620,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["navtext",{"_index":626,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["needs",{"_index":1411,"title":{},"body":{"index.html":{}}}],["new",{"_index":719,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":720,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["next",{"_index":305,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"miscellaneous/variables.html":{}}}],["next(req",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe(finalize",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next:(p",{"_index":646,"title":{},"body":{"components/DetailsComponent.html":{}}}],["next:(res",{"_index":215,"title":{},"body":{"components/BrandsComponent.html":{},"components/DetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["ng",{"_index":1358,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":972,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngclass",{"_index":697,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ngclass,translatemodule",{"_index":893,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["ngskiphydration",{"_index":996,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngx",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["ngxspinnercomponent",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["ngxspinnerservice.hide",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxspinnerservice.show",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxspinnerservice=inject(ngxspinnerservice",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfound",{"_index":1076,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["notfound.component.html",{"_index":1077,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound.component.scss",{"_index":1078,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfoundcomponent",{"_index":92,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":236,"title":{},"body":{"injectables/BrandsService.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["null):observable",{"_index":242,"title":{},"body":{"injectables/BrandsService.html":{},"injectables/ProductsService.html":{}}}],["number",{"_index":272,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"components/RegisterComponent.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{}}}],["o",{"_index":635,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["object",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MyTranslateService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["one",{"_index":1409,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":180,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["opacity",{"_index":1071,"title":{},"body":{"components/NavbarComponent.html":{}}}],["open",{"_index":1001,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["opendialog",{"_index":193,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{}}}],["opendialog(brand",{"_index":196,"title":{},"body":{"components/BrandsComponent.html":{}}}],["opendialog(cat",{"_index":447,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["optimizes",{"_index":1389,"title":{},"body":{"index.html":{}}}],["optional",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":545,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["orderdata",{"_index":1082,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordersservice",{"_index":499,"title":{"injectables/OrdersService.html":{}},"body":{"components/CheckOutComponent.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["out",{"_index":490,"title":{},"body":{"components/CheckOutComponent.html":{},"components/NavbarComponent.html":{}}}],["out'},{'name",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["out.component').then(m",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out.component.html",{"_index":493,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.scss",{"_index":494,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.ts",{"_index":489,"title":{},"body":{"components/CheckOutComponent.html":{},"coverage.html":{}}}],["out.component.ts:21",{"_index":513,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.ts:22",{"_index":509,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.ts:23",{"_index":517,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.ts:24",{"_index":515,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.ts:25",{"_index":510,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.ts:26",{"_index":503,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.ts:30",{"_index":507,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.ts:34",{"_index":506,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.ts:45",{"_index":505,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out.component.ts:55",{"_index":504,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["out/check",{"_index":488,"title":{},"body":{"components/CheckOutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":1420,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owl",{"_index":633,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["owloptions",{"_index":614,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["p",{"_index":535,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["p.get('id",{"_index":537,"title":{},"body":{"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{}}}],["package",{"_index":1306,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1422,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":696,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["password.component.html",{"_index":698,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.scss",{"_index":699,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":695,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:110",{"_index":712,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:141",{"_index":713,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":715,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":725,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":727,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":717,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":716,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":718,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":726,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":734,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":731,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:45",{"_index":724,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:53",{"_index":711,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:82",{"_index":710,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password/forget",{"_index":694,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["passwordmatch",{"_index":1127,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmatch(form",{"_index":1128,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwords",{"_index":1156,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":886,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["payment",{"_index":551,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["performance",{"_index":1390,"title":{},"body":{"index.html":{}}}],["phone",{"_index":529,"title":{},"body":{"components/CheckOutComponent.html":{},"components/RegisterComponent.html":{}}}],["pipe",{"_index":1238,"title":{"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{}},"body":{"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":1239,"title":{},"body":{"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{},"index.html":{},"overview.html":{}}}],["pipetransform",{"_index":1246,"title":{},"body":{"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{}}}],["platform_id",{"_index":675,"title":{},"body":{"injectables/FlowbiteService.html":{},"injectables/MyTranslateService.html":{}}}],["platformid",{"_index":669,"title":{},"body":{"injectables/FlowbiteService.html":{},"injectables/MyTranslateService.html":{}}}],["please",{"_index":556,"title":{},"body":{"components/CheckOutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["popup",{"_index":341,"title":{},"body":{"components/CartComponent.html":{}}}],["powerful",{"_index":1371,"title":{},"body":{"index.html":{}}}],["preset",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["price",{"_index":395,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/HomeComponent.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}}}],["primeng",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["primeng/button",{"_index":209,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{}}}],["primeng/dialog",{"_index":210,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{}}}],["primeng/themes",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["product",{"_index":396,"title":{"interfaces/Product.html":{}},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"components/HomeComponent.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["product.category.name",{"_index":855,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["product.price",{"_index":859,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["product.ratingsaverage",{"_index":862,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["product.title",{"_index":1109,"title":{},"body":{"components/ProductsComponent.html":{}}}],["product.title.split",{"_index":856,"title":{},"body":{"components/HomeComponent.html":{}}}],["product_card.add_to_cart",{"_index":863,"title":{},"body":{"components/HomeComponent.html":{}}}],["product_card.price_format",{"_index":858,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["product_card.rating_label",{"_index":860,"title":{},"body":{"components/HomeComponent.html":{}}}],["product_details.add_to_cart",{"_index":664,"title":{},"body":{"components/DetailsComponent.html":{}}}],["product_details.currency",{"_index":662,"title":{},"body":{"components/DetailsComponent.html":{}}}],["product_details.title",{"_index":655,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdetails",{"_index":606,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdetails.description",{"_index":659,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdetails.images",{"_index":656,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdetails.price",{"_index":661,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdetails.ratingsaverage",{"_index":663,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdetails.title",{"_index":657,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productdetails:iproduct|null",{"_index":645,"title":{},"body":{"components/DetailsComponent.html":{}}}],["productid",{"_index":427,"title":{},"body":{"injectables/CartService.html":{},"components/DetailsComponent.html":{}}}],["production",{"_index":1388,"title":{},"body":{"index.html":{}}}],["products",{"_index":279,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"components/HomeComponent.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"interfaces/Subcategory.html":{},"miscellaneous/variables.html":{}}}],["products'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["products().slice(0",{"_index":853,"title":{},"body":{"components/HomeComponent.html":{}}}],["products.add_to_cart",{"_index":1111,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products.component.html",{"_index":1093,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products.component.scss",{"_index":1094,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products.title",{"_index":1107,"title":{},"body":{"components/ProductsComponent.html":{}}}],["productscomponent",{"_index":94,"title":{"components/ProductsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["productsservice",{"_index":607,"title":{"injectables/ProductsService.html":{}},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productsservice=inject(productsservice",{"_index":642,"title":{},"body":{"components/DetailsComponent.html":{}}}],["project",{"_index":1349,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"properties.html":{}}}],["provide",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/MyTranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["providehttpclient(withfetch",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideprimeng",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providesweetalert2",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetoastr",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pulldrag",{"_index":618,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["px",{"_index":1018,"title":{},"body":{"components/NavbarComponent.html":{}}}],["py",{"_index":1017,"title":{},"body":{"components/NavbarComponent.html":{}}}],["quantity",{"_index":271,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}}}],["rating",{"_index":861,"title":{},"body":{"components/HomeComponent.html":{}}}],["ratingsaverage",{"_index":399,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}}}],["ratingsquantity",{"_index":485,"title":{},"body":{"interfaces/Category-1.html":{},"interfaces/IProduct.html":{},"interfaces/Subcategory-1.html":{}}}],["reactiveformsmodule",{"_index":492,"title":{},"body":{"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reactiveformsmodule,ngclass,translatemodule",{"_index":737,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reactiveformsmodule,translatemodule",{"_index":521,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["readme",{"_index":1347,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":188,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["redirectto",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":1421,"title":{},"body":{"index.html":{}}}],["references",{"_index":1418,"title":{},"body":{"index.html":{}}}],["register",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["register.button",{"_index":1214,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1124,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1125,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.confirm_label",{"_index":1200,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.confirm_mismatch",{"_index":1206,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.confirm_required",{"_index":1205,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.email_invalid",{"_index":1192,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.email_label",{"_index":1186,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.email_required",{"_index":1190,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.have_account",{"_index":1215,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.login_link",{"_index":1216,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.name_label",{"_index":1177,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.name_max",{"_index":1185,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.name_min",{"_index":1183,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.name_required",{"_index":1181,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.password_label",{"_index":1193,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.password_pattern",{"_index":1199,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.password_required",{"_index":1197,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.phone_invalid",{"_index":1213,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.phone_label",{"_index":1207,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.phone_required",{"_index":1211,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.title",{"_index":1176,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":96,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerform",{"_index":1126,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('email')?.errors?.['email",{"_index":1191,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('email')?.errors?.['required",{"_index":1189,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('email')?.invalid",{"_index":1188,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('email')?.touched",{"_index":1187,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('name')?.errors?.['maxlength",{"_index":1184,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('name')?.errors?.['minlength",{"_index":1182,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('name')?.errors?.['required",{"_index":1180,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('name')?.invalid",{"_index":1179,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('name')?.touched",{"_index":1178,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('password')?.errors?.['pattern",{"_index":1198,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('password')?.errors?.['required",{"_index":1196,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('password')?.invalid",{"_index":1195,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('password')?.touched",{"_index":1194,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('phone')?.errors?.['pattern",{"_index":1212,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('phone')?.errors?.['required",{"_index":1210,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('phone')?.invalid",{"_index":1209,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('phone')?.touched",{"_index":1208,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('repassword')?.errors?.['required",{"_index":1204,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('repassword')?.invalid",{"_index":1202,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('repassword')?.touched",{"_index":1201,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'email\\')?.errors?.[\\'email",{"_index":1225,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'email\\')?.errors?.[\\'required",{"_index":1224,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'email\\')?.invalid",{"_index":1223,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'email\\')?.touched",{"_index":1222,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'name\\')?.errors?.[\\'maxlength",{"_index":1221,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'name\\')?.errors?.[\\'minlength",{"_index":1220,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'name\\')?.errors?.[\\'required",{"_index":1219,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'name\\')?.invalid",{"_index":1218,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'name\\')?.touched",{"_index":1217,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'password\\')?.errors?.[\\'pattern",{"_index":1229,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'password\\')?.errors?.[\\'required",{"_index":1228,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'password\\')?.invalid",{"_index":1227,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'password\\')?.touched",{"_index":1226,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'phone\\')?.errors?.[\\'pattern",{"_index":1237,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'phone\\')?.errors?.[\\'required",{"_index":1236,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'phone\\')?.invalid",{"_index":1235,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'phone\\')?.touched",{"_index":1234,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'repassword\\')?.errors?.[\\'required",{"_index":1233,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'repassword\\')?.invalid",{"_index":1231,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'repassword\\')?.touched",{"_index":1230,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.haserror('mismatch",{"_index":1203,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.haserror(\\'mismatch",{"_index":1232,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform:formgroup",{"_index":1164,"title":{},"body":{"components/RegisterComponent.html":{}}}],["relative",{"_index":1015,"title":{},"body":{"components/NavbarComponent.html":{}}}],["reload",{"_index":1365,"title":{},"body":{"index.html":{}}}],["remove",{"_index":323,"title":{},"body":{"components/CartComponent.html":{}}}],["removed",{"_index":320,"title":{},"body":{"components/CartComponent.html":{}}}],["removeitem",{"_index":260,"title":{},"body":{"components/CartComponent.html":{}}}],["removeitem(id",{"_index":268,"title":{},"body":{"components/CartComponent.html":{}}}],["removespecificcartitem",{"_index":408,"title":{},"body":{"injectables/CartService.html":{}}}],["removespecificcartitem(id",{"_index":415,"title":{},"body":{"injectables/CartService.html":{}}}],["removingstates",{"_index":254,"title":{},"body":{"components/CartComponent.html":{}}}],["removingstates()[item.product._id",{"_index":383,"title":{},"body":{"components/CartComponent.html":{}}}],["renderer2",{"_index":933,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["rendererfactory2",{"_index":944,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["rendermode",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repassword",{"_index":1145,"title":{},"body":{"components/RegisterComponent.html":{}}}],["req",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('cart')||req.url.includes('orders')||req.url.includes('wishlist",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqhandler",{"_index":1301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":882,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":306,"title":{},"body":{"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["res.data",{"_index":649,"title":{},"body":{"components/DetailsComponent.html":{}}}],["res.message",{"_index":749,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["res.session.url",{"_index":549,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["res.session?.url",{"_index":547,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["res.status",{"_index":317,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["res.statusmsg",{"_index":748,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["res.token",{"_index":766,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["res?.data?.products",{"_index":307,"title":{},"body":{"components/CartComponent.html":{}}}],["reset",{"_index":742,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["reset_password.email_label",{"_index":773,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.error_invalid_code",{"_index":789,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.error_invalid_email",{"_index":779,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.error_invalid_password",{"_index":799,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.error_required_code",{"_index":787,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.error_required_email",{"_index":777,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.error_required_password",{"_index":797,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.new_password_label",{"_index":793,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.reset_btn",{"_index":801,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.resetting",{"_index":800,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.send_code",{"_index":781,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.sending",{"_index":780,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.title",{"_index":771,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.verify_btn",{"_index":791,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.verify_code",{"_index":783,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["reset_password.verifying",{"_index":790,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetcode",{"_index":728,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword",{"_index":702,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword.get('newpassword')?.errors?.['pattern",{"_index":798,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword.get('newpassword')?.errors?.['required",{"_index":796,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword.get('newpassword')?.invalid",{"_index":794,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword.get('newpassword')?.touched",{"_index":795,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword.get(\\'newpassword\\')?.errors?.[\\'pattern",{"_index":813,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword.get(\\'newpassword\\')?.errors?.[\\'required",{"_index":812,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword.get(\\'newpassword\\')?.invalid",{"_index":810,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resetpassword.get(\\'newpassword\\')?.touched",{"_index":811,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["resolve(serverdistfolder",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":1413,"title":{},"body":{"index.html":{}}}],["responsive",{"_index":837,"title":{},"body":{"components/HomeComponent.html":{}}}],["result.isconfirmed",{"_index":350,"title":{},"body":{"components/CartComponent.html":{}}}],["results",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":553,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["returns",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{}}}],["reversebuttons",{"_index":348,"title":{},"body":{"components/CartComponent.html":{}}}],["rgba(34",{"_index":1047,"title":{},"body":{"components/NavbarComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/FlowbiteService.html":{},"injectables/MyTranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{}}}],["root'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["rounded",{"_index":1020,"title":{},"body":{"components/NavbarComponent.html":{}}}],["route",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"components/CartComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/home",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router=inject(router",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["routerlink",{"_index":816,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["routerlink,ngclass,translatemodule",{"_index":1161,"title":{},"body":{"components/RegisterComponent.html":{}}}],["routerlinkactive",{"_index":966,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["routeroutlet",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["routes",{"_index":1295,"title":{"routes.html":{}},"body":{"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["rtl",{"_index":830,"title":{},"body":{"components/HomeComponent.html":{}}}],["run",{"_index":1357,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1397,"title":{},"body":{"index.html":{}}}],["running",{"_index":1360,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["save",{"_index":900,"title":{},"body":{"components/LoginComponent.html":{}}}],["savedlang",{"_index":948,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["saveuserdata",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveuserdata():void",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":1369,"title":{},"body":{"index.html":{}}}],["scale(1.05",{"_index":1066,"title":{},"body":{"components/NavbarComponent.html":{}}}],["schematics",{"_index":1378,"title":{},"body":{"index.html":{}}}],["scrollpositionrestoration",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":1241,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["search:searchword",{"_index":1108,"title":{},"body":{"components/ProductsComponent.html":{}}}],["searchpipe",{"_index":1092,"title":{"pipes/SearchPipe.html":{}},"body":{"components/ProductsComponent.html":{},"pipes/SearchPipe.html":{},"coverage.html":{}}}],["searchword",{"_index":442,"title":{},"body":{"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["selectedbrand",{"_index":190,"title":{},"body":{"components/BrandsComponent.html":{}}}],["selectedbrand()?.name",{"_index":228,"title":{},"body":{"components/BrandsComponent.html":{}}}],["selectedbrand()?.slug",{"_index":230,"title":{},"body":{"components/BrandsComponent.html":{}}}],["selectedcategory",{"_index":443,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["selectedcategory()?.name",{"_index":466,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["selectedcategory()?.slug",{"_index":468,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["sendloginform",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendloginform(data",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendloginform(data:object):observable",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendregisterform",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendregisterform(data",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendregisterform(data:object):observable",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["sent",{"_index":751,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["serveonce",{"_index":1359,"title":{},"body":{"index.html":{}}}],["server",{"_index":1315,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":1303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":1293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["session/${cartid}?url=http://localhost:4200",{"_index":1087,"title":{},"body":{"injectables/OrdersService.html":{}}}],["setheaders",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settimeout",{"_index":364,"title":{},"body":{"components/CartComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["shadow",{"_index":1044,"title":{},"body":{"components/NavbarComponent.html":{}}}],["shared/interfaces/icart",{"_index":302,"title":{},"body":{"components/CartComponent.html":{}}}],["shared/interfaces/icategory",{"_index":458,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["shared/interfaces/iproduct",{"_index":637,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["shared/pipes/search.pipe",{"_index":1103,"title":{},"body":{"components/ProductsComponent.html":{}}}],["shared/pipes/termtext.pipe",{"_index":1104,"title":{},"body":{"components/ProductsComponent.html":{}}}],["shippingaddress",{"_index":1088,"title":{},"body":{"injectables/OrdersService.html":{}}}],["showcancelbutton",{"_index":335,"title":{},"body":{"components/CartComponent.html":{}}}],["showpassword",{"_index":703,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["signal",{"_index":200,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["signal(0",{"_index":420,"title":{},"body":{"injectables/CartService.html":{}}}],["signal(false",{"_index":206,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{}}}],["signal(null",{"_index":204,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{}}}],["simple",{"_index":1067,"title":{},"body":{"components/NavbarComponent.html":{}}}],["slug",{"_index":401,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}}}],["smoother",{"_index":1056,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sold",{"_index":483,"title":{},"body":{"interfaces/Category-1.html":{},"interfaces/IProduct.html":{},"interfaces/Subcategory-1.html":{}}}],["something",{"_index":358,"title":{},"body":{"components/CartComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{},"index.html":{}}}],["speed",{"_index":1391,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["src/.../app.config.server.ts",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errors.interceptor.ts",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.interceptor.ts",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../httploadfiles.ts",{"_index":1344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../loading.interceptor.ts",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logged.guard.ts",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":1292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":1294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/environment/environment.ts",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":1263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/logged.guard.ts",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/errors/errors.interceptor.ts",{"_index":1267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/headers/header.interceptor.ts",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/loading/loading.interceptor.ts",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/auth/auth.service.ts",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth/auth.service.ts:11",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:13",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:14",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:18",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:23",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:29",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:37",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:46",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:50",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:54",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/brands/brands.service.ts",{"_index":231,"title":{},"body":{"injectables/BrandsService.html":{},"coverage.html":{}}}],["src/app/core/services/brands/brands.service.ts:14",{"_index":234,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/brands/brands.service.ts:18",{"_index":237,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/brands/brands.service.ts:9",{"_index":233,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/cart/cart.service.ts",{"_index":403,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/app/core/services/cart/cart.service.ts:11",{"_index":423,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:12",{"_index":421,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:15",{"_index":412,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:29",{"_index":414,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:37",{"_index":416,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:44",{"_index":418,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:58",{"_index":413,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:9",{"_index":410,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/categories/categories.service.ts",{"_index":469,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/app/core/services/categories/categories.service.ts:13",{"_index":473,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/categories/categories.service.ts:16",{"_index":475,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/categories/categories.service.ts:8",{"_index":472,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts",{"_index":665,"title":{},"body":{"injectables/FlowbiteService.html":{},"coverage.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts:11",{"_index":671,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts:7",{"_index":668,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["src/app/core/services/mytranslate/my",{"_index":931,"title":{},"body":{"injectables/MyTranslateService.html":{},"coverage.html":{}}}],["src/app/core/services/orders/orders.service.ts",{"_index":1079,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/app/core/services/orders/orders.service.ts:11",{"_index":1084,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:13",{"_index":1083,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:9",{"_index":1080,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/products/products.service.ts",{"_index":1112,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/app/core/services/products/products.service.ts:13",{"_index":1116,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/products/products.service.ts:17",{"_index":1118,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/products/products.service.ts:9",{"_index":1115,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/utilities/httploadfiles.ts",{"_index":1278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/ibrand.ts",{"_index":864,"title":{},"body":{"interfaces/IBrand.html":{},"coverage.html":{}}}],["src/app/layouts/auth",{"_index":102,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/blank",{"_index":176,"title":{},"body":{"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/footer/footer.component.ts",{"_index":680,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layouts/navbar/navbar.component.ts",{"_index":962,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:18",{"_index":983,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:19",{"_index":992,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:20",{"_index":987,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:22",{"_index":986,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:24",{"_index":977,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:25",{"_index":989,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:26",{"_index":990,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:28",{"_index":979,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:37",{"_index":978,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:41",{"_index":982,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:45",{"_index":981,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/pages/brands/brands.component.ts",{"_index":178,"title":{},"body":{"components/BrandsComponent.html":{},"coverage.html":{}}}],["src/app/pages/brands/brands.component.ts:16",{"_index":203,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:18",{"_index":207,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:19",{"_index":201,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:20",{"_index":205,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:24",{"_index":194,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:36",{"_index":195,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:41",{"_index":198,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/cart/cart.component.ts",{"_index":244,"title":{},"body":{"components/CartComponent.html":{},"coverage.html":{}}}],["src/app/pages/cart/cart.component.ts:103",{"_index":262,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:167",{"_index":265,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:17",{"_index":287,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:18",{"_index":291,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:19",{"_index":294,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:21",{"_index":285,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:31",{"_index":276,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:32",{"_index":290,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:33",{"_index":292,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:35",{"_index":289,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:36",{"_index":288,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:38",{"_index":267,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:42",{"_index":263,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:58",{"_index":269,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:78",{"_index":275,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/categories/categories.component.ts",{"_index":436,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/pages/categories/categories.component.ts:16",{"_index":453,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:18",{"_index":451,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:19",{"_index":454,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:20",{"_index":456,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:21",{"_index":455,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:23",{"_index":445,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:34",{"_index":446,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:39",{"_index":449,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/check",{"_index":487,"title":{},"body":{"components/CheckOutComponent.html":{},"coverage.html":{}}}],["src/app/pages/details/details.component.ts",{"_index":599,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{}}}],["src/app/pages/details/details.component.ts:21",{"_index":612,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:22",{"_index":631,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:23",{"_index":613,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:24",{"_index":632,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:25",{"_index":629,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:27",{"_index":611,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:47",{"_index":628,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:66",{"_index":610,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/forget",{"_index":693,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":814,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:20",{"_index":843,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:21",{"_index":829,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:22",{"_index":827,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:23",{"_index":844,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:25",{"_index":842,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:26",{"_index":828,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:28",{"_index":841,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:52",{"_index":836,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:71",{"_index":826,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:76",{"_index":825,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:85",{"_index":824,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:94",{"_index":823,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/login/login.component.ts",{"_index":866,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/login/login.component.ts:15",{"_index":877,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:16",{"_index":876,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:17",{"_index":878,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:18",{"_index":881,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:20",{"_index":875,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:21",{"_index":880,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:25",{"_index":879,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:39",{"_index":892,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:58",{"_index":873,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:93",{"_index":874,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/notfound/notfound.component.ts",{"_index":1075,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/pages/products/products.component.ts",{"_index":1090,"title":{},"body":{"components/ProductsComponent.html":{},"coverage.html":{}}}],["src/app/pages/products/products.component.ts:28",{"_index":1100,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:29",{"_index":1098,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:30",{"_index":1102,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:32",{"_index":1099,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:33",{"_index":1101,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:37",{"_index":1096,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:48",{"_index":1097,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:52",{"_index":1095,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/register/register.component.ts",{"_index":1123,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/pages/register/register.component.ts:125",{"_index":1134,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:15",{"_index":1137,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:16",{"_index":1136,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:17",{"_index":1138,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:18",{"_index":1151,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:19",{"_index":1135,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:20",{"_index":1150,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:33",{"_index":1149,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:60",{"_index":1160,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:89",{"_index":1130,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:95",{"_index":1133,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/shared/interfaces/icart.ts",{"_index":393,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/icategory.ts",{"_index":865,"title":{},"body":{"interfaces/ICategory.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/iproduct.ts",{"_index":481,"title":{},"body":{"interfaces/Category-1.html":{},"interfaces/IProduct.html":{},"interfaces/Subcategory-1.html":{},"coverage.html":{}}}],["src/app/shared/pipes/search.pipe.ts",{"_index":1240,"title":{},"body":{"pipes/SearchPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/search.pipe.ts:8",{"_index":1244,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["src/app/shared/pipes/termtext.pipe.ts",{"_index":1250,"title":{},"body":{"pipes/TermtextPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/termtext.pipe.ts:8",{"_index":1253,"title":{},"body":{"pipes/TermtextPipe.html":{}}}],["src/main.server.ts",{"_index":1296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":1298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":438,"title":{},"body":{"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/NavbarComponent.html":{},"pipes/SearchPipe.html":{}}}],["start",{"_index":887,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["starts",{"_index":1142,"title":{},"body":{"components/RegisterComponent.html":{}}}],["state",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":704,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["step==1",{"_index":772,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["step==2",{"_index":782,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["step==3",{"_index":792,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["store",{"_index":1384,"title":{},"body":{"index.html":{}}}],["string",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{}}}],["style",{"_index":1011,"title":{},"body":{"components/NavbarComponent.html":{}}}],["styles",{"_index":961,"title":{},"body":{"components/NavbarComponent.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["styleurls",{"_index":967,"title":{},"body":{"components/NavbarComponent.html":{}}}],["subcategory",{"_index":400,"title":{"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}},"body":{"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"coverage.html":{}}}],["submitform",{"_index":872,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform():void",{"_index":1168,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitverifycode",{"_index":706,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["submitverifyemail",{"_index":707,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["submitverifypassword",{"_index":708,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["subtractingstates",{"_index":255,"title":{},"body":{"components/CartComponent.html":{}}}],["subtractingstates()[item.product._id",{"_index":388,"title":{},"body":{"components/CartComponent.html":{}}}],["success",{"_index":318,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["successfully",{"_index":321,"title":{},"body":{"components/CartComponent.html":{},"components/ForgetPasswordComponent.html":{}}}],["such",{"_index":1379,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1410,"title":{},"body":{"index.html":{}}}],["swal",{"_index":298,"title":{},"body":{"components/CartComponent.html":{}}}],["swal.fire",{"_index":330,"title":{},"body":{"components/CartComponent.html":{}}}],["sweetalert2",{"_index":299,"title":{},"body":{"components/CartComponent.html":{},"dependencies.html":{}}}],["sweetalert2/ngx",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["switchlanguage",{"_index":973,"title":{},"body":{"components/NavbarComponent.html":{}}}],["switchlanguage(language",{"_index":980,"title":{},"body":{"components/NavbarComponent.html":{}}}],["table",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["termtext",{"_index":1110,"title":{},"body":{"components/ProductsComponent.html":{},"pipes/TermtextPipe.html":{}}}],["termtextpipe",{"_index":1091,"title":{"pipes/TermtextPipe.html":{}},"body":{"components/ProductsComponent.html":{},"pipes/TermtextPipe.html":{},"coverage.html":{}}}],["test",{"_index":1396,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1404,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1401,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1393,"title":{},"body":{"index.html":{}}}],["text",{"_index":332,"title":{},"body":{"components/CartComponent.html":{},"components/NavbarComponent.html":{},"pipes/TermtextPipe.html":{}}}],["text.split",{"_index":1254,"title":{},"body":{"pipes/TermtextPipe.html":{}}}],["theme",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["then((result",{"_index":349,"title":{},"body":{"components/CartComponent.html":{}}}],["this.activatedroute.parammap.subscribe",{"_index":534,"title":{},"body":{"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{}}}],["this.addingstates()[id",{"_index":325,"title":{},"body":{"components/CartComponent.html":{}}}],["this.allbrands.set(res.data",{"_index":217,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.authservice.saveuserdata",{"_index":767,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.sendloginform(this.loginform.value).subscribe",{"_index":899,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.sendregisterform(this.registerform.value).subscribe",{"_index":1171,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.verifyemail(this.verifyemail.value).subscribe",{"_index":747,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.authservice.verifyresetcode(this.verifycode.value).subscribe",{"_index":758,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.authservice.verifyresetpassword(this.resetpassword.value).subscribe",{"_index":764,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.brandsservice.getallbrands().subscribe",{"_index":214,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.cartdetails().products",{"_index":309,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartdetails()?.products?.length",{"_index":362,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartdetails.set",{"_index":353,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartdetails.set(res.data",{"_index":308,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartid",{"_index":536,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["this.cartservice.addproducttocart(id).subscribe",{"_index":651,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.cartservice.cartnumber",{"_index":985,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.cartservice.cartnumber.set(0",{"_index":355,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartservice.cartnumber.set(res.numofcartitems",{"_index":316,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["this.cartservice.clearusercart().subscribe",{"_index":352,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartservice.getloggedusercart().subscribe",{"_index":304,"title":{},"body":{"components/CartComponent.html":{},"components/NavbarComponent.html":{}}}],["this.cartservice.removespecificcartitem(id).subscribe",{"_index":314,"title":{},"body":{"components/CartComponent.html":{}}}],["this.categories.set(res.data",{"_index":460,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.categoriesservice.getallcategories().subscribe",{"_index":459,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.changedirection",{"_index":951,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["this.checkout",{"_index":524,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["this.checkout.markallastouched",{"_index":562,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["this.checkout.valid",{"_index":540,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["this.checkout.value).subscribe",{"_index":543,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["this.currentlang",{"_index":999,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.errormsg",{"_index":745,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.errormsg=null",{"_index":754,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.flowbiteservice.loadflowbite((flowbite",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["this.formbuilder.group",{"_index":525,"title":{},"body":{"components/CheckOutComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getallbrands",{"_index":218,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.getallcategoriesdata",{"_index":461,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.getcartid",{"_index":522,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["this.getcategoriesdata",{"_index":847,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getloggedusercart",{"_index":303,"title":{},"body":{"components/CartComponent.html":{}}}],["this.getproductsdata",{"_index":846,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.httpclient.delete(`${environment.basurl}/api/v1/cart",{"_index":435,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.delete(`${environment.basurl}/api/v1/cart/${id",{"_index":432,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.get('https://ecommerce.routemisr.com/api/v1/categories",{"_index":477,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.httpclient.get(`${environment.basurl}/api/v1/brands",{"_index":240,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.httpclient.get(`${environment.basurl}/api/v1/brands/${id",{"_index":243,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.httpclient.get(`${environment.basurl}/api/v1/cart",{"_index":431,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.get(`${environment.basurl}/api/v1/products",{"_index":1120,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.httpclient.get(`${environment.basurl}/api/v1/products/${id",{"_index":1122,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.httpclient.get(`https://ecommerce.routemisr.com/api/v1/categories/${id",{"_index":479,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.httpclient.post",{"_index":425,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.post(`${environment.basurl}/api/v1/auth/forgotpasswords`,data",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.basurl}/api/v1/auth/signin`,data",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.basurl}/api/v1/auth/signup`,data",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.basurl}/api/v1/auth/verifyresetcode`,data",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.basurl}/api/v1/orders/checkout",{"_index":1086,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.httpclient.put",{"_index":433,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.put(`${environment.basurl}/api/v1/auth/resetpassword`,data",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initform",{"_index":523,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["this.ischeckingout.set(false",{"_index":366,"title":{},"body":{"components/CartComponent.html":{}}}],["this.ischeckingout.set(true",{"_index":363,"title":{},"body":{"components/CartComponent.html":{}}}],["this.isclearing.set(false",{"_index":354,"title":{},"body":{"components/CartComponent.html":{}}}],["this.isclearing.set(true",{"_index":351,"title":{},"body":{"components/CartComponent.html":{}}}],["this.isdropdownopen",{"_index":998,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.isloading",{"_index":541,"title":{},"body":{"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.isloading=false",{"_index":1172,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.isloading=true",{"_index":1170,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.issuccess",{"_index":746,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.issuccess=res.message",{"_index":1173,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.loginform.markallastouched",{"_index":902,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":898,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mytranslateservice.changelanguagetranslate(language",{"_index":1000,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ordersservice.confirmorder(this.cartid",{"_index":542,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["this.passwordmatch",{"_index":1148,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.productdetails",{"_index":648,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.products.set(res.data",{"_index":849,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.productsservice.getallproducts().subscribe",{"_index":848,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.productsservice.getspecificproducts(productid).subscribe",{"_index":647,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.registerform.markallastouched",{"_index":1175,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.valid",{"_index":1169,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.removingstates()[id",{"_index":313,"title":{},"body":{"components/CartComponent.html":{}}}],["this.renderer2.setattribute(document.documentelement,'dir','ltr",{"_index":954,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["this.renderer2.setattribute(document.documentelement,'dir','rtl",{"_index":957,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["this.renderer2.setattribute(document.documentelement,'lang','ar",{"_index":958,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["this.renderer2.setattribute(document.documentelement,'lang','en",{"_index":955,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["this.resetpassword.invalid",{"_index":762,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.resetpassword.markallastouched",{"_index":763,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.router.navigate(['/checkout",{"_index":365,"title":{},"body":{"components/CartComponent.html":{}}}],["this.router.navigate(['/home",{"_index":768,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["this.selectedbrand",{"_index":219,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.selectedbrand.set(brand",{"_index":222,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.selectedcategory",{"_index":462,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.selectedcategory.set(cat",{"_index":463,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.showpassword",{"_index":770,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.step",{"_index":752,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.subtractingstates()[id",{"_index":326,"title":{},"body":{"components/CartComponent.html":{}}}],["this.toastrservice.error(res.message",{"_index":654,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["this.toastrservice.success(res.message",{"_index":653,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["this.toastservice.error('failed",{"_index":322,"title":{},"body":{"components/CartComponent.html":{}}}],["this.toastservice.error(res.message",{"_index":1106,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.toastservice.success('item",{"_index":319,"title":{},"body":{"components/CartComponent.html":{}}}],["this.toastservice.success('quantity",{"_index":327,"title":{},"body":{"components/CartComponent.html":{}}}],["this.toastservice.success(res.message",{"_index":1105,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.translateservice.setdefaultlang('en",{"_index":946,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["this.translateservice.use(language",{"_index":960,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["this.translateservice.use(savedlang",{"_index":950,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["this.userdata",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userdata=null",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usertoken",{"_index":430,"title":{},"body":{"injectables/CartService.html":{}}}],["this.verifycode.invalid",{"_index":756,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.verifycode.markallastouched",{"_index":757,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.verifyemail.invalid",{"_index":743,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.verifyemail.markallastouched",{"_index":744,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.visible",{"_index":220,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{}}}],["this.visible.set(true",{"_index":223,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{}}}],["throwerror",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"miscellaneous/variables.html":{}}}],["titlecase",{"_index":658,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["titlecasepipe",{"_index":601,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["toastr",{"_index":297,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":638,"title":{},"body":{"components/DetailsComponent.html":{}}}],["toastrservice",{"_index":296,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["toastrservice.error(err.error.message",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toastrservice=inject(toastrservice",{"_index":644,"title":{},"body":{"components/DetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["toastservice",{"_index":256,"title":{},"body":{"components/CartComponent.html":{},"components/ProductsComponent.html":{}}}],["toggledropdown",{"_index":974,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglepassword",{"_index":709,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["token",{"_index":429,"title":{},"body":{"injectables/CartService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":1372,"title":{},"body":{"index.html":{}}}],["top",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalcartprice",{"_index":280,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/ICart.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{}}}],["touchdrag",{"_index":617,"title":{},"body":{"components/DetailsComponent.html":{},"components/HomeComponent.html":{}}}],["track",{"_index":226,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["transform",{"_index":1051,"title":{},"body":{"components/NavbarComponent.html":{},"pipes/SearchPipe.html":{},"pipes/TermtextPipe.html":{}}}],["transform(groups",{"_index":1242,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["transform(text",{"_index":1251,"title":{},"body":{"pipes/TermtextPipe.html":{}}}],["transition",{"_index":1028,"title":{},"body":{"components/NavbarComponent.html":{}}}],["translate",{"_index":225,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["translate.service",{"_index":995,"title":{},"body":{"components/NavbarComponent.html":{}}}],["translate.service.ts",{"_index":932,"title":{},"body":{"injectables/MyTranslateService.html":{},"coverage.html":{}}}],["translate.service.ts:15",{"_index":938,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["translate.service.ts:40",{"_index":939,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["translate.service.ts:53",{"_index":941,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["translate/core",{"_index":208,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["translateloader",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatemodule",{"_index":184,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["translateservice",{"_index":937,"title":{},"body":{"injectables/MyTranslateService.html":{}}}],["translatey",{"_index":1052,"title":{},"body":{"components/NavbarComponent.html":{}}}],["translatey(0",{"_index":1073,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["true",{"_index":221,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":557,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["tslib",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"pipes/TermtextPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1392,"title":{},"body":{"index.html":{}}}],["update",{"_index":329,"title":{},"body":{"components/CartComponent.html":{}}}],["updatecartproductquantity",{"_index":409,"title":{},"body":{"injectables/CartService.html":{}}}],["updatecartproductquantity(id",{"_index":417,"title":{},"body":{"injectables/CartService.html":{}}}],["updated",{"_index":328,"title":{},"body":{"components/CartComponent.html":{}}}],["updatedat",{"_index":283,"title":{},"body":{"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/ICategory.html":{},"interfaces/IProduct.html":{},"interfaces/Product.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{}}}],["updatequantity",{"_index":261,"title":{},"body":{"components/CartComponent.html":{}}}],["updatequantity(id",{"_index":270,"title":{},"body":{"components/CartComponent.html":{}}}],["url",{"_index":552,"title":{},"body":{"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{}}}],["use",{"_index":1398,"title":{},"body":{"index.html":{}}}],["used",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdata",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata:any",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["usertoken",{"_index":405,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{}}}],["using",{"_index":1351,"title":{},"body":{"index.html":{}}}],["valid",{"_index":884,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validationmessages",{"_index":871,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators",{"_index":518,"title":{},"body":{"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":733,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1140,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(10",{"_index":528,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["validators.minlength(2",{"_index":533,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["validators.minlength(3",{"_index":1139,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern(/^01[0125][0",{"_index":530,"title":{},"body":{"components/CheckOutComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern(/^[0",{"_index":729,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["validators.pattern(/^[a",{"_index":722,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":527,"title":{},"body":{"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["variable",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1427,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":750,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verified",{"_index":760,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verify",{"_index":738,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifycode",{"_index":705,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifycode.get('resetcode')?.errors?.['pattern",{"_index":788,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifycode.get('resetcode')?.errors?.['required",{"_index":786,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifycode.get('resetcode')?.invalid",{"_index":784,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifycode.get('resetcode')?.touched",{"_index":785,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifycode.get(\\'resetcode\\')?.errors?.[\\'pattern",{"_index":809,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifycode.get(\\'resetcode\\')?.errors?.[\\'required",{"_index":808,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifycode.get(\\'resetcode\\')?.invalid",{"_index":806,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifycode.get(\\'resetcode\\')?.touched",{"_index":807,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifyemail",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgetPasswordComponent.html":{}}}],["verifyemail(data",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyemail(data:any):observable",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyemail.get('email')?.errors?.['email",{"_index":778,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifyemail.get('email')?.errors?.['required",{"_index":776,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifyemail.get('email')?.invalid",{"_index":774,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifyemail.get('email')?.touched",{"_index":775,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifyemail.get(\\'email\\')?.errors?.[\\'email",{"_index":805,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifyemail.get(\\'email\\')?.errors?.[\\'required",{"_index":804,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifyemail.get(\\'email\\')?.invalid",{"_index":802,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifyemail.get(\\'email\\')?.touched",{"_index":803,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["verifyresetcode",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyresetcode(data",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyresetcode(data:any):observable",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyresetpassword",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyresetpassword(data",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyresetpassword(data:any):observable",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1354,"title":{},"body":{"index.html":{},"properties.html":{}}}],["visible",{"_index":191,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{}}}],["visit",{"_index":1419,"title":{},"body":{"index.html":{}}}],["void",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckOutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MyTranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["warning",{"_index":334,"title":{},"body":{"components/CartComponent.html":{}}}],["went",{"_index":359,"title":{},"body":{"components/CartComponent.html":{},"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["whenever",{"_index":1366,"title":{},"body":{"index.html":{}}}],["white",{"_index":1042,"title":{},"body":{"components/NavbarComponent.html":{}}}],["window.location.href",{"_index":548,"title":{},"body":{"components/CheckOutComponent.html":{}}}],["withhashlocation",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinmemoryscrolling",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([headerinterceptor,errorsinterceptor,loadinginterceptor",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withviewtransitions",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":1243,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["word.trim",{"_index":1247,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["writablesignal",{"_index":419,"title":{},"body":{"injectables/CartService.html":{}}}],["wrong",{"_index":360,"title":{},"body":{"components/CartComponent.html":{},"components/CheckOutComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["yes",{"_index":337,"title":{},"body":{"components/CartComponent.html":{}}}],["z]\\w{7",{"_index":723,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                FooterComponent\n                            NgxSpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(flowbiteService: FlowbiteService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowbiteService\n                                                  \n                                                        \n                                                                        FlowbiteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'E-Commerce'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { initFlowbite } from 'flowbite';\nimport { NgxSpinnerComponent } from 'ngx-spinner';\nimport { FlowbiteService } from './Core/Services/Flowbite/flowbite.service';\nimport { FooterComponent } from \"./Layouts/footer/footer.component\";\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, FooterComponent,NgxSpinnerComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'E-Commerce';\n constructor(private flowbiteService: FlowbiteService) {}\n\n  ngOnInit(): void {\n    this.flowbiteService.loadFlowbite((flowbite) => {\n      initFlowbite();\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n      \n        \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n        \n        \n          \n          \n          \n          \n          \n          \n          \n          \n          \n        \n      \n    \n  \"\n>\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                \">'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Layouts/auth-layout/auth-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FooterComponent } from \"../footer/footer.component\";\nimport { NavbarComponent } from \"../navbar/navbar.component\";\n\n@Component({\n  selector: 'app-auth-layout',\n  imports: [RouterOutlet, NavbarComponent, FooterComponent],\n  templateUrl: './auth-layout.component.html',\n  styleUrl: './auth-layout.component.scss'\n})\nexport class AuthLayoutComponent {\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/Auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                router\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                saveUserData\n                            \n                            \n                                sendLoginForm\n                            \n                            \n                                sendRegisterForm\n                            \n                            \n                                verifyEmail\n                            \n                            \n                                verifyResetCode\n                            \n                            \n                                verifyResetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/Auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Auth/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserData\n                        \n                    \n                \n            \n            \n                \nsaveUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Auth/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendLoginForm\n                        \n                    \n                \n            \n            \n                \nsendLoginForm(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Auth/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendRegisterForm\n                        \n                    \n                \n            \n            \n                \nsendRegisterForm(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Auth/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \nverifyEmail(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Auth/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyResetCode\n                        \n                    \n                \n            \n            \n                \nverifyResetCode(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Auth/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyResetPassword\n                        \n                    \n                \n            \n            \n                \nverifyResetPassword(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Auth/auth.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/Services/Auth/auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/Services/Auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../Environment/environment';\nimport { jwtDecode } from \"jwt-decode\";\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private httpClient:HttpClient) { }\n  private router=inject(Router)\n  userData:any;\n\n\n\n  sendRegisterForm(data:object):Observable{\n\n   return this.httpClient.post(`${environment.basUrl}/api/v1/auth/signup`,data)\n   \n  }\n  sendLoginForm(data:object):Observable{\n\n   return this.httpClient.post(`${environment.basUrl}/api/v1/auth/signin`,data)\n  }\n\n\n  saveUserData():void{\n    if (localStorage.getItem('userToken')!=null) {\n   this.userData=  jwtDecode(localStorage.getItem('userToken')!)\n      \n    }\n  }\n\n\n  logOut():void{\n\n    localStorage.removeItem('userToken');\n    this.userData=null\n\n    this.router.navigate(['/login'])\n\n  }\n\n  verifyEmail(data:any):Observable{\n\n    return this.httpClient.post(`${environment.basUrl}/api/v1/auth/forgotPasswords`,data )\n  }\n  verifyResetCode(data:any):Observable{\n\n    return this.httpClient.post(`${environment.basUrl}/api/v1/auth/verifyResetCode`,data )\n  }\n  verifyResetPassword(data:any):Observable{\n\n    return this.httpClient.put(`${environment.basUrl}/api/v1/auth/resetPassword`,data )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlankLayoutComponent.html":{"url":"components/BlankLayoutComponent.html","title":"component - BlankLayoutComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  BlankLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Layouts/blank-layout/blank-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blank-layout\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                                FooterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./blank-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./blank-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FooterComponent } from \"../footer/footer.component\";\nimport { NavbarComponent } from \"../navbar/navbar.component\";\n\n@Component({\n  selector: 'app-blank-layout',\n  imports: [RouterOutlet, NavbarComponent, FooterComponent],\n  templateUrl: './blank-layout.component.html',\n  styleUrl: './blank-layout.component.scss'\n})\nexport class BlankLayoutComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlankLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BrandsComponent.html":{"url":"components/BrandsComponent.html","title":"component - BrandsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  BrandsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/brands/brands.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-brands\n            \n\n\n            \n                imports\n                \n                            DialogModule\n                            ButtonModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./brands.component.html\n            \n\n\n\n            \n                styleUrl\n                ./brands.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allBrands\n                            \n                            \n                                    Private\n                                    Readonly\n                                brandsService\n                            \n                            \n                                selectedBrand\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBrands\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBrands\n                        \n                    \n                \n            \n            \n                \ngetAllBrands()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/brands/brands.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/brands/brands.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(brand: IBrand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/brands/brands.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                brand\n                                            \n                                                            IBrand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allBrands\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal ([])\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/brands/brands.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        brandsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BrandsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/brands/brands.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedBrand\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/brands/brands.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/brands/brands.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit, signal } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { BrandsService } from '../../Core/Services/Brands/brands.service';\nimport { IBrand } from '../../ibrand';\n\n@Component({\n  selector: 'app-brands',\n  imports: [DialogModule, ButtonModule,TranslateModule],\n  templateUrl: './brands.component.html',\n  styleUrl: './brands.component.scss'\n})\nexport class BrandsComponent  implements OnInit {\n\n  private readonly brandsService=inject(BrandsService);\n\n  visible = signal(false)\n  allBrands =signal ([])\n  selectedBrand =signal(null)\n  \n\n\n  getAllBrands(){\n    this.brandsService.getAllBrands().subscribe({\n      next:(res)=>{\n        console.log(res.data);\n        this.allBrands.set(res.data);\n      }\n    })\n\n  }\n\n  \n\n  ngOnInit(): void {\n     this.getAllBrands();\n  }\n\n\n  openDialog(brand: IBrand) {\n      // this.selectedBrand = brand;\n      // this.visible = true;\n\n      this.selectedBrand.set(brand);\n      this.visible.set(true);\n    }\n}\n\n    \n\n    \n        @if (allBrands()) {\n\n  \n  \n    \n    \n  \n\n  \n  \n    \n      {{ 'BRANDS.TITLE' | translate }}\n    \n  \n\n  \n  \n    @for (brand of allBrands(); track $index) {\n      \n        \n\n        \n          \n        \n      \n    }\n  \n\n}\n\n\n\n  \n    \n    \n      \n        {{ 'BRANDS.MODAL_TITLE' | translate }}: {{ selectedBrand()?.name }}\n      \n      \n        {{ 'BRANDS.SLUG_LABEL' | translate }} {{ selectedBrand()?.slug }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (allBrands()) {                            {{ \\'BRANDS.TITLE\\' | translate }}              @for (brand of allBrands(); track $index) {                                                  }  }                        {{ \\'BRANDS.MODAL_TITLE\\' | translate }}: {{ selectedBrand()?.name }}                    {{ \\'BRANDS.SLUG_LABEL\\' | translate }} {{ selectedBrand()?.slug }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BrandsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrandsService.html":{"url":"injectables/BrandsService.html","title":"injectable - BrandsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  BrandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/Brands/brands.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBrands\n                            \n                            \n                                getSpecificBrand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/Brands/brands.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBrands\n                        \n                    \n                \n            \n            \n                \ngetAllBrands()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Brands/brands.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSpecificBrand\n                        \n                    \n                \n            \n            \n                \ngetSpecificBrand(id: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Brands/brands.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../Environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandsService {\n\n  constructor(private  httpClient: HttpClient) { }\n\n\n  getAllBrands():Observable{\n\n    return this.httpClient.get(`${environment.basUrl}/api/v1/brands`)\n  }\n   getSpecificBrand(id:string | null):Observable{\n    return this.httpClient.get(`${environment.basUrl}/api/v1/brands/${id} `)\n  }\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/cart/cart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart\n            \n\n\n            \n                imports\n                \n                            CurrencyPipe\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addingStates\n                            \n                            \n                                cartDetails\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                isCheckingOut\n                            \n                            \n                                isClearing\n                            \n                            \n                                removingStates\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                subtractingStates\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearCart\n                            \n                            \n                                getLoggedUserCart\n                            \n                            \n                                goToCheckout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeItem\n                            \n                            \n                                updateQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearCart\n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/cart/cart.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedUserCart\n                        \n                    \n                \n            \n            \n                \ngetLoggedUserCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/cart/cart.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToCheckout\n                        \n                    \n                \n            \n            \n                \ngoToCheckout(cartId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/cart/cart.component.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cartId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/cart/cart.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/cart/cart.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuantity\n                        \n                    \n                \n            \n            \n                \nupdateQuantity(id: string, quantity: number, type: \"add\" | \"minus\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/cart/cart.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"add\" | \"minus\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addingStates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal({})\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/cart/cart.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal({\n    _id: '',\n    cartOwner: '',\n    products: [],\n    totalCartPrice: 0,\n    createdAt: '',\n    updatedAt: '',\n    __v: 0,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/cart/cart.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/cart/cart.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCheckingOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/cart/cart.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isClearing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/cart/cart.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removingStates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal({})\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/cart/cart.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/cart/cart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subtractingStates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal({})\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/cart/cart.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/cart/cart.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CurrencyPipe } from '@angular/common';\nimport { Component, inject, OnInit, signal } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { CartService } from '../../Core/Services/Cart/cart.service';\nimport { ICart } from '../../Shared/Interfaces/icart';\n\n@Component({\n  selector: 'app-cart',\n  imports: [CurrencyPipe, TranslateModule],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss',\n})\nexport class CartComponent implements OnInit {\n  private readonly cartService = inject(CartService);\n  private readonly router = inject(Router);\n  private readonly toastService = inject(ToastrService);\n\n  cartDetails = signal({\n    _id: '',\n    cartOwner: '',\n    products: [],\n    totalCartPrice: 0,\n    createdAt: '',\n    updatedAt: '',\n    __v: 0,\n  });\n\n  addingStates = signal({});\n  removingStates = signal({});\n  subtractingStates = signal({});\n\n  isClearing = signal(false);\n  isCheckingOut = signal(false);\n\n  ngOnInit(): void {\n    this.getLoggedUserCart();\n  }\n\n  getLoggedUserCart() {\n    this.cartService.getLoggedUserCart().subscribe({\n      next: (res) => {\n        if (res?.data?.products) {\n          this.cartDetails.set(res.data);\n        } else {\n          this.cartDetails().products = [];\n        }\n      },\n      error: (err) => {\n        console.log(err);\n        this.cartDetails().products = [];\n      },\n    });\n  }\n\n  removeItem(id: string) {\n    this.removingStates()[id] = true;\n    this.cartService.removeSpecificCartItem(id).subscribe({\n      next: (res) => {\n        this.cartDetails.set(res.data);\n        this.removingStates()[id] = false;\n        this.cartService.cartNumber.set(res.numOfCartItems);\n\n        if (res.status === 'success') {\n          this.toastService.success('Item removed successfully');\n        } else {\n          this.toastService.error('Failed to remove item');\n        }\n      },\n      error: () => {\n        this.removingStates()[id] = false;\n      },\n    });\n  }\n\n  updateQuantity(id: string, quantity: number, type: 'add' | 'minus') {\n    if (quantity  {\n        this.cartDetails.set(res.data);\n        this.addingStates()[id] = false;\n        this.subtractingStates()[id] = false;\n\n        if (res.status === 'success') {\n          this.toastService.success('Quantity updated successfully');\n        } else {\n          this.toastService.error('Failed to update quantity');\n        }\n      },\n      error: () => {\n        this.addingStates()[id] = false;\n        this.subtractingStates()[id] = false;\n      },\n    });\n  }\n\n  clearCart() {\n    Swal.fire({\n      title: 'Clear your cart?',\n      text: 'This will remove all products from your cart.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, clear it',\n      cancelButtonText: 'Cancel',\n      customClass: {\n        popup: 'modern-alert',\n        confirmButton: 'modern-confirm',\n        cancelButton: 'modern-cancel',\n        title: 'modern-title',\n        htmlContainer: 'modern-text',\n      },\n      reverseButtons: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.isClearing.set(true);\n        this.cartService.clearUserCart().subscribe({\n          next: () => {\n            this.cartDetails.set({\n              _id: '',\n              cartOwner: '',\n              products: [],\n              totalCartPrice: 0,\n              createdAt: '',\n              updatedAt: '',\n              __v: 0,\n            });\n            this.isClearing.set(false);\n            this.cartService.cartNumber.set(0);\n\n            Swal.fire({\n              title: 'Cart Cleared!',\n              text: 'All items have been removed successfully.',\n              icon: 'success',\n              customClass: {\n                popup: 'modern-alert',\n                confirmButton: 'modern-confirm',\n                title: 'modern-title',\n                htmlContainer: 'modern-text',\n              },\n            });\n          },\n          error: () => {\n            this.isClearing.set(false);\n            Swal.fire({\n              title: 'Error',\n              text: 'Something went wrong while clearing your cart.',\n              icon: 'error',\n              customClass: {\n                popup: 'modern-alert',\n                confirmButton: 'modern-confirm',\n                title: 'modern-title',\n                htmlContainer: 'modern-text',\n              },\n            });\n          },\n        });\n      }\n    });\n  }\n\n  goToCheckout(cartId: string) {\n    if (!this.cartDetails()?.products?.length) return;\n\n    this.isCheckingOut.set(true);\n    setTimeout(() => {\n      this.router.navigate(['/checkout', cartId]);\n      this.isCheckingOut.set(false);\n    }, 1000);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          {{ 'CART.TITLE' | translate }}\n        \n        \n          {{ 'CART.TOTAL_PRICE' | translate }} :\n          \n            {{ cartDetails().totalCartPrice | currency : 'GBP' }}\n          \n        \n      \n\n      \n      \n        \n        \n          @if (isClearing()) {\n            \n            {{ 'CART.CLEARING' | translate }}\n          } @else {\n            \n            {{ 'CART.CLEAR_CART' | translate }}\n          }\n        \n\n        \n        \n          @if (isCheckingOut()) {\n            \n            {{ 'CART.REDIRECTING' | translate }}\n          } @else {\n            \n            {{ 'CART.CHECKOUT' | translate }}\n          }\n        \n      \n    \n\n    \n    @if (cartDetails().products.length > 0) { \n      @for (item of cartDetails().products; track item.product._id) {\n        \n          \n          \n            \n            \n              \n                {{ item.product.title }}\n              \n              \n                {{ 'CART.PRICE' | translate }}: {{ item.price | currency : 'GBP' }}\n              \n\n              \n              \n                @if (removingStates()[item.product._id]) {\n                  \n                  \n                    {{ 'CART.REMOVING' | translate }}\n                  \n                } @else {\n                  \n                  \n                    {{ 'CART.REMOVE' | translate }}\n                  \n                }\n              \n            \n          \n\n          \n          \n            \n            \n              @if (addingStates()[item.product._id]) {\n                \n              } @else { + }\n            \n\n            \n              {{ item.count }}\n            \n\n            \n            \n              @if (subtractingStates()[item.product._id]) {\n                \n              } @else { - }\n            \n          \n        \n      }\n    } @else {\n      \n      \n        \n        \n          {{ 'CART.EMPTY' | translate }}\n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'CART.TITLE\\' | translate }}                          {{ \\'CART.TOTAL_PRICE\\' | translate }} :                      {{ cartDetails().totalCartPrice | currency : \\'GBP\\' }}                                                              @if (isClearing()) {                        {{ \\'CART.CLEARING\\' | translate }}          } @else {                        {{ \\'CART.CLEAR_CART\\' | translate }}          }                                  @if (isCheckingOut()) {                        {{ \\'CART.REDIRECTING\\' | translate }}          } @else {                        {{ \\'CART.CHECKOUT\\' | translate }}          }                          @if (cartDetails().products.length > 0) {       @for (item of cartDetails().products; track item.product._id) {                                                                                  {{ item.product.title }}                                            {{ \\'CART.PRICE\\' | translate }}: {{ item.price | currency : \\'GBP\\' }}                                                          @if (removingStates()[item.product._id]) {                                                        {{ \\'CART.REMOVING\\' | translate }}                                  } @else {                                                        {{ \\'CART.REMOVE\\' | translate }}                                  }                                                                                              @if (addingStates()[item.product._id]) {                              } @else { + }                                      {{ item.count }}                                                  @if (subtractingStates()[item.product._id]) {                              } @else { - }                                    }    } @else {                                      {{ \\'CART.EMPTY\\' | translate }}                  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem.html":{"url":"interfaces/CartItem.html","title":"interface - CartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Shared/Interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         Product\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string;\n  cartOwner: string;\n  products: CartItem[];\n  totalCartPrice: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface CartItem {\n  _id: string;\n  product: Product;\n  count: number;\n  price: number;\n}\n\nexport interface Product {\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  subcategory: Subcategory[];\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string; // هنا ممكن يكون اسم الـ category أو الـ category _id\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/Cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartNumber\n                            \n                            \n                                userToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToCart\n                            \n                            \n                                clearUserCart\n                            \n                            \n                                getLoggedUserCart\n                            \n                            \n                                removeSpecificCartItem\n                            \n                            \n                                updateCartProductQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/Cart/cart.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProductToCart\n                        \n                    \n                \n            \n            \n                \naddProductToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Cart/cart.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearUserCart\n                        \n                    \n                \n            \n            \n                \nclearUserCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Cart/cart.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedUserCart\n                        \n                    \n                \n            \n            \n                \ngetLoggedUserCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Cart/cart.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSpecificCartItem\n                        \n                    \n                \n            \n            \n                \nremoveSpecificCartItem(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Cart/cart.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCartProductQuantity\n                        \n                    \n                \n            \n            \n                \nupdateCartProductQuantity(id: string, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Cart/cart.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/Services/Cart/cart.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : localStorage.getItem('userToken')\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/Services/Cart/cart.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, signal, WritableSignal } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from '../../Environment/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  constructor(private httpClient: HttpClient) {}\n  userToken: any = localStorage.getItem('userToken');\n  cartNumber: WritableSignal = signal(0)     \n\n\n  addProductToCart(id: string): Observable {\n    return this.httpClient.post(\n      `${environment.basUrl}/api/v1/cart`,\n      {\n        productId: id,\n      },\n      {\n        headers: {\n          token: this.userToken,\n        },\n      }\n    );\n  }\n\n  getLoggedUserCart(): Observable {\n    return this.httpClient.get(`${environment.basUrl}/api/v1/cart`, {\n      headers: {\n        token: this.userToken,\n      },\n    });\n  }\n\n  removeSpecificCartItem(id: string): Observable {\n    return this.httpClient.delete(`${environment.basUrl}/api/v1/cart/${id}`, {\n      headers: {\n        token: this.userToken,\n      },\n    });\n  }\n  updateCartProductQuantity(id: string, quantity: number): Observable {\n    return this.httpClient.put(\n      `${environment.basUrl}/api/v1/cart/${id}`,\n      {\n        'count': quantity,\n      },\n      {\n        headers: {\n          token: this.userToken,\n        },\n      }\n    );\n  }\n\n  clearUserCart(){\n    return this.httpClient.delete(`${environment.basUrl}/api/v1/cart`, {\n      headers: {\n        token: this.userToken,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/categories/categories.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DialogModule\n                            ButtonModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./categories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoriesService\n                            \n                            \n                                searchWord\n                            \n                            \n                                selectedCategory\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllCategoriesData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategoriesData\n                        \n                    \n                \n            \n            \n                \ngetAllCategoriesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/categories/categories.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/categories/categories.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(cat: ICategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/categories/categories.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            ICategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/categories/categories.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoriesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CategoriesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/categories/categories.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchWord\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/categories/categories.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/categories/categories.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/categories/categories.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit, signal } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { CategoriesService } from '../../Core/Services/Categories/categories.service';\nimport { ICategory } from '../../Shared/Interfaces/icategory';\n\n@Component({\n  selector: 'app-categories',\n  standalone: true,\n  imports: [DialogModule, ButtonModule, TranslateModule],\n  templateUrl: './categories.component.html',\n  styleUrl: './categories.component.scss',\n})\nexport class CategoriesComponent implements OnInit {\n  private readonly categoriesService = inject(CategoriesService);\n \n  categories = signal([]);\n  searchWord = signal('');\n  visible = signal(false);\n  selectedCategory = signal(null);\n\n  getAllCategoriesData() {\n    this.categoriesService.getAllCategories().subscribe({\n      next: (res) => {\n        this.categories.set(res.data);\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n  ngOnInit(): void {\n    this.getAllCategoriesData();\n  }\n\n  // 🟢 فتح المودال\n  openDialog(cat: ICategory) {\n    // this.selectedCategory = cat;\n    // this.visible = true;\n\n    this.selectedCategory.set(cat);\n    this.visible.set(true)\n\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n  \n\n  \n  \n    \n      {{ 'CATEGORIES.TITLE' | translate }}\n    \n  \n\n  \n  \n    @for (cat of categories(); track $index) {\n      \n        \n\n        \n          \n        \n\n        \n          \n            {{ cat.name }}\n          \n          \n        \n      \n    }\n  \n\n\n\n\n  \n    \n    \n      {{ selectedCategory()?.name }}\n      \n        {{ 'CATEGORIES.SLUG' | translate }}: {{ selectedCategory()?.slug }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ \\'CATEGORIES.TITLE\\' | translate }}              @for (cat of categories(); track $index) {                                                                      {{ cat.name }}                                      }                  {{ selectedCategory()?.name }}              {{ \\'CATEGORIES.SLUG\\' | translate }}: {{ selectedCategory()?.slug }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/Categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllCategories\n                            \n                            \n                                getSpecificCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/Categories/categories.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Categories/categories.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSpecificCategory\n                        \n                    \n                \n            \n            \n                \ngetSpecificCategory(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Categories/categories.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  constructor(private httpClient:HttpClient) { }\n\n\n  getAllCategories():Observable{\n    return this.httpClient.get('https://ecommerce.routemisr.com/api/v1/categories')\n  }\n  getSpecificCategory(id:string):Observable{\n    return this.httpClient.get(`https://ecommerce.routemisr.com/api/v1/categories/${id}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Shared/Interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string;\n  cartOwner: string;\n  products: CartItem[];\n  totalCartPrice: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface CartItem {\n  _id: string;\n  product: Product;\n  count: number;\n  price: number;\n}\n\nexport interface Product {\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  subcategory: Subcategory[];\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string; // هنا ممكن يكون اسم الـ category أو الـ category _id\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category-1.html":{"url":"interfaces/Category-1.html","title":"interface - Category-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Shared/Interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProduct {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  id: string;\n}\n\ninterface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\ninterface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckOutComponent.html":{"url":"components/CheckOutComponent.html","title":"component - CheckOutComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  CheckOutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/check-out/check-out.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-check-out\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./check-out.component.html\n            \n\n\n\n            \n                styleUrl\n                ./check-out.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activatedRoute\n                            \n                            \n                                cartId\n                            \n                            \n                                checkOut\n                            \n                            \n                                    Private\n                                formBuilder\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Private\n                                ordersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmOrder\n                            \n                            \n                                getCartId\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/Pages/check-out/check-out.component.ts:26\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmOrder\n                        \n                    \n                \n            \n            \n                \nconfirmOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/check-out/check-out.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartId\n                        \n                    \n                \n            \n            \n                \ngetCartId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/check-out/check-out.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/check-out/check-out.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/check-out/check-out.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/check-out/check-out.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/check-out/check-out.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/check-out/check-out.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/check-out/check-out.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/check-out/check-out.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ordersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrdersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/check-out/check-out.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { OrdersService } from '../../Core/Services/Orders/orders.service';\n\n@Component({\n  selector: 'app-check-out',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule,TranslateModule],\n  templateUrl: './check-out.component.html',\n  styleUrl: './check-out.component.scss',\n})\nexport class CheckOutComponent implements OnInit {\n  private formBuilder = inject(FormBuilder);\n  private activatedRoute = inject(ActivatedRoute);\n  private ordersService = inject(OrdersService);\n  isLoading: boolean = false;\n  cartId: string = '';\n  checkOut!: FormGroup;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.getCartId();\n    this.initForm();\n  }\n  initForm() {\n    this.checkOut = this.formBuilder.group({\n      details: ['', [Validators.required, Validators.minLength(10)]],\n      phone: [\n        '',\n        [Validators.required, Validators.pattern(/^01[0125][0-9]{8}$/)],\n      ],\n      city: ['', [Validators.required, Validators.minLength(2)]],\n    });\n  }\n\n  getCartId() {\n    return this.activatedRoute.paramMap.subscribe({\n      next: (p) => {\n        this.cartId = p.get('id')!;\n      },\n      error: (err) => {\n        console.error('Error fetching cart ID:', err);\n      },\n    });\n  }\nconfirmOrder() {\n  if (this.checkOut.valid) {\n    this.isLoading = true;\n\n    this.ordersService.confirmOrder(this.cartId, this.checkOut.value).subscribe({\n      next: (res) => {\n        console.log('✅ Order confirmed:', res);\n\n        if (res.session?.url) {\n          window.location.href = res.session.url;\n        } else {\n          // لو مفيش لينك (مش متوقع في الحالة دي)\n          console.error('❌ No payment URL returned from API');\n          alert('Something went wrong. Please try again.');\n          this.isLoading = false;\n        }\n      },\n      error: (err) => {\n        console.error('Error confirming order:', err);\n        alert('Failed to confirm order. Please try again later.');\n        this.isLoading = false;\n      }\n    });\n  } else {\n    this.checkOut.markAllAsTouched();\n  }\n}\n\n\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'checkout.title' | translate }}\n    \n\n    \n      \n      \n      \n        \n          {{ 'checkout.addressLabel' | translate }}\n        \n        \n\n        @if (checkOut.get('details')?.touched && checkOut.get('details')?.invalid) {\n          \n            \n              \n            \n            \n              \n                @if (checkOut.get('details')?.errors?.['required']) {\n                  {{ 'checkout.addressRequired' | translate }}\n                }\n                @if (checkOut.get('details')?.errors?.['minlength']) {\n                  {{ 'checkout.addressMinLength' | translate }}\n                }\n              \n            \n          \n        }\n      \n\n      \n      \n        \n          {{ 'checkout.phoneLabel' | translate }}\n        \n        \n\n        @if (checkOut.get('phone')?.touched && checkOut.get('phone')?.invalid) {\n          \n            \n              \n            \n            \n              \n                @if (checkOut.get('phone')?.errors?.['required']) {\n                  {{ 'checkout.phoneRequired' | translate }}\n                }\n                @if (checkOut.get('phone')?.errors?.['pattern']) {\n                  {{ 'checkout.phonePattern' | translate }}\n                }\n              \n            \n          \n        }\n      \n\n      \n      \n        \n          {{ 'checkout.cityLabel' | translate }}\n        \n        \n\n        @if (checkOut.get('city')?.touched && checkOut.get('city')?.invalid) {\n          \n            \n              \n            \n            \n              \n                @if (checkOut.get('city')?.errors?.['required']) {\n                  {{ 'checkout.cityRequired' | translate }}\n                }\n                @if (checkOut.get('city')?.errors?.['minlength']) {\n                  {{ 'checkout.cityMinLength' | translate }}\n                }\n              \n            \n          \n        }\n      \n\n      \n      \n        \n          @if (isLoading) {\n            \n            {{ 'checkout.processing' | translate }}\n          } @else {\n            \n            {{ 'checkout.confirmOrder' | translate }}\n          }\n        \n      \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'checkout.title\\' | translate }}                                            {{ \\'checkout.addressLabel\\' | translate }}                        @if (checkOut.get(\\'details\\')?.touched && checkOut.get(\\'details\\')?.invalid) {                                                                                          @if (checkOut.get(\\'details\\')?.errors?.[\\'required\\']) {                  {{ \\'checkout.addressRequired\\' | translate }}                }                @if (checkOut.get(\\'details\\')?.errors?.[\\'minlength\\']) {                  {{ \\'checkout.addressMinLength\\' | translate }}                }                                            }                                    {{ \\'checkout.phoneLabel\\' | translate }}                        @if (checkOut.get(\\'phone\\')?.touched && checkOut.get(\\'phone\\')?.invalid) {                                                                                          @if (checkOut.get(\\'phone\\')?.errors?.[\\'required\\']) {                  {{ \\'checkout.phoneRequired\\' | translate }}                }                @if (checkOut.get(\\'phone\\')?.errors?.[\\'pattern\\']) {                  {{ \\'checkout.phonePattern\\' | translate }}                }                                            }                                    {{ \\'checkout.cityLabel\\' | translate }}                        @if (checkOut.get(\\'city\\')?.touched && checkOut.get(\\'city\\')?.invalid) {                                                                                          @if (checkOut.get(\\'city\\')?.errors?.[\\'required\\']) {                  {{ \\'checkout.cityRequired\\' | translate }}                }                @if (checkOut.get(\\'city\\')?.errors?.[\\'minlength\\']) {                  {{ \\'checkout.cityMinLength\\' | translate }}                }                                            }                                    @if (isLoading) {                        {{ \\'checkout.processing\\' | translate }}          } @else {                        {{ \\'checkout.confirmOrder\\' | translate }}          }                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckOutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/details/details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n\n            \n                imports\n                \n                            CarouselModule\n                            TitleCasePipe\n                            LowerCasePipe\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activatedRoute\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                customDetailsSlider\n                            \n                            \n                                productDetails\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/details/details.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/details/details.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/details/details.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/details/details.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customDetailsSlider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n      loop: true,\n      mouseDrag: false,\n      touchDrag: false,\n      pullDrag: false,\n      dots: false,\n      navSpeed: 800,\n      autoplay:true,\n      autoplayTimeout:4000,\n      autoplayHoverPause:true,\n      items:1,\n      navText: [\n      '',\n      ''\n    ],\n      \n      nav: false\n    }\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/details/details.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IProduct | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/details/details.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/details/details.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/details/details.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { LowerCasePipe, TitleCasePipe } from '@angular/common';\nimport { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CarouselModule, OwlOptions } from 'ngx-owl-carousel-o';\nimport { ProductsService } from '../../Core/Services/Products/products.service';\nimport { IProduct } from '../../Shared/Interfaces/iproduct';\nimport { CartService } from '../../Core/Services/Cart/cart.service';\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\n\n\n\n@Component({\n  selector: 'app-details',\n  imports: [CarouselModule,TitleCasePipe,LowerCasePipe,TranslateModule],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss'\n})\nexport class DetailsComponent implements OnInit{\n\n  private readonly activatedRoute=inject(ActivatedRoute); // to get data(id) from url\n  private readonly productsService=inject(ProductsService)\n  private readonly cartService=inject(CartService)\n  private readonly toastrService=inject(ToastrService)\n  productDetails:IProduct|null =null;\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe({\n      next:(p)=>{\n          let productId = p.get('id');\n\n          this.productsService.getSpecificProducts(productId).subscribe({\n            next:(res)=>{\n                console.log(res.data);\n                this.productDetails =res.data;\n                \n            },\n            error:(err)=>{\n              console.log(err);\n              \n            }\n          })\n      }\n    })\n  }\n\n  customDetailsSlider: OwlOptions = {\n      loop: true,\n      mouseDrag: false,\n      touchDrag: false,\n      pullDrag: false,\n      dots: false,\n      navSpeed: 800,\n      autoplay:true,\n      autoplayTimeout:4000,\n      autoplayHoverPause:true,\n      items:1,\n      navText: [\n      '',\n      ''\n    ],\n      \n      nav: false\n    }\n  \naddToCart(id: string) {\n\n    this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        if (res.status === 'success') {\n          this.toastrService.success(res.message);\n          this.cartService.cartNumber.set(res.numOfCartItems)\n        } else {\n          this.toastrService.error(res.message);\n        }\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n\n}\n\n    \n\n    \n        @if (productDetails) {\n\n  \n    \n    \n      \n        {{ 'PRODUCT_DETAILS.TITLE' | translate }}\n      \n    \n\n    \n      \n      \n        \n          @for (item of productDetails.images; track $index) {\n            \n              \n            \n          }\n        \n      \n\n      \n      \n        \n        \n          {{ productDetails.title | titlecase }}\n        \n\n        \n        \n          {{ productDetails.description | lowercase }}\n        \n\n        \n        \n          \n            {{ productDetails.price }}\n            {{ 'PRODUCT_DETAILS.CURRENCY' | translate }}\n          \n\n          \n            \n              \n            \n            \n              {{ productDetails.ratingsAverage }}\n            \n          \n        \n\n        \n        \n          \n          {{ 'PRODUCT_DETAILS.ADD_TO_CART' | translate }}\n        \n      \n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (productDetails) {                        {{ \\'PRODUCT_DETAILS.TITLE\\' | translate }}                                            @for (item of productDetails.images; track $index) {                                                }                                                    {{ productDetails.title | titlecase }}                                  {{ productDetails.description | lowercase }}                                              {{ productDetails.price }}            {{ \\'PRODUCT_DETAILS.CURRENCY\\' | translate }}                                                                                    {{ productDetails.ratingsAverage }}                                                                  {{ \\'PRODUCT_DETAILS.ADD_TO_CART\\' | translate }}                    }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FlowbiteService.html":{"url":"injectables/FlowbiteService.html","title":"injectable - FlowbiteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  FlowbiteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/Flowbite/flowbite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadFlowbite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/Flowbite/flowbite.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFlowbite\n                        \n                    \n                \n            \n            \n                \nloadFlowbite(callback: (flowbite: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Flowbite/flowbite.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlowbiteService {\n\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {}\n\n  loadFlowbite(callback: (flowbite: any) => void) {\n    if (isPlatformBrowser(this.platformId)) {\n      import('flowbite').then(flowbite => {\n        callback(flowbite);\n      });\n    }}\n  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Layouts/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n            \n                imports\n                \n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-footer',\n  imports: [TranslateModule],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ 'FOOTER.GET_APP_TITLE' | translate }}\n    \n    \n      {{ 'FOOTER.GET_APP_DESC' | translate }}\n    \n\n    \n    \n      \n        \n      \n      \n        \n          {{ 'FOOTER.SHARE_APP_LINK' | translate }}\n        \n      \n    \n\n    \n\n    \n    \n      \n      \n        \n          {{ 'FOOTER.PAYMENT_PARTNERS' | translate }}\n        \n        \n        \n        \n        \n        \n      \n\n      \n      \n        \n          {{ 'FOOTER.GET_DELIVERIES' | translate }}\n        \n        \n        \n      \n    \n\n    \n\n    \n    \n      \n        \n        FreshCart e-Commerce HTML Template. -->\n        {{ 'FOOTER.COPYRIGHT' | translate }}\n        Codescandy -->\n      \n\n      \n        \n          {{ 'FOOTER.FOLLOW_US' | translate }}\n        \n\n        \n        \n          \n            \n          \n        \n\n        \n          \n            \n          \n        \n\n        \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ \\'FOOTER.GET_APP_TITLE\\' | translate }}              {{ \\'FOOTER.GET_APP_DESC\\' | translate }}                                                        {{ \\'FOOTER.SHARE_APP_LINK\\' | translate }}                                                            {{ \\'FOOTER.PAYMENT_PARTNERS\\' | translate }}                                                                                    {{ \\'FOOTER.GET_DELIVERIES\\' | translate }}                                                                    FreshCart e-Commerce HTML Template. -->        {{ \\'FOOTER.COPYRIGHT\\' | translate }}        Codescandy -->                              {{ \\'FOOTER.FOLLOW_US\\' | translate }}                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/forget-password/forget-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forget-password\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forget-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                errorMsg\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSuccess\n                            \n                            \n                                resetPassword\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                showPassword\n                            \n                            \n                                step\n                            \n                            \n                                verifyCode\n                            \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitVerifyCode\n                            \n                            \n                                submitVerifyEmail\n                            \n                            \n                                submitVerifyPassword\n                            \n                            \n                                togglePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitVerifyCode\n                        \n                    \n                \n            \n            \n                \nsubmitVerifyCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/forget-password/forget-password.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitVerifyEmail\n                        \n                    \n                \n            \n            \n                \nsubmitVerifyEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/forget-password/forget-password.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitVerifyPassword\n                        \n                    \n                \n            \n            \n                \nsubmitVerifyPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/forget-password/forget-password.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePassword\n                        \n                    \n                \n            \n            \n                \ntogglePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/forget-password/forget-password.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/forget-password/forget-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/forget-password/forget-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/forget-password/forget-password.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/forget-password/forget-password.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    newPassword: new FormControl(null, [\n      Validators.required,\n      Validators.pattern(/^[A-Z]\\w{7,}$/),\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/forget-password/forget-password.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/forget-password/forget-password.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/forget-password/forget-password.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        step\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/forget-password/forget-password.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    resetCode: new FormControl(null, [\n      Validators.required,\n      Validators.pattern(/^[0-9]{6}$/),\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/forget-password/forget-password.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/forget-password/forget-password.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgClass } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AuthService } from '../../Core/Services/Auth/auth.service';\n\n@Component({\n  selector: 'app-forget-password',\n  imports: [ReactiveFormsModule,NgClass,TranslateModule],\n  templateUrl: './forget-password.component.html',\n  styleUrl: './forget-password.component.scss',\n})\nexport class ForgetPasswordComponent {\n  private readonly authService = inject(AuthService);\n  private readonly router = inject(Router);\n\n  step: number = 1;\n\n  isLoading: boolean = false;\n  errorMsg: string |null= '';\n  isSuccess: string = '';\n  showPassword: boolean = false;\n\n\n  // Step 1: Verify Email\n  verifyEmail: FormGroup = new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n  });\n\n  // Step 2: Verify Code\n  verifyCode: FormGroup = new FormGroup({\n    resetCode: new FormControl(null, [\n      Validators.required,\n      Validators.pattern(/^[0-9]{6}$/),\n    ]),\n  });\n\n  // Step 3: Reset Password\n  resetPassword: FormGroup = new FormGroup({\n    newPassword: new FormControl(null, [\n      Validators.required,\n      Validators.pattern(/^[A-Z]\\w{7,}$/),\n    ]),\n  });\n\n  // Step 1\n  submitVerifyEmail(): void {\n    if (this.verifyEmail.invalid) {\n      this.verifyEmail.markAllAsTouched();\n      return;\n    }\n    this.isLoading = true;\n    this.errorMsg = '';\n    this.isSuccess = '';\n\n    this.authService.verifyEmail(this.verifyEmail.value).subscribe({\n      next: (res) => {\n        this.isLoading = false;\n        if (res.statusMsg === 'success') {\n          this.isSuccess = res.message || 'Verification code sent!';\n          this.step = 2;\n        }\n      },\n      error: (err) => {\n        this.isLoading = false;\n        this.errorMsg = err.error.message || 'Something went wrong';\n\n        setTimeout(() => {\n           this.errorMsg=null\n        }, 3000);\n      },\n    });\n  }\n\n  // Step 2\n  submitVerifyCode(): void {\n    if (this.verifyCode.invalid) {\n      this.verifyCode.markAllAsTouched();\n      return;\n    }\n    this.isLoading = true;\n    this.errorMsg = '';\n    this.isSuccess = '';\n\n    this.authService.verifyResetCode(this.verifyCode.value).subscribe({\n      next: (res) => {\n        this.isLoading = false;\n        if (res.statusMsg !== 'fail') {\n          this.isSuccess = res.message || 'Code verified successfully!';\n          this.step = 3;\n        }\n      },\n      error: (err) => {\n        this.isLoading = false;\n        this.errorMsg = err.error.message || 'Invalid verification code';\n        setTimeout(() => {\n          this.errorMsg=null\n        }, 3000);\n      },\n    });\n  }\n\n  // Step 3\n  submitVerifyPassword(): void {\n    if (this.resetPassword.invalid) {\n      this.resetPassword.markAllAsTouched();\n      return;\n    }\n    this.isLoading = true;\n    this.errorMsg = '';\n    this.isSuccess = '';\n\n    this.authService.verifyResetPassword(this.resetPassword.value).subscribe({\n      next: (res) => {\n        this.isLoading = false;\n        this.isSuccess = res.message || 'Password reset successfully!';\n        localStorage.setItem('userToken', res.token);\n        this.authService.saveUserData();\n        setTimeout(() => {\n          this.router.navigate(['/home']);\n        }, 1200);\n      },\n      error: (err) => {\n        this.isLoading = false;\n        this.errorMsg = err.error.message || 'Something went wrong';\n\n        setTimeout(() => {\n          this.errorMsg=null\n        }, 3000);\n      },\n    });\n  }\n\n\ntogglePassword() {\n  this.showPassword = !this.showPassword;\n}\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'RESET_PASSWORD.TITLE' | translate }}\n    \n\n    \n    @if (errorMsg) {\n      \n        {{ errorMsg }}\n      \n    }\n    @if (isSuccess) {\n      \n        {{ isSuccess }}\n      \n    }\n\n    \n    @if (step==1) {\n      \n        \n          {{ 'RESET_PASSWORD.EMAIL_LABEL' | translate }}\n        \n        \n\n        @if (verifyEmail.get('email')?.invalid && verifyEmail.get('email')?.touched) {\n          \n            \n              @if (verifyEmail.get('email')?.errors?.['required']) {\n                {{ 'RESET_PASSWORD.ERROR_REQUIRED_EMAIL' | translate }}\n              }\n              @if (verifyEmail.get('email')?.errors?.['email']) {\n                {{ 'RESET_PASSWORD.ERROR_INVALID_EMAIL' | translate }}\n              }\n            \n          \n        }\n\n        \n          @if (isLoading) {\n            {{ 'RESET_PASSWORD.SENDING' | translate }} \n          } @else {\n            {{ 'RESET_PASSWORD.SEND_CODE' | translate }}\n          }\n        \n      \n    }\n\n    \n    @if (step==2) {\n      \n        \n          {{ 'RESET_PASSWORD.VERIFY_CODE' | translate }}\n        \n        \n\n        @if (verifyCode.get('resetCode')?.invalid && verifyCode.get('resetCode')?.touched) {\n          \n            \n              @if (verifyCode.get('resetCode')?.errors?.['required']) {\n                {{ 'RESET_PASSWORD.ERROR_REQUIRED_CODE' | translate }}\n              }\n              @if (verifyCode.get('resetCode')?.errors?.['pattern']) {\n                {{ 'RESET_PASSWORD.ERROR_INVALID_CODE' | translate }}\n              }\n            \n          \n        }\n\n        \n          @if (isLoading) {\n            {{ 'RESET_PASSWORD.VERIFYING' | translate }} \n          } @else {\n            {{ 'RESET_PASSWORD.VERIFY_BTN' | translate }}\n          }\n        \n      \n    }\n\n    \n    @if (step==3) {\n      \n        \n          {{ 'RESET_PASSWORD.NEW_PASSWORD_LABEL' | translate }}\n        \n\n        \n         \n\n\n          \n            \n          \n        \n\n        @if (resetPassword.get('newPassword')?.invalid && resetPassword.get('newPassword')?.touched) {\n          \n            \n              @if (resetPassword.get('newPassword')?.errors?.['required']) {\n                {{ 'RESET_PASSWORD.ERROR_REQUIRED_PASSWORD' | translate }}\n              }\n              @if (resetPassword.get('newPassword')?.errors?.['pattern']) {\n                {{ 'RESET_PASSWORD.ERROR_INVALID_PASSWORD' | translate }}\n              }\n            \n          \n        }\n\n        \n          @if (isLoading) {\n            {{ 'RESET_PASSWORD.RESETTING' | translate }} \n          } @else {\n            {{ 'RESET_PASSWORD.RESET_BTN' | translate }}\n          }\n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'RESET_PASSWORD.TITLE\\' | translate }}            @if (errorMsg) {              {{ errorMsg }}          }    @if (isSuccess) {              {{ isSuccess }}          }        @if (step==1) {                        {{ \\'RESET_PASSWORD.EMAIL_LABEL\\' | translate }}                        @if (verifyEmail.get(\\'email\\')?.invalid && verifyEmail.get(\\'email\\')?.touched) {                                    @if (verifyEmail.get(\\'email\\')?.errors?.[\\'required\\']) {                {{ \\'RESET_PASSWORD.ERROR_REQUIRED_EMAIL\\' | translate }}              }              @if (verifyEmail.get(\\'email\\')?.errors?.[\\'email\\']) {                {{ \\'RESET_PASSWORD.ERROR_INVALID_EMAIL\\' | translate }}              }                              }                  @if (isLoading) {            {{ \\'RESET_PASSWORD.SENDING\\' | translate }}           } @else {            {{ \\'RESET_PASSWORD.SEND_CODE\\' | translate }}          }                  }        @if (step==2) {                        {{ \\'RESET_PASSWORD.VERIFY_CODE\\' | translate }}                        @if (verifyCode.get(\\'resetCode\\')?.invalid && verifyCode.get(\\'resetCode\\')?.touched) {                                    @if (verifyCode.get(\\'resetCode\\')?.errors?.[\\'required\\']) {                {{ \\'RESET_PASSWORD.ERROR_REQUIRED_CODE\\' | translate }}              }              @if (verifyCode.get(\\'resetCode\\')?.errors?.[\\'pattern\\']) {                {{ \\'RESET_PASSWORD.ERROR_INVALID_CODE\\' | translate }}              }                              }                  @if (isLoading) {            {{ \\'RESET_PASSWORD.VERIFYING\\' | translate }}           } @else {            {{ \\'RESET_PASSWORD.VERIFY_BTN\\' | translate }}          }                  }        @if (step==3) {                        {{ \\'RESET_PASSWORD.NEW_PASSWORD_LABEL\\' | translate }}                                                                         @if (resetPassword.get(\\'newPassword\\')?.invalid && resetPassword.get(\\'newPassword\\')?.touched) {                                    @if (resetPassword.get(\\'newPassword\\')?.errors?.[\\'required\\']) {                {{ \\'RESET_PASSWORD.ERROR_REQUIRED_PASSWORD\\' | translate }}              }              @if (resetPassword.get(\\'newPassword\\')?.errors?.[\\'pattern\\']) {                {{ \\'RESET_PASSWORD.ERROR_INVALID_PASSWORD\\' | translate }}              }                              }                  @if (isLoading) {            {{ \\'RESET_PASSWORD.RESETTING\\' | translate }}           } @else {            {{ \\'RESET_PASSWORD.RESET_BTN\\' | translate }}          }                  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                            CarouselModule\n                            RouterLink\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                categories\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoriesService\n                            \n                            \n                                customMainSlider\n                            \n                            \n                                customOptions\n                            \n                            \n                                products\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToCart\n                            \n                            \n                                getCategoriesData\n                            \n                            \n                                getProductsData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProductToCart\n                        \n                    \n                \n            \n            \n                \naddProductToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/home/home.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoriesData\n                        \n                    \n                \n            \n            \n                \ngetCategoriesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/home/home.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductsData\n                        \n                    \n                \n            \n            \n                \ngetProductsData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/home/home.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/home/home.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoriesService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CategoriesService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customMainSlider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    loop: true,\n    rtl: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 400,\n    autoplay: true,\n    autoplayTimeout: 6000,\n    autoplayHoverPause: true,\n    items: 1,\n    navText: [\n      '',\n      '',\n    ],\n    nav: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/home/home.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    loop: true,\n    rtl: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: true,\n    navSpeed: 400,\n    autoplay: true,\n    autoplayTimeout: 3000,\n    autoplayHoverPause: true,\n    navText: [\n      '',\n      '',\n    ],\n    responsive: {\n      0: { items: 1 },\n      400: { items: 2 },\n      740: { items: 3 },\n      940: { items: 6 },\n    },\n    nav: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/home/home.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/home/home.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CarouselModule, OwlOptions } from 'ngx-owl-carousel-o';\nimport { ToastrService } from 'ngx-toastr';\nimport { CartService } from '../../Core/Services/Cart/cart.service';\nimport { CategoriesService } from '../../Core/Services/Categories/categories.service';\nimport { ProductsService } from '../../Core/Services/Products/products.service';\nimport { ICategory } from '../../Shared/Interfaces/icategory';\nimport { IProduct } from '../../Shared/Interfaces/iproduct';\nimport { signal } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n  imports: [CarouselModule, RouterLink, TranslateModule],\n})\nexport class HomeComponent implements OnInit {\n  private readonly productsService = inject(ProductsService);\n  private readonly categoriesService = inject(CategoriesService);\n  private readonly cartService = inject(CartService);\n  private readonly toastrService = inject(ToastrService);\n\n  products = signal([]);\n  categories = signal([]);\n\n  customOptions: OwlOptions = {\n    loop: true,\n    rtl: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: true,\n    navSpeed: 400,\n    autoplay: true,\n    autoplayTimeout: 3000,\n    autoplayHoverPause: true,\n    navText: [\n      '',\n      '',\n    ],\n    responsive: {\n      0: { items: 1 },\n      400: { items: 2 },\n      740: { items: 3 },\n      940: { items: 6 },\n    },\n    nav: false,\n  };\n\n  customMainSlider: OwlOptions = {\n    loop: true,\n    rtl: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 400,\n    autoplay: true,\n    autoplayTimeout: 6000,\n    autoplayHoverPause: true,\n    items: 1,\n    navText: [\n      '',\n      '',\n    ],\n    nav: false,\n  };\n\n  ngOnInit(): void {\n    this.getProductsData();\n    this.getCategoriesData();\n  }\n\n  getProductsData() {\n    this.productsService.getAllProducts().subscribe({\n      next: (res) => {\n        this.products.set(res.data);\n      },\n      error: (err) => console.log(err),\n    });\n  }\n\n  getCategoriesData() {\n    this.categoriesService.getAllCategories().subscribe({\n      next: (res) => {\n        this.categories.set(res.data);\n      },\n      error: (err) => console.log(err),\n    });\n  }\n\n  addProductToCart(id: string) {\n    this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        if (res.status === 'success') {\n          this.toastrService.success(res.message);\n          this.cartService.cartNumber.set(res.numOfCartItems);\n        } else {\n          this.toastrService.error(res.message);\n        }\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n\n    \n    \n      \n      \n    \n  \n\n\n\n  \n    \n      {{ \"HOME_PAGE.CATEGORIES_SECTION.TITLE\" | translate }}\n    \n  \n\n  \n    @for (cat of categories(); track cat._id) {\n    \n      \n        \n        {{ cat.name }}\n      \n    \n    }\n  \n\n\n\n\n  \n    \n    \n  \n\n  \n    \n    \n      \n        {{ \"HOME_PAGE.POPULAR_PRODUCTS_SECTION.TITLE\" | translate }}\n      \n    \n\n    \n    \n      @for (product of products().slice(0, 12); track $index) {\n      \n        \n\n        \n          {{ product.category.name }}\n        \n\n        \n          \n          \n        \n\n        \n          \n            {{ product.title.split(\" \", 2).join(\" \") }}\n          \n\n          \n            \n              {{\n                \"PRODUCT_CARD.PRICE_FORMAT\"\n                  | translate : { price: product.price }\n              }}\n            \n            \n              \n              \n                {{\n                  \"PRODUCT_CARD.RATING_LABEL\"\n                    | translate : { rating: product.ratingsAverage }\n                }}\n              \n            \n          \n\n          \n            \n            {{ \"PRODUCT_CARD.ADD_TO_CART\" | translate }}\n          \n        \n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                            {{ \"HOME_PAGE.CATEGORIES_SECTION.TITLE\" | translate }}            @for (cat of categories(); track cat._id) {                          {{ cat.name }}              }                                      {{ \"HOME_PAGE.POPULAR_PRODUCTS_SECTION.TITLE\" | translate }}                        @for (product of products().slice(0, 12); track $index) {                                {{ product.category.name }}                                                                          {{ product.title.split(\" \", 2).join(\" \") }}                                              {{                \"PRODUCT_CARD.PRICE_FORMAT\"                  | translate : { price: product.price }              }}                                                                    {{                  \"PRODUCT_CARD.RATING_LABEL\"                    | translate : { rating: product.ratingsAverage }                }}                                                                      {{ \"PRODUCT_CARD.ADD_TO_CART\" | translate }}                              }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBrand.html":{"url":"interfaces/IBrand.html","title":"interface - IBrand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBrand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ibrand.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBrand {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n  createdAt: string;\n  updatedAt: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICart.html":{"url":"interfaces/ICart.html","title":"interface - ICart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Shared/Interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            __v\n                                        \n                                \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            cartOwner\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                                \n                                        \n                                            totalCartPrice\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cartOwner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cartOwner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         CartItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCartPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCartPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string;\n  cartOwner: string;\n  products: CartItem[];\n  totalCartPrice: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface CartItem {\n  _id: string;\n  product: Product;\n  count: number;\n  price: number;\n}\n\nexport interface Product {\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  subcategory: Subcategory[];\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string; // هنا ممكن يكون اسم الـ category أو الـ category _id\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICategory.html":{"url":"interfaces/ICategory.html","title":"interface - ICategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Shared/Interfaces/icategory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICategory {\n\n\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n  createdAt: string;\n  updatedAt: string;\n  \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProduct.html":{"url":"interfaces/IProduct.html","title":"interface - IProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Shared/Interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            ratingsQuantity\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            sold\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsQuantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sold:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProduct {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  id: string;\n}\n\ninterface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\ninterface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            RouterLink\n                            NgClass\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                errorMsg\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSuccess\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                showPassword\n                            \n                            \n                                validationMessages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                            \n                                togglePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/login/login.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePassword\n                        \n                    \n                \n            \n            \n                \ntogglePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/login/login.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    \n    email: new FormControl(null, [\n      Validators.required,\n      Validators.email\n    ]),\n\n    password: new FormControl(null, [\n      Validators.required,\n      Validators.pattern(/^[A-Z]\\w{7,}$/) \n    ]),\n\n  }, )\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n \n\n  email: {\n    required: 'Email is required',\n    email: 'Please enter a valid email address'\n  },\n\n  password: {\n    required: 'Password is required',\n    pattern: 'Password must start with a capital letter and be at least 8 characters'\n  },\n\n \n}\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/login/login.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgClass } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AuthService } from '../../Core/Services/Auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  imports: [ReactiveFormsModule, RouterLink, NgClass,TranslateModule],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  isLoading:boolean=false;\n  errorMsg:string|null=null;\n  isSuccess:string='';\n  showPassword: boolean = false;\n\n  private readonly authService=inject(AuthService)\n  private readonly router=inject(Router)\n\n\n\n loginForm: FormGroup = new FormGroup({\n    \n    email: new FormControl(null, [\n      Validators.required,\n      Validators.email\n    ]),\n\n    password: new FormControl(null, [\n      Validators.required,\n      Validators.pattern(/^[A-Z]\\w{7,}$/) \n    ]),\n\n  }, );\n\n    validationMessages: any = {\n \n\n  email: {\n    required: 'Email is required',\n    email: 'Please enter a valid email address'\n  },\n\n  password: {\n    required: 'Password is required',\n    pattern: 'Password must start with a capital letter and be at least 8 characters'\n  },\n\n \n}; \n\n\n \n  \nsubmitForm(): void {\n  if (this.loginForm.valid) {\n    this.isLoading = true;\n    this.authService.sendLoginForm(this.loginForm.value).subscribe({\n      next: (res) => {\n        console.log(res);\n        this.isLoading = false;\n        this.isSuccess = res.message;\n\n        // Save Token\n        localStorage.setItem('userToken', res.token);\n\n        // Decode Token\n        this.authService.saveUserData();\n\n        setTimeout(() => {\n          this.router.navigate(['/home']);\n        }, 500);\n      },\n      error: (err) => {\n        console.log(err);\n        this.isLoading = false;\n        this.errorMsg = err.error.message;\n\n        // ⏱ إخفاء الرسالة بعد 3 ثواني\n        setTimeout(() => {\n          this.errorMsg = null;\n        }, 3000);\n      },\n    });\n  } else {\n    this.loginForm.markAllAsTouched();\n  }\n}\n\ntogglePassword(): void {\n  this.showPassword = !this.showPassword;\n}\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'LOGIN.TITLE' | translate }}\n    \n\n    \n      \n      \n        \n          {{ 'LOGIN.EMAIL_LABEL' | translate }}\n        \n        \n\n        @if (loginForm.get('email')?.touched && loginForm.get('email')?.invalid) {\n          \n            \n              @if (loginForm.get('email')?.errors?.['required']) {\n                {{ 'LOGIN.EMAIL_REQUIRED' | translate }}\n              }\n              @if (loginForm.get('email')?.errors?.['email']) {\n                {{ 'LOGIN.EMAIL_INVALID' | translate }}\n              }\n            \n          \n        }\n      \n\n      \n      \n        \n          {{ 'LOGIN.PASSWORD_LABEL' | translate }}\n        \n\n        \n          \n\n          \n          \n            \n          \n        \n\n        @if (loginForm.get('password')?.touched && loginForm.get('password')?.invalid) {\n          \n            \n              @if (loginForm.get('password')?.errors?.['required']) {\n                {{ 'LOGIN.PASSWORD_REQUIRED' | translate }}\n              }\n              @if (loginForm.get('password')?.errors?.['pattern']) {\n                {{ 'LOGIN.PASSWORD_PATTERN' | translate }}\n              }\n            \n          \n        }\n      \n\n      \n      \n        \n        {{ 'LOGIN.BUTTON' | translate }}\n\n        @if (isLoading) {\n          \n        }\n      \n\n      @if (errorMsg) {\n        \n          \n            {{ errorMsg }}\n          \n        \n      }\n\n      @if (isSuccess) {\n        \n          \n            {{ isSuccess }}\n          \n        \n      }\n    \n\n    \n      {{ 'LOGIN.NO_ACCOUNT' | translate }}\n      \n        {{ 'LOGIN.SIGNUP_LINK' | translate }}\n      \n    \n\n    \n      \n        {{ 'LOGIN.FORGOT_PASSWORD' | translate }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'LOGIN.TITLE\\' | translate }}                                      {{ \\'LOGIN.EMAIL_LABEL\\' | translate }}                        @if (loginForm.get(\\'email\\')?.touched && loginForm.get(\\'email\\')?.invalid) {                                    @if (loginForm.get(\\'email\\')?.errors?.[\\'required\\']) {                {{ \\'LOGIN.EMAIL_REQUIRED\\' | translate }}              }              @if (loginForm.get(\\'email\\')?.errors?.[\\'email\\']) {                {{ \\'LOGIN.EMAIL_INVALID\\' | translate }}              }                              }                                    {{ \\'LOGIN.PASSWORD_LABEL\\' | translate }}                                                                                    @if (loginForm.get(\\'password\\')?.touched && loginForm.get(\\'password\\')?.invalid) {                                    @if (loginForm.get(\\'password\\')?.errors?.[\\'required\\']) {                {{ \\'LOGIN.PASSWORD_REQUIRED\\' | translate }}              }              @if (loginForm.get(\\'password\\')?.errors?.[\\'pattern\\']) {                {{ \\'LOGIN.PASSWORD_PATTERN\\' | translate }}              }                              }                                  {{ \\'LOGIN.BUTTON\\' | translate }}        @if (isLoading) {                  }            @if (errorMsg) {                              {{ errorMsg }}                        }      @if (isSuccess) {                              {{ isSuccess }}                        }              {{ \\'LOGIN.NO_ACCOUNT\\' | translate }}              {{ \\'LOGIN.SIGNUP_LINK\\' | translate }}                            {{ \\'LOGIN.FORGOT_PASSWORD\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MyTranslateService.html":{"url":"injectables/MyTranslateService.html","title":"injectable - MyTranslateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  MyTranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/MyTranslate/my-translate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                renderer2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDirection\n                            \n                            \n                                changeLanguageTranslate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/MyTranslate/my-translate.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDirection\n                        \n                    \n                \n            \n            \n                \nchangeDirection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/MyTranslate/my-translate.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguageTranslate\n                        \n                    \n                \n            \n            \n                \nchangeLanguageTranslate(language: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/MyTranslate/my-translate.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        renderer2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RendererFactory2).createRenderer(null, null)\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/Services/MyTranslate/my-translate.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  inject,\n  Injectable,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyTranslateService {\n  private readonly renderer2 = inject(RendererFactory2).createRenderer(null, null);\n\n  constructor(\n    private translateService: TranslateService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n  ) {\n    \n    \n    if (isPlatformBrowser(this.platformId)) {\n      //1\n      this.translateService.setDefaultLang('en');\n\n      //2\n      const savedLang = localStorage.getItem('lang');\n      //3\n      if (savedLang) {\n        this.translateService.use(savedLang);\n      }\n\n      this.changeDirection()\n\n    }\n  }\n\n\n  changeDirection():void {\n\n    if (localStorage.getItem('lang')==='en') {\n      this.renderer2.setAttribute(document.documentElement,'dir','ltr');\n      this.renderer2.setAttribute(document.documentElement,'lang','en');\n    }else  if (localStorage.getItem('lang')==='ar') {\n      this.renderer2.setAttribute(document.documentElement,'dir','rtl');\n      this.renderer2.setAttribute(document.documentElement,'lang','ar');\n    }\n\n  }\n\n\n    changeLanguageTranslate(language: string){\n      localStorage.setItem('lang',language);\n      this.translateService.use(language);\n      this.changeDirection()\n\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Layouts/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                            TranslateModule\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                cartNumber\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                currentLang\n                            \n                            \n                                isDropdownOpen\n                            \n                            \n                                    Private\n                                    Readonly\n                                myTranslateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchLanguage\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLogin\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLogin\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/Layouts/navbar/navbar.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Layouts/navbar/navbar.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Layouts/navbar/navbar.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchLanguage\n                        \n                    \n                \n            \n            \n                \nswitchLanguage(language: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Layouts/navbar/navbar.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Layouts/navbar/navbar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Layouts/navbar/navbar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() => this.cartService.cartNumber())\n                    \n                \n                    \n                        \n                                Defined in src/app/Layouts/navbar/navbar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Layouts/navbar/navbar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'en'\n                    \n                \n                    \n                        \n                                Defined in src/app/Layouts/navbar/navbar.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Layouts/navbar/navbar.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        myTranslateService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MyTranslateService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Layouts/navbar/navbar.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, inject, input, OnInit, AfterViewInit, Signal } from '@angular/core';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AuthService } from '../../Core/Services/Auth/auth.service';\nimport { CartService } from '../../Core/Services/Cart/cart.service';\nimport { MyTranslateService } from '../../Core/Services/MyTranslate/my-translate.service';\nimport { initFlowbite } from 'flowbite'; // ✅ دي أهم سطر\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive, TranslateModule],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n  host: { 'ngSkipHydration': '' },\n})\nexport class NavbarComponent implements OnInit, AfterViewInit {\n  authService = inject(AuthService);\n  private readonly myTranslateService = inject(MyTranslateService);\n  private readonly cartService = inject(CartService);\n\n  cartNumber: Signal = computed(() => this.cartService.cartNumber());\n\n  isLogin = input(true);\n  currentLang = 'en';\n  isDropdownOpen = false;\n\n  ngOnInit(): void {\n    this.cartService.getLoggedUserCart().subscribe({\n      next: (res) => {\n        this.cartService.cartNumber.set(res.numOfCartItems);\n      },\n    });\n  }\n\n  // ✅ الجزء اللي يفعّل الزرار بتاع Flowbite\n  ngAfterViewInit(): void {\n    initFlowbite();\n  }\n\n  toggleDropdown() {\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  switchLanguage(language: string) {\n    this.currentLang = language;\n    this.myTranslateService.changeLanguageTranslate(language);\n    this.isDropdownOpen = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n\n    \n    \n      Open main menu\n      \n        \n      \n    \n\n    \n\n    \n    \n      @if (isLogin()) {\n      \n        \n          \n            {{ \"NAVBAR.HOME\" | translate }}\n          \n        \n        \n          \n            {{ \"NAVBAR.PRODUCTS\" | translate }}\n          \n        \n        \n          \n            {{ \"NAVBAR.CATEGORIES\" | translate }}\n          \n        \n        \n          \n            {{ \"NAVBAR.BRANDS\" | translate }}\n          \n        \n      \n      }\n\n      \n      \n        \n        \n          @if (currentLang === 'en') {\n          \n            \n          \n          } @else {\n          \n            \n          \n          }\n        \n\n        \n        @if (!isLogin()) {\n        {{ \"NAVBAR.LOGIN\" | translate }}\n        {{ \"NAVBAR.REGISTER\" | translate }}\n        } @else {\n        \n        \n          \n          \n            {{ cartNumber() }}\n          \n        \n\n        \n        \n          \n        \n        }\n      \n    \n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                /* ============================\n🌿 Navbar Active Style (Modern Gradient)\n============================ */\n\n.nav-link {\n  @apply relative block py-2 px-4 rounded-md font-medium text-gray-700 dark:text-gray-200 \n    transition-all duration-300 ease-in-out;\n}\n\n/* Hover effect */\n.nav-link:hover {\n  background: linear-gradient(135deg, #16a34a 0%, #22c55e 100%);\n  color: white;\n  box-shadow: 0 4px 12px rgba(34, 197, 94, 0.3);\n  transform: translateY(-1px);\n}\n\n/* Active link (routerLinkActive) */\n.active-link {\n  background: linear-gradient(135deg, #16a34a 0%, #22c55e 100%);\n  color: white !important;\n  box-shadow: 0 4px 12px rgba(34, 197, 94, 0.4);\n  transform: translateY(-1px);\n}\n\n/* Optional smoother hover-out animation */\n.nav-link:not(.active-link):hover {\n  transition: all 0.25s ease;\n}\n\n\nnav {\n  transition: all 0.3s ease-in-out;\n}\n\nbutton, a {\n  transition: background-color 0.2s, color 0.2s, transform 0.2s;\n}\n\nbutton:hover, a:hover {\n  transform: scale(1.05);\n}\n\n/* Simple fade animation for dropdown */\n@keyframes fade-in {\n  from {\n    opacity: 0;\n    transform: translateY(-5px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.animate-fade-in {\n  animation: fade-in 0.2s ease-in-out;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Open main menu                                          @if (isLogin()) {                                    {{ \"NAVBAR.HOME\" | translate }}                                                {{ \"NAVBAR.PRODUCTS\" | translate }}                                                {{ \"NAVBAR.CATEGORIES\" | translate }}                                                {{ \"NAVBAR.BRANDS\" | translate }}                              }                                      @if (currentLang === \\'en\\') {                                          } @else {                                          }                        @if (!isLogin()) {        {{ \"NAVBAR.LOGIN\" | translate }}        {{ \"NAVBAR.REGISTER\" | translate }}        } @else {                                                {{ cartNumber() }}                                                            }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/notfound/notfound.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notfound.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  imports: [],\n  templateUrl: './notfound.component.html',\n  styleUrl: './notfound.component.scss'\n})\nexport class NotfoundComponent {\n\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/Orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/Orders/orders.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmOrder\n                        \n                    \n                \n            \n            \n                \nconfirmOrder(cartId: string, orderData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Orders/orders.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cartId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orderData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : localStorage.getItem('userToken')\n                    \n                \n                    \n                        \n                                Defined in src/app/Core/Services/Orders/orders.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../Environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  constructor(private httpClient: HttpClient) { }\n    userToken: any = localStorage.getItem('userToken');\n\n  confirmOrder(cartId: string, orderData: any):Observable {\n    return this.httpClient.post(`${environment.basUrl}/api/v1/orders/checkout-session/${cartId}?url=http://localhost:4200`, {\n      \"shippingAddress\": orderData  \n    },{\n      headers:{token:this.userToken}\n    }\n  );\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Shared/Interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string;\n  cartOwner: string;\n  products: CartItem[];\n  totalCartPrice: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface CartItem {\n  _id: string;\n  product: Product;\n  count: number;\n  price: number;\n}\n\nexport interface Product {\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  subcategory: Subcategory[];\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string; // هنا ممكن يكون اسم الـ category أو الـ category _id\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductsComponent.html":{"url":"components/ProductsComponent.html","title":"component - ProductsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ProductsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/products/products.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-products\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                            TitleCasePipe\n                            TermtextPipe\n                            FormsModule\n                            SearchPipe\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./products.component.html\n            \n\n\n\n            \n                styleUrl\n                ./products.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                products\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                            \n                                searchWord\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToCart\n                            \n                            \n                                getProductsData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProductToCart\n                        \n                    \n                \n            \n            \n                \naddProductToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/products/products.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductsData\n                        \n                    \n                \n            \n            \n                \ngetProductsData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/products/products.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/products/products.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/products/products.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/products/products.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/products/products.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchWord\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/products/products.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/products/products.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CurrencyPipe, TitleCasePipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, inject, OnInit, signal } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { CartService } from '../../Core/Services/Cart/cart.service';\nimport { ProductsService } from '../../Core/Services/Products/products.service';\nimport { IProduct } from '../../Shared/Interfaces/iproduct';\nimport { SearchPipe } from '../../Shared/Pipes/search.pipe';\nimport { TermtextPipe } from '../../Shared/Pipes/termtext.pipe';\n\n@Component({\n  selector: 'app-products',\n  imports: [\n    RouterLink,\n    RouterLinkActive,\n    TitleCasePipe,\n    TermtextPipe,\n    FormsModule,\n    SearchPipe,\n    TranslateModule\n  ],\n  templateUrl: './products.component.html',\n  styleUrl: './products.component.scss'\n})\nexport class ProductsComponent implements OnInit {\n  private readonly productsService = inject(ProductsService);\n  private readonly cartService = inject(CartService);\n  private readonly toastService = inject(ToastrService);\n\n  products = signal([])\n  searchWord = signal('')\n\n\n\n  getProductsData() {\n    this.productsService.getAllProducts().subscribe({\n      next: (res) => {\n        this.products.set(res.data);\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.getProductsData();\n  }\n\n  addProductToCart(id: string) {\n\n    this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        if (res.status === 'success') {\n          this.toastService.success(res.message);\n          this.cartService.cartNumber.set(res.numOfCartItems)\n\n        }else{\n          this.toastService.error(res.message);\n        }\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n  \n    \n      {{ \"PRODUCTS.TITLE\" | translate }}\n    \n  \n\n  @if (products()) {\n  \n  \n    \n      \n      \n    \n  \n  }\n\n  \n    @for (product of products() | search:searchWord(); track $index) {\n    \n      \n\n      \n        {{ product.category.name }}\n      \n\n      \n        \n        \n      \n\n      \n        \n          {{ product.title | termtext : 2 | titlecase }}\n        \n\n        \n          \n            {{\n              \"PRODUCT_CARD.PRICE_FORMAT\" | translate : { price: product.price }\n            }}\n          \n          \n            \n            {{\n              product.ratingsAverage\n            }}\n          \n        \n\n        \n          \n          {{ \"PRODUCTS.ADD_TO_CART\" | translate }}\n        \n      \n    \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ \"PRODUCTS.TITLE\" | translate }}        @if (products()) {                            }      @for (product of products() | search:searchWord(); track $index) {                        {{ product.category.name }}                                                          {{ product.title | termtext : 2 | titlecase }}                                      {{              \"PRODUCT_CARD.PRICE_FORMAT\" | translate : { price: product.price }            }}                                            {{              product.ratingsAverage            }}                                              {{ \"PRODUCTS.ADD_TO_CART\" | translate }}                      }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Core/Services/Products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllProducts\n                            \n                            \n                                getSpecificProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/Core/Services/Products/products.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \ngetAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Products/products.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSpecificProducts\n                        \n                    \n                \n            \n            \n                \ngetSpecificProducts(id: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Core/Services/Products/products.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../Environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  getAllProducts():Observable{\n    return this.httpClient.get(`${environment.basUrl}/api/v1/products`)\n  }\n  \n  getSpecificProducts(id:string | null):Observable{\n    return this.httpClient.get(`${environment.basUrl}/api/v1/products/${id} `)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Pages/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            RouterLink\n                            NgClass\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                errorMsg\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSuccess\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                showPassword\n                            \n                            \n                                validationMessages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                passwordMatch\n                            \n                            \n                                submitForm\n                            \n                            \n                                togglePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatch\n                        \n                    \n                \n            \n            \n                \npasswordMatch(form: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/register/register.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/register/register.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePassword\n                        \n                    \n                \n            \n            \n                \ntogglePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Pages/register/register.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/register/register.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/register/register.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/register/register.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/register/register.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl(null, [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20)\n    ]),\n\n    email: new FormControl(null, [\n      Validators.required,\n      Validators.email\n    ]),\n\n    password: new FormControl(null, [\n      Validators.required,\n      Validators.pattern(/^[A-Z]\\w{7,}$/) // Example: Starts with capital, 6–11 chars\n    ]),\n\n    rePassword: new FormControl(null, [\n      Validators.required\n    ]),\n\n    phone: new FormControl(null, [\n      Validators.required,\n      Validators.pattern(/^01[0125][0-9]{8}$/) // Egyptian phone format example\n    ])\n  },{ validators: this.passwordMatch } )\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/register/register.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/register/register.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n        name: {\n          required: 'Name is required',\n          minlength: 'Name must be at least 3 characters',\n          maxlength: 'Name cannot exceed 20 characters'\n        },\n\n        email: {\n          required: 'Email is required',\n          email: 'Please enter a valid email address'\n        },\n\n        password: {\n          required: 'Password is required',\n          pattern: 'Password must start with a capital letter and be at least 8 characters'\n        },\n\n        rePassword: {\n          required: 'Please confirm your password',\n          mismatch: 'Passwords do not match'\n        },\n\n        phone: {\n          required: 'Phone number is required',\n          pattern: 'Please enter a valid Egyptian phone number (e.g. 01012345678)'\n        }\n}\n                    \n                \n                    \n                        \n                                Defined in src/app/Pages/register/register.component.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgClass } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AuthService } from '../../Core/Services/Auth/auth.service';\n\n@Component({\n  selector: 'app-register',\n  imports: [ReactiveFormsModule, RouterLink,NgClass,TranslateModule],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss'\n})\nexport class RegisterComponent {\n  isLoading:boolean=false;\n  errorMsg:string | null='';\n  isSuccess:string='';\n  showPassword: boolean = false;\n  private readonly authService=inject(AuthService)\n  private readonly router=inject(Router)\n  \n  // private formBuilder=inject(FormBuilder)\n\n// registerForm:FormGroup =this.formBuilder.group({\n//   name:[null,[\n//       Validators.required,\n//       Validators.minLength(3),\n//       Validators.maxLength(20)\n//     ]]\n// })\n\n\n registerForm: FormGroup = new FormGroup({\n    name: new FormControl(null, [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(20)\n    ]),\n\n    email: new FormControl(null, [\n      Validators.required,\n      Validators.email\n    ]),\n\n    password: new FormControl(null, [\n      Validators.required,\n      Validators.pattern(/^[A-Z]\\w{7,}$/) // Example: Starts with capital, 6–11 chars\n    ]),\n\n    rePassword: new FormControl(null, [\n      Validators.required\n    ]),\n\n    phone: new FormControl(null, [\n      Validators.required,\n      Validators.pattern(/^01[0125][0-9]{8}$/) // Egyptian phone format example\n    ])\n  },{ validators: this.passwordMatch } );\n\n    validationMessages: any = {\n        name: {\n          required: 'Name is required',\n          minlength: 'Name must be at least 3 characters',\n          maxlength: 'Name cannot exceed 20 characters'\n        },\n\n        email: {\n          required: 'Email is required',\n          email: 'Please enter a valid email address'\n        },\n\n        password: {\n          required: 'Password is required',\n          pattern: 'Password must start with a capital letter and be at least 8 characters'\n        },\n\n        rePassword: {\n          required: 'Please confirm your password',\n          mismatch: 'Passwords do not match'\n        },\n\n        phone: {\n          required: 'Phone number is required',\n          pattern: 'Please enter a valid Egyptian phone number (e.g. 01012345678)'\n        }\n}; \n\n\n  passwordMatch(form: AbstractControl) {\n    const password = form.get('password')?.value;\n    const rePassword = form.get('rePassword')?.value;\n    return password === rePassword ? null : { mismatch: true };\n  }\n  \n  submitForm():void{\n    if (this.registerForm.valid) {\n          this.isLoading=true\n\n      this.authService.sendRegisterForm(this.registerForm.value).subscribe({\n        next:(res)=>{\n          console.log(res)\n          this.isLoading=false;\n          this.isSuccess=res.message;\n          setTimeout(() => {\n            this.router.navigate(['/login'])\n          }, 1000);\n\n        },\n        error:(err)=>{console.log(err);\n          this.isLoading=false;\n          this.errorMsg= err.error.message || 'Something went wrong';\n          setTimeout(() => {\n            this.errorMsg=null\n          }, 3000);\n          \n\n        }\n      })\n\n    } else {\n      this.registerForm.markAllAsTouched();\n    }\n  }\n\n  togglePassword(): void {\n    this.showPassword = !this.showPassword;\n  }\n}\n  \n    \n\n    \n        \n  \n    \n      {{ 'REGISTER.TITLE' | translate }}\n    \n\n    \n      \n      \n        \n          {{ 'REGISTER.NAME_LABEL' | translate }}\n        \n        \n\n        @if (registerForm.get('name')?.touched && registerForm.get('name')?.invalid) {\n          \n            \n              @if (registerForm.get('name')?.errors?.['required']) {\n                {{ 'REGISTER.NAME_REQUIRED' | translate }}\n              }\n              @if (registerForm.get('name')?.errors?.['minlength']) {\n                {{ 'REGISTER.NAME_MIN' | translate }}\n              }\n              @if (registerForm.get('name')?.errors?.['maxlength']) {\n                {{ 'REGISTER.NAME_MAX' | translate }}\n              }\n            \n          \n        }\n      \n\n      \n      \n        \n          {{ 'REGISTER.EMAIL_LABEL' | translate }}\n        \n        \n\n        @if (registerForm.get('email')?.touched && registerForm.get('email')?.invalid) {\n          \n            \n              @if (registerForm.get('email')?.errors?.['required']) {\n                {{ 'REGISTER.EMAIL_REQUIRED' | translate }}\n              }\n              @if (registerForm.get('email')?.errors?.['email']) {\n                {{ 'REGISTER.EMAIL_INVALID' | translate }}\n              }\n            \n          \n        }\n      \n\n      \n      \n        \n          {{ 'REGISTER.PASSWORD_LABEL' | translate }}\n        \n\n        \n          \n\n          \n            \n          \n        \n\n        @if (registerForm.get('password')?.touched && registerForm.get('password')?.invalid) {\n          \n            \n              @if (registerForm.get('password')?.errors?.['required']) {\n                {{ 'REGISTER.PASSWORD_REQUIRED' | translate }}\n              }\n              @if (registerForm.get('password')?.errors?.['pattern']) {\n                {{ 'REGISTER.PASSWORD_PATTERN' | translate }}\n              }\n            \n          \n        }\n      \n\n      \n      \n        \n          {{ 'REGISTER.CONFIRM_LABEL' | translate }}\n        \n\n        \n          \n\n          \n            \n          \n        \n\n        @if (registerForm.get('rePassword')?.touched && (registerForm.get('rePassword')?.invalid || registerForm.hasError('mismatch'))) {\n          \n            \n              @if (registerForm.get('rePassword')?.errors?.['required']) {\n                {{ 'REGISTER.CONFIRM_REQUIRED' | translate }}\n              }\n              @if (registerForm.hasError('mismatch')) {\n                {{ 'REGISTER.CONFIRM_MISMATCH' | translate }}\n              }\n            \n          \n        }\n      \n\n      \n      \n        \n          {{ 'REGISTER.PHONE_LABEL' | translate }}\n        \n        \n\n        @if (registerForm.get('phone')?.touched && registerForm.get('phone')?.invalid) {\n          \n            \n              @if (registerForm.get('phone')?.errors?.['required']) {\n                {{ 'REGISTER.PHONE_REQUIRED' | translate }}\n              }\n              @if (registerForm.get('phone')?.errors?.['pattern']) {\n                {{ 'REGISTER.PHONE_INVALID' | translate }}\n              }\n            \n          \n        }\n      \n\n      \n      \n        \n        {{ 'REGISTER.BUTTON' | translate }}\n\n        @if (isLoading) {\n          \n        }\n      \n\n      @if (errorMsg) {\n        \n          \n            {{ errorMsg }}\n          \n        \n      }\n\n      @if (isSuccess) {\n        \n          \n            {{ isSuccess }}\n          \n        \n      }\n    \n\n    \n      {{ 'REGISTER.HAVE_ACCOUNT' | translate }}\n      \n        {{ 'REGISTER.LOGIN_LINK' | translate }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'REGISTER.TITLE\\' | translate }}                                      {{ \\'REGISTER.NAME_LABEL\\' | translate }}                        @if (registerForm.get(\\'name\\')?.touched && registerForm.get(\\'name\\')?.invalid) {                                    @if (registerForm.get(\\'name\\')?.errors?.[\\'required\\']) {                {{ \\'REGISTER.NAME_REQUIRED\\' | translate }}              }              @if (registerForm.get(\\'name\\')?.errors?.[\\'minlength\\']) {                {{ \\'REGISTER.NAME_MIN\\' | translate }}              }              @if (registerForm.get(\\'name\\')?.errors?.[\\'maxlength\\']) {                {{ \\'REGISTER.NAME_MAX\\' | translate }}              }                              }                                    {{ \\'REGISTER.EMAIL_LABEL\\' | translate }}                        @if (registerForm.get(\\'email\\')?.touched && registerForm.get(\\'email\\')?.invalid) {                                    @if (registerForm.get(\\'email\\')?.errors?.[\\'required\\']) {                {{ \\'REGISTER.EMAIL_REQUIRED\\' | translate }}              }              @if (registerForm.get(\\'email\\')?.errors?.[\\'email\\']) {                {{ \\'REGISTER.EMAIL_INVALID\\' | translate }}              }                              }                                    {{ \\'REGISTER.PASSWORD_LABEL\\' | translate }}                                                                          @if (registerForm.get(\\'password\\')?.touched && registerForm.get(\\'password\\')?.invalid) {                                    @if (registerForm.get(\\'password\\')?.errors?.[\\'required\\']) {                {{ \\'REGISTER.PASSWORD_REQUIRED\\' | translate }}              }              @if (registerForm.get(\\'password\\')?.errors?.[\\'pattern\\']) {                {{ \\'REGISTER.PASSWORD_PATTERN\\' | translate }}              }                              }                                    {{ \\'REGISTER.CONFIRM_LABEL\\' | translate }}                                                                          @if (registerForm.get(\\'rePassword\\')?.touched && (registerForm.get(\\'rePassword\\')?.invalid || registerForm.hasError(\\'mismatch\\'))) {                                    @if (registerForm.get(\\'rePassword\\')?.errors?.[\\'required\\']) {                {{ \\'REGISTER.CONFIRM_REQUIRED\\' | translate }}              }              @if (registerForm.hasError(\\'mismatch\\')) {                {{ \\'REGISTER.CONFIRM_MISMATCH\\' | translate }}              }                              }                                    {{ \\'REGISTER.PHONE_LABEL\\' | translate }}                        @if (registerForm.get(\\'phone\\')?.touched && registerForm.get(\\'phone\\')?.invalid) {                                    @if (registerForm.get(\\'phone\\')?.errors?.[\\'required\\']) {                {{ \\'REGISTER.PHONE_REQUIRED\\' | translate }}              }              @if (registerForm.get(\\'phone\\')?.errors?.[\\'pattern\\']) {                {{ \\'REGISTER.PHONE_INVALID\\' | translate }}              }                              }                                  {{ \\'REGISTER.BUTTON\\' | translate }}        @if (isLoading) {                  }            @if (errorMsg) {                              {{ errorMsg }}                        }      @if (isSuccess) {                              {{ isSuccess }}                        }              {{ \\'REGISTER.HAVE_ACCOUNT\\' | translate }}              {{ \\'REGISTER.LOGIN_LINK\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'CheckOutComponent', 'selector': 'app-check-out'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchPipe.html":{"url":"pipes/SearchPipe.html","title":"pipe - SearchPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Shared/Pipes/search.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        search\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(groups: any[], word: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Shared/Pipes/search.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                groups\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                        \n                                                word\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search',\n  standalone: true\n})\nexport class SearchPipe implements PipeTransform {\n  transform(groups: any[] = [], word: string = ''): any[] {\n    if (!word.trim()) return groups; \n    return groups.filter((item) =>\n      item.title?.toLowerCase().includes(word.toLowerCase())\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory.html":{"url":"interfaces/Subcategory.html","title":"interface - Subcategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Shared/Interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string;\n  cartOwner: string;\n  products: CartItem[];\n  totalCartPrice: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface CartItem {\n  _id: string;\n  product: Product;\n  count: number;\n  price: number;\n}\n\nexport interface Product {\n  _id: string;\n  title: string;\n  quantity: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  subcategory: Subcategory[];\n}\n\nexport interface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\nexport interface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string; // هنا ممكن يكون اسم الـ category أو الـ category _id\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory-1.html":{"url":"interfaces/Subcategory-1.html","title":"interface - Subcategory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Shared/Interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IProduct {\n  sold: number;\n  images: string[];\n  subcategory: Subcategory[];\n  ratingsQuantity: number;\n  _id: string;\n  title: string;\n  slug: string;\n  description: string;\n  quantity: number;\n  price: number;\n  imageCover: string;\n  category: Category;\n  brand: Category;\n  ratingsAverage: number;\n  createdAt: string;\n  updatedAt: string;\n  id: string;\n}\n\ninterface Category {\n  _id: string;\n  name: string;\n  slug: string;\n  image: string;\n}\n\ninterface Subcategory {\n  _id: string;\n  name: string;\n  slug: string;\n  category: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TermtextPipe.html":{"url":"pipes/TermtextPipe.html","title":"pipe - TermtextPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TermtextPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/Shared/Pipes/termtext.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        termtext\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(text: string, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/Shared/Pipes/termtext.pipe.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'termtext'\n})\nexport class TermtextPipe implements PipeTransform {\n\n  transform(text : string ,limit :number): string {\n    return  text.split(' ', limit).join(' ');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/Core/Environment/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/Guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/Guards/logged.guard.ts\n            \n            variable\n            loggedGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/Interceptors/Errors/errors.interceptor.ts\n            \n            variable\n            errorsInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/Interceptors/Headers/header.interceptor.ts\n            \n            variable\n            headerInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/Interceptors/Loading/loading.interceptor.ts\n            \n            variable\n            loadingInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Core/Services/Auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/Core/Services/Brands/brands.service.ts\n            \n            injectable\n            BrandsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/Core/Services/Cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/Core/Services/Categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/Core/Services/Flowbite/flowbite.service.ts\n            \n            injectable\n            FlowbiteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/Core/Services/MyTranslate/my-translate.service.ts\n            \n            injectable\n            MyTranslateService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/Core/Services/Orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/Core/Services/Products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/Core/Utilities/httpLoadFiles.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Layouts/auth-layout/auth-layout.component.ts\n            \n            component\n            AuthLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Layouts/blank-layout/blank-layout.component.ts\n            \n            component\n            BlankLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Layouts/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Layouts/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/app/Pages/brands/brands.component.ts\n            \n            component\n            BrandsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/Pages/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                        src/app/Pages/categories/categories.component.ts\n            \n            component\n            CategoriesComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/Pages/check-out/check-out.component.ts\n            \n            component\n            CheckOutComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/app/Pages/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/Pages/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/app/Pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                        src/app/Pages/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/Pages/notfound/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Pages/products/products.component.ts\n            \n            component\n            ProductsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/Pages/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/app/Shared/Interfaces/icart.ts\n            \n            interface\n            CartItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/Shared/Interfaces/icart.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/Shared/Interfaces/icart.ts\n            \n            interface\n            ICart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/Shared/Interfaces/icart.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/Shared/Interfaces/icart.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/Shared/Interfaces/icategory.ts\n            \n            interface\n            ICategory\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/Shared/Interfaces/iproduct.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/Shared/Interfaces/iproduct.ts\n            \n            interface\n            IProduct\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                        src/app/Shared/Interfaces/iproduct.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/Shared/Pipes/search.pipe.ts\n            \n            pipe\n            SearchPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/Shared/Pipes/termtext.pipe.ts\n            \n            pipe\n            TermtextPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/ibrand.ts\n            \n            interface\n            IBrand\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.2.15\n        \n            @angular/common : ^19.2.15\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.15\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.15\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/ssr : ^19.2.17\n        \n            @fortawesome/fontawesome-free : ^7.0.1\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @primeng/themes : ^19.1.4\n        \n            @sweetalert2/ngx-sweetalert2 : ^14.0.0\n        \n            express : ^4.18.2\n        \n            flowbite : ^3.1.2\n        \n            jwt-decode : ^4.0.0\n        \n            ngx-owl-carousel-o : ^19.0.0\n        \n            ngx-spinner : ^19.0.0\n        \n            ngx-toastr : ^19.1.0\n        \n            primeng : ^19.1.4\n        \n            rxjs : ~7.8.0\n        \n            sweetalert2 : ^11.26.2\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../httpLoadFiles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/Core/Utilities/httpLoadFiles.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nECommerce\nThis project was generated using Angular CLI version 19.2.17.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errorsInterceptor   (src/.../errors.interceptor.ts)\n                        \n                        \n                            headerInterceptor   (src/.../header.interceptor.ts)\n                        \n                        \n                            loadingInterceptor   (src/.../loading.interceptor.ts)\n                        \n                        \n                            loggedGuard   (src/.../logged.guard.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideSweetAlert2({\n      // Optional configuration\n      fireOnInit: false,\n      dismissOnDestroy: true,\n    }),\n    provideToastr(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(\n      routes,\n      withViewTransitions(),\n      withHashLocation(),\n      withInMemoryScrolling({ scrollPositionRestoration: 'top' })\n    ),\n    BrowserAnimationsModule,\n    provideAnimations(),\n    provideClientHydration(withEventReplay()),\n    provideHttpClient(withFetch(), withInterceptors([headerInterceptor,errorsInterceptor,loadingInterceptor])),\n    provideAnimationsAsync(),\n    providePrimeNG({\n      theme: {\n        preset: Aura,},}), \n        importProvidersFrom(NgxSpinnerModule,TranslateModule.forRoot({\n          loader: {\n            provide: TranslateLoader,\n            useFactory: HttpLoaderFactory,\n            deps: [HttpClient],\n          },\n        }))\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/Guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n\n  const router =inject(Router)\n  const id =inject(PLATFORM_ID)\n\nif (isPlatformBrowser(id)) {\n  \nif (localStorage.getItem('userToken')!== null) {\n  return true\n}else{\n   router.navigate(['/login'])\n  return false\n}\n  \n}\nelse{\n  return false\n}\n\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (context: BootstrapContext) =>\n    bootstrapApplication(AppComponent, config, context)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes),\n        provideClientHydration(),\n\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/Environment/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    basUrl:'https://ecommerce.routemisr.com'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/Interceptors/Errors/errors.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorsInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n\n  const toastrService=inject(ToastrService)\n\n\n  return next(req).pipe(\n    catchError((err) => {\n     \n        toastrService.error(err.error.message)\n\n\n      return throwError(() => err);\n    })\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/Interceptors/Headers/header.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        headerInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n\n\n   if (localStorage.getItem('userToken')) {\n   if (req.url.includes('cart')||req.url.includes('orders')||req.url.includes('wishlist')) {\n      req = req.clone({\n      setHeaders:{\n        token: localStorage.getItem('userToken')!\n      }\n    });\n   }\n    \n   }\n\n\n  return next(req);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/Interceptors/Loading/loading.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadingInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\nconst ngxSpinnerService=inject(NgxSpinnerService);\n\nngxSpinnerService.show();\n\n  return next(req).pipe(finalize(()=>{\n    ngxSpinnerService.hide();\n  }))\n}\n                    \n                \n\n\n        \n    \n\n    src/app/Core/Guards/logged.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggedGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n const router =inject(Router)\n  const id =inject(PLATFORM_ID)\n\n  if (isPlatformBrowser(id)) {\n    \nif (localStorage.getItem('userToken')!== null) {\n  router.navigate(['/home'])\n  return false\n}else{\n  return true\n}\n    \n  }else{\n    return false\n  }\n\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n\n  { path: '', component: AuthLayoutComponent, canActivate: [loggedGuard],\n    children: [\n      { path: 'login', component: LoginComponent, title: 'Login' },\n      { path: 'register', component: RegisterComponent, title: 'Register' },\n      { path: 'forget', component: ForgetPasswordComponent, title: 'Reset Password 🔐' },\n    ]\n  },\n\n  { path: '', component: BlankLayoutComponent, canActivate: [authGuard] ,\n    children: [\n      { path: 'home', loadComponent: () => \"import('./Pages/home/home.component').then(m => m.HomeComponent)\", title: 'Home' },\n      { path: 'products', loadComponent: () => \"import('./Pages/products/products.component').then(m => m.ProductsComponent)\", title: 'Products' },\n      { path: 'brands', loadComponent: () => \"import('./Pages/brands/brands.component').then(m => m.BrandsComponent)\", title: 'Brands' },\n      { path: 'categories', loadComponent: () => \"import('./Pages/categories/categories.component').then(m => m.CategoriesComponent)\", title: 'Categories' },\n      { path: 'cart', loadComponent: () => \"import('./Pages/cart/cart.component').then(m => m.CartComponent)\", title: 'Cart' },\n      { path: 'checkout/:id', loadComponent: () => \"import('./Pages/check-out/check-out.component').then(m => m.CheckOutComponent)\", title: 'Checkout' },\n      { path: 'details/:id', loadComponent: () => \"import('./Pages/details/details.component').then(m => m.DetailsComponent)\", title: 'Details' },\n      { path: '**', component: NotfoundComponent, title: 'Not Found' },\n    ]\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
